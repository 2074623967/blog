2020-05-20 14:05:25.853 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 4944 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:05:25.892 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:05:31.630 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:05:31.722 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 74ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:05:33.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$c682aa7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:33.729 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:33.747 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$acd5e8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:33.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$93ad8d38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:33.767 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:05:33.970 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:34.040 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:34.113 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:39.745 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:05:39.749 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:39.954 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:40.973 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.004 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.028 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.037 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.041 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:41.296 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:05:43.016 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:05:43.050 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:05:43.052 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:05:43.052 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:05:43.890 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:05:43.891 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 17454 ms
2020-05-20 14:05:47.448 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:05:48.957 INFO  [cluster-ClusterId{value='5ec4c8bb8d2402567fbb26e3', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:05:51.565 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:05:51.615 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:05:51.640 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 30.172 seconds (JVM running for 35.395)
2020-05-20 14:11:00.021 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:11:00.025 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:11:00.138 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 111 ms
2020-05-20 14:11:00.667 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:11:00.669 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:11:00.673 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:11:00.677 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:11:00.678 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:11:01.193 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 526
2020-05-20 14:11:01.380 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"B8C94C8020DA586221B646AACF679DCB"},"msg":"操作成功！"}
2020-05-20 14:13:11.770 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:13:11.771 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:13:11.772 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:13:11.773 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:13:11.774 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:13:59.731 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:13:59.733 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:13:59.733 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:13:59.736 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:13:59.736 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:14:29.027 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:14:29.029 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:14:29.029 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:14:29.030 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:14:29.030 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:18:35.376 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 3952 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:18:35.468 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:18:38.647 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:18:38.731 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 72ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:18:39.576 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b5fabe25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.663 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.685 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9c4dfca1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.692 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8325a0e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.700 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:18:39.797 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.841 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:39.897 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:44.816 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:18:44.818 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:44.955 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.398 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.407 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.430 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.492 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.542 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:18:45.990 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:18:46.002 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:18:46.003 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:18:46.004 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:18:46.205 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:18:46.205 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10259 ms
2020-05-20 14:18:47.794 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:18:48.860 INFO  [cluster-ClusterId{value='5ec4cbc777d03f5601255ae8', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:18:48.882 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:18:48.915 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:18:48.928 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.939 seconds (JVM running for 18.51)
2020-05-20 14:20:16.511 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:20:16.513 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:20:16.536 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-05-20 14:20:16.674 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:20:16.675 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:20:16.676 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:20:16.680 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:20:16.681 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:20:16.905 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 231
2020-05-20 14:20:17.025 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"F316E0DA1A6307EF083E2D472EF721AB"},"msg":"操作成功！"}
2020-05-20 14:20:42.939 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:20:42.940 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:20:42.941 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:20:42.943 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:20:42.944 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:24:34.015 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 18664 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:24:34.023 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:24:36.405 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:24:36.460 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 45ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:24:37.197 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bf9ee7bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.288 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.306 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a5f22639] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.314 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8cc9ca7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.319 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:24:37.385 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.414 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:37.459 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:41.905 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:24:41.906 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.011 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.394 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.405 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.425 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.430 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.484 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:42.528 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:24:43.012 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:24:43.027 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:24:43.028 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:24:43.029 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:24:43.233 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:24:43.233 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8985 ms
2020-05-20 14:24:44.693 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:24:45.742 INFO  [cluster-ClusterId{value='5ec4cd2c73c27c2fb61270ee', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:24:45.932 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:24:46.000 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:24:46.038 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 13.76 seconds (JVM running for 16.205)
2020-05-20 14:25:34.200 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:25:34.200 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:25:34.223 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-05-20 14:25:34.386 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:25:34.386 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:25:34.389 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:25:34.392 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:25:34.393 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:25:34.611 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 226
2020-05-20 14:25:34.703 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"E80D62881C5F41825345B0EB3199566A"},"msg":"操作成功！"}
2020-05-20 14:25:58.554 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:25:58.555 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:25:58.556 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:25:58.556 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:25:58.557 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:29:07.538 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 9884 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:29:07.550 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:29:09.268 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:29:09.323 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 47ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:29:09.897 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$db0422ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:09.967 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:09.988 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c1576127] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:09.994 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a82f0569] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:10.001 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:29:10.094 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:10.124 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:10.161 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.513 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:29:14.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.609 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.967 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.989 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.995 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.997 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:14.999 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:15.046 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:15.083 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:29:15.496 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:29:15.509 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:29:15.511 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:29:15.512 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:29:15.700 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:29:15.702 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8039 ms
2020-05-20 14:29:17.161 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:29:18.215 INFO  [cluster-ClusterId{value='5ec4ce3d3d56945f9de91380', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:29:18.249 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:29:18.281 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:29:18.294 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.9 seconds (JVM running for 14.001)
2020-05-20 14:30:00.659 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:30:00.660 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:30:00.691 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 30 ms
2020-05-20 14:30:00.859 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:30:00.860 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:30:00.861 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:30:00.864 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:30:00.865 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:30:01.130 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 271
2020-05-20 14:30:01.256 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"D786FACCC5E0C1C9E656C63C422DF64E"},"msg":"操作成功！"}
2020-05-20 14:30:40.051 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:30:40.052 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:30:40.053 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:30:40.054 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:30:40.055 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:33:32.524 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 3972 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:33:32.666 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:33:36.745 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:33:36.829 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 70ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:33:37.648 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$d9ad33f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.740 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.763 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c000726d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.770 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a6d816af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.775 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:33:37.878 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.924 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:37.980 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.214 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:33:43.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.632 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.642 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.653 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.661 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.664 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.666 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.722 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:43.787 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:33:44.315 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:33:44.330 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:33:44.331 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:33:44.332 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:33:44.504 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:33:44.505 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 11608 ms
2020-05-20 14:33:46.027 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:33:47.089 INFO  [cluster-ClusterId{value='5ec4cf4a8d38d55bb1df7330', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:33:47.805 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:33:47.852 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:33:47.875 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 17.422 seconds (JVM running for 20.118)
2020-05-20 14:35:26.202 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:35:26.203 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:35:26.238 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 34 ms
2020-05-20 14:35:26.468 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:35:26.469 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:35:26.471 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:35:26.474 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:35:26.475 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:35:26.750 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 282
2020-05-20 14:35:26.880 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"10ECCAA2055116F1086762D88D5FDFED"},"msg":"操作成功！"}
2020-05-20 14:35:54.050 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:35:54.052 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:35:54.053 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:35:54.054 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:35:54.055 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:37:43.051 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 16516 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:37:43.060 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:37:46.442 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:37:46.514 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 55ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:37:47.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$173699d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.405 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.431 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$fd89d852] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.438 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e4617c94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.445 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:37:47.546 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.577 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:47.623 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:52.574 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:37:52.575 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:52.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.094 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.103 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.122 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.130 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.135 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.136 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.225 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:37:53.723 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:37:53.736 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:37:53.739 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:37:53.740 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:37:53.967 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:37:53.968 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10394 ms
2020-05-20 14:37:55.594 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:37:56.641 INFO  [cluster-ClusterId{value='5ec4d043c2af2f56fc4f5daf', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:37:56.722 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:37:56.756 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:37:56.769 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 15.656 seconds (JVM running for 18.227)
2020-05-20 14:38:15.229 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:38:15.229 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:38:15.258 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 28 ms
2020-05-20 14:38:15.451 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:38:15.452 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:38:15.453 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:38:15.456 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:38:15.456 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:38:15.695 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 245
2020-05-20 14:38:15.807 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"FAEB27E8C45B153FEA9C0EA8FF7FAC63"},"msg":"操作成功！"}
2020-05-20 14:38:35.424 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:38:35.426 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:38:35.427 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:38:35.428 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:38:35.429 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:38:35.575 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 151
2020-05-20 14:38:35.576 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 14:44:22.564 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/getByPage
2020-05-20 14:44:22.567 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:44:22.567 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:44:22.568 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getByPage
2020-05-20 14:44:22.569 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=create_time, sortMethod=desc)]
2020-05-20 14:45:41.774 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 3864 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:45:41.809 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:45:44.121 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:45:44.177 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 48ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:45:44.860 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$70338151] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:44.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:44.968 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5686bfcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:44.975 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3d5e640f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:44.987 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:45:45.249 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:45.352 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:45.454 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.049 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:45:50.050 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.152 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.545 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.554 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.559 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.612 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:50.653 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:45:51.279 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:45:51.295 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:45:51.298 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:45:51.299 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:45:51.510 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:45:51.511 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9436 ms
2020-05-20 14:45:53.690 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:45:54.752 INFO  [cluster-ClusterId{value='5ec4d22167a0bc693b96de61', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:45:55.685 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:45:55.730 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:45:55.752 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 15.233 seconds (JVM running for 17.744)
2020-05-20 14:46:19.023 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:46:19.027 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:46:19.105 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 75 ms
2020-05-20 14:46:19.472 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:46:19.473 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:46:19.475 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:46:19.478 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:46:19.481 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:46:19.810 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 339
2020-05-20 14:46:19.992 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"3678138E0C185D9A8EA8F0AC04B1D6FD"},"msg":"操作成功！"}
2020-05-20 14:46:42.460 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/getByPage
2020-05-20 14:46:42.462 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:46:42.463 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:46:42.465 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getByPage
2020-05-20 14:46:42.466 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=create_time, sortMethod=desc)]
2020-05-20 14:47:29.260 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:47:29.261 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:47:29.262 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:47:29.263 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:47:29.264 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:47:29.377 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 117
2020-05-20 14:47:29.378 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"3678138E0C185D9A8EA8F0AC04B1D6FD"},"msg":"操作成功！"}
2020-05-20 14:47:49.233 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/getByPage
2020-05-20 14:47:49.234 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:47:49.235 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:47:49.236 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getByPage
2020-05-20 14:47:49.236 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 14:47:49.517 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 284
2020-05-20 14:47:49.547 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试关于","createdTime":"2020-05-20 06:38:36","enable":0,"updateTime":"2020-05-20 06:38:36"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-05-20 14:50:30.935 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/update
2020-05-20 14:50:30.937 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 14:50:30.937 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:50:30.938 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.update
2020-05-20 14:50:30.938 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试修改, aboutContent=修改内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:51:16.505 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:51:16.506 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:51:16.507 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:51:16.509 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:51:16.509 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于1, aboutContent=测试内容1, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:51:16.652 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 147
2020-05-20 14:51:16.653 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 14:51:24.199 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/save
2020-05-20 14:51:24.200 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:51:24.201 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:51:24.201 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.save
2020-05-20 14:51:24.202 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=null, aboutTitle=测试关于2, aboutContent=测试内容2, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:51:24.345 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 146
2020-05-20 14:51:24.345 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 14:52:26.908 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/update
2020-05-20 14:52:26.909 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 14:52:26.910 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:52:26.911 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.update
2020-05-20 14:52:26.911 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=1, aboutTitle=测试修改, aboutContent=测试修改, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]
2020-05-20 14:53:01.983 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/update
2020-05-20 14:53:01.983 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 14:53:01.984 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:53:01.985 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.update
2020-05-20 14:53:01.986 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=1, aboutTitle=测试修改, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=1, enable=null, deleted=null)]
2020-05-20 14:56:29.594 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 17116 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 14:56:29.676 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 14:56:32.000 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 14:56:32.059 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 50ms. Found 0 MongoDB repository interfaces.
2020-05-20 14:56:32.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$55919f9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:32.783 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:32.803 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3be4de18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:32.812 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$22bc825a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:32.824 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 14:56:32.949 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:32.978 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:33.020 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:37.676 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 14:56:37.677 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:37.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.132 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.144 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.155 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.162 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.165 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.169 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.347 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 14:56:38.930 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 14:56:38.941 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 14:56:38.941 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 14:56:38.942 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 14:56:39.104 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 14:56:39.105 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9312 ms
2020-05-20 14:56:41.585 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 14:56:42.853 INFO  [cluster-ClusterId{value='5ec4d4a910b6450f5a11eddd', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 14:56:43.211 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 14:56:43.253 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 14:56:43.271 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.928 seconds (JVM running for 17.026)
2020-05-20 14:57:01.174 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 14:57:01.175 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 14:57:01.197 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-05-20 14:57:01.391 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 14:57:01.392 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 14:57:01.394 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:57:01.396 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 14:57:01.397 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 14:57:01.639 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 248
2020-05-20 14:57:01.771 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"95904ABD4A45BFF54DB80AF26B38AF0A"},"msg":"操作成功！"}
2020-05-20 14:57:19.539 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/update
2020-05-20 14:57:19.540 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 14:57:19.540 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:57:19.541 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.update
2020-05-20 14:57:19.542 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[About(aboutId=1, aboutTitle=测试修改, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=1, enable=null, deleted=null)]
2020-05-20 14:57:19.737 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 199
2020-05-20 14:57:19.738 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"更新成功"}
2020-05-20 14:58:30.645 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/delete/1
2020-05-20 14:58:30.646 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : DELETE
2020-05-20 14:58:30.647 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:58:30.648 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.delete
2020-05-20 14:58:30.648 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 14:58:30.790 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 145
2020-05-20 14:58:30.791 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"删除成功"}
2020-05-20 14:58:52.463 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/delete/1
2020-05-20 14:58:52.464 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : DELETE
2020-05-20 14:58:52.465 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 14:58:52.466 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.delete
2020-05-20 14:58:52.466 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 14:58:52.609 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 146
2020-05-20 14:58:52.612 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"删除成功"}
2020-05-20 15:02:29.228 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/get/1
2020-05-20 15:02:29.231 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:02:29.231 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:02:29.232 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getById
2020-05-20 15:02:29.232 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:02:29.338 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 110
2020-05-20 15:02:29.340 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 15:02:52.216 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/get/1
2020-05-20 15:02:52.217 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:02:52.218 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:02:52.219 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getById
2020-05-20 15:02:52.220 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:02:52.312 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 96
2020-05-20 15:02:52.313 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 15:04:33.956 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/get/1
2020-05-20 15:04:33.959 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:04:33.959 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:04:33.960 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getById
2020-05-20 15:04:33.960 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:04:34.066 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 110
2020-05-20 15:04:34.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 15:06:49.273 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/get/2
2020-05-20 15:06:49.273 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:06:49.274 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:06:49.275 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.getById
2020-05-20 15:06:49.275 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[2]
2020-05-20 15:06:49.385 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 112
2020-05-20 15:06:49.400 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"aboutContent":"测试内容1","aboutId":2,"aboutRead":0,"aboutTitle":"测试关于1","createdTime":"2020-05-20 06:51:17","updateTime":"2020-05-20 06:51:17","version":1},"msg":"操作成功！"}
2020-05-20 15:08:47.519 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:08:47.520 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:08:47.520 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:08:47.521 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:08:47.522 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:10:02.986 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:10:02.987 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:10:02.988 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:10:02.989 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:10:02.989 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:16:28.314 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 10292 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:16:28.322 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:16:31.317 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:16:31.365 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 41ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:16:32.107 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b7301734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.222 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9d8355b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.252 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$845af9f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.258 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:16:32.387 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.414 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:32.448 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.078 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:16:37.079 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.180 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.683 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.691 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.703 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.709 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.712 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:37.801 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:16:38.282 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:16:38.292 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:16:38.293 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:16:38.295 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:16:38.490 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:16:38.491 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9969 ms
2020-05-20 15:16:40.414 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:16:41.486 INFO  [cluster-ClusterId{value='5ec4d958912d13738fae63b4', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:16:41.809 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:16:41.846 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:16:41.861 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.902 seconds (JVM running for 18.48)
2020-05-20 15:16:49.210 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:16:49.211 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:16:49.237 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 25 ms
2020-05-20 15:16:49.443 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:16:49.444 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:16:49.449 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:16:49.453 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:16:49.453 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:16:49.715 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 272
2020-05-20 15:16:49.840 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"40F421CAC199EE6EDEF812DDB8E197DD"},"msg":"操作成功！"}
2020-05-20 15:17:17.963 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:17:17.964 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:17:17.965 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:17:17.969 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:17:17.970 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:20:46.950 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:20:46.953 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:20:46.954 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:20:46.955 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:20:46.955 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:22:03.779 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:22:03.780 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:22:03.781 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:22:03.782 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:22:03.783 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:25:51.429 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 11508 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:25:51.440 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:25:53.813 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:25:53.880 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 57ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:25:54.649 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$a4fc1f83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.741 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.763 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b4f5dff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.774 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$72270241] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.780 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:25:54.878 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.914 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:54.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:25:59.864 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:25:59.865 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.883 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.910 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.931 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.947 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:00.958 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:01.124 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:01.312 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:26:02.106 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:26:02.128 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:26:02.130 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:26:02.131 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:26:02.449 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:26:02.450 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10709 ms
2020-05-20 15:26:05.068 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:26:06.275 INFO  [cluster-ClusterId{value='5ec4db8d7226603f371e4340', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:26:07.232 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:26:07.279 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:26:07.298 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 17.356 seconds (JVM running for 20.431)
2020-05-20 15:26:11.617 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:26:11.618 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:26:11.651 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 32 ms
2020-05-20 15:26:11.843 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:26:11.844 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:26:11.845 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:26:11.848 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:26:11.848 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:26:12.114 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 271
2020-05-20 15:26:12.253 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"CF6883291E6C183CE0E7B89E1541404D"},"msg":"操作成功！"}
2020-05-20 15:26:32.606 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:26:32.607 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:26:32.608 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:26:32.609 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:26:32.611 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:27:35.952 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:27:35.953 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:27:35.954 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:27:35.955 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:27:35.955 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:31:18.300 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:31:18.301 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:31:18.302 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:31:18.303 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:31:18.304 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:32:06.082 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:32:06.083 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:32:06.083 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:32:06.084 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:32:06.085 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:39:38.570 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:39:38.586 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:39:38.587 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:39:38.587 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:39:38.588 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:39:44.792 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:39:44.794 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:39:44.794 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:39:44.796 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:39:44.797 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:42:22.908 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 2204 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:42:22.918 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:42:24.914 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:42:25.004 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 78ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:42:25.694 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7dd3f22f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:25.782 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:25.803 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$642730ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:25.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4afed4ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:25.819 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:42:25.919 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:25.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:26.001 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:30.849 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:42:30.850 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.040 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.543 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.592 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.600 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.692 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:31.763 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:42:32.287 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:42:32.302 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:42:32.304 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:42:32.304 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:42:32.534 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:42:32.535 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9487 ms
2020-05-20 15:42:34.241 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:42:35.311 INFO  [cluster-ClusterId{value='5ec4df6a64c3784b61eeb92f', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:42:36.570 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:42:36.629 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:42:36.651 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 15.439 seconds (JVM running for 17.832)
2020-05-20 15:42:36.794 INFO  [http-nio-1001-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:42:36.795 INFO  [http-nio-1001-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:42:36.823 INFO  [http-nio-1001-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 27 ms
2020-05-20 15:42:37.070 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:42:37.071 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:42:37.073 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-20 15:42:37.076 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:42:37.079 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:42:37.342 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 274
2020-05-20 15:42:37.504 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"D54A9E1179B1CC24A62717C4C027101D"},"msg":"操作成功！"}
2020-05-20 15:42:58.357 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:42:58.358 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:42:58.360 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-20 15:42:58.362 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:42:58.363 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:46:00.081 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 17404 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:46:00.089 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:46:01.383 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:46:01.437 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 43ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:46:02.341 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$354f0756] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.418 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.438 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1ba245d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.444 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$279ea14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.450 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:46:02.557 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.589 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:02.626 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.181 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:46:07.182 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.273 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.699 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.708 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.722 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.728 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.731 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.734 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.795 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:07.831 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:46:08.350 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:46:08.366 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:46:08.367 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:46:08.368 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:46:08.571 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:46:08.572 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8385 ms
2020-05-20 15:46:10.297 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:46:11.360 INFO  [cluster-ClusterId{value='5ec4e042e8114c6bae0eefb2', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:46:11.618 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:46:11.673 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:46:11.689 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 12.889 seconds (JVM running for 17.778)
2020-05-20 15:46:23.706 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:46:23.707 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:46:23.732 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 25 ms
2020-05-20 15:46:24.010 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:46:24.014 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:46:24.016 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:46:24.020 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:46:24.021 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:46:24.306 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 296
2020-05-20 15:46:24.448 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"726B7F5B95CD837B45542E9D192CEC0D"},"msg":"操作成功！"}
2020-05-20 15:47:48.149 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:47:48.151 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:47:48.153 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:47:48.154 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:47:48.155 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:47:49.223 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 15:47:49.237 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 15:47:57.648 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 11008 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:47:57.656 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:47:59.972 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:48:00.034 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 53ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:48:00.824 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b071262b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:00.928 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:00.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$96c464a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:00.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7d9c08e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:00.965 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:48:01.062 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:01.092 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:01.129 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.061 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:48:06.062 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.181 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.733 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.742 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.762 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.768 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.839 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:06.891 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:48:07.465 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:48:07.485 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:48:07.486 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:48:07.487 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:48:07.735 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:48:07.737 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9793 ms
2020-05-20 15:48:09.794 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:48:10.865 INFO  [cluster-ClusterId{value='5ec4e0b9150d6b355cc2c9dd', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:48:11.395 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:48:11.442 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:48:11.466 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 15.941 seconds (JVM running for 19.8)
2020-05-20 15:48:11.968 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:48:11.970 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:48:12.033 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 63 ms
2020-05-20 15:48:12.365 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:48:12.365 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:48:12.367 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-20 15:48:12.372 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:48:12.373 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:48:12.710 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 346
2020-05-20 15:48:12.869 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"C0ACD628FBA8851C3C40E7D0C7F71CBD"},"msg":"操作成功！"}
2020-05-20 15:48:33.777 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:48:33.778 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:48:33.779 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-20 15:48:33.781 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:48:33.782 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:49:57.132 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 15:49:57.145 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 15:50:12.841 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 17784 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:50:12.851 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:50:15.584 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:50:15.647 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 47ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:50:16.665 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$e9068983] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:16.771 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:16.795 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$cf59c7ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:16.804 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$b6316c41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:16.816 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:50:16.941 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:16.985 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:17.026 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.205 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:50:23.206 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.316 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.879 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.894 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.913 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.928 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:23.934 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:24.062 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:24.168 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:50:24.856 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:50:24.874 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:50:24.875 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:50:24.876 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:50:25.088 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:50:25.088 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 12005 ms
2020-05-20 15:50:26.890 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:50:27.976 INFO  [cluster-ClusterId{value='5ec4e1427ce25568b56eb11b', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:50:28.560 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:50:28.603 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:50:28.619 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 17.714 seconds (JVM running for 20.57)
2020-05-20 15:50:30.099 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:50:30.100 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:50:30.142 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 41 ms
2020-05-20 15:50:30.397 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:50:30.399 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:50:30.400 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:50:30.405 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:50:30.405 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:50:30.675 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 279
2020-05-20 15:50:30.797 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"D33629AB8A620AF377FEF510D187CCC0"},"msg":"操作成功！"}
2020-05-20 15:50:48.139 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:50:48.140 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:50:48.140 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:50:48.141 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:50:48.143 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:51:40.730 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 15:51:40.756 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 15:51:51.131 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 5500 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:51:51.140 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:51:53.553 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:51:53.639 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 69ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:51:54.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$3be2d603] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.581 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2236147f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.590 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$90db8c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.597 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:51:54.699 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.739 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:54.830 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:59.761 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:51:59.762 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:51:59.884 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.450 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.463 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.488 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.508 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.607 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:00.721 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:52:01.475 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:52:01.494 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:52:01.497 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:52:01.497 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:52:01.789 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:52:01.790 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10435 ms
2020-05-20 15:52:04.423 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:52:05.526 INFO  [cluster-ClusterId{value='5ec4e1a46b9e7057c0251ab8', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:52:06.455 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:52:06.503 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:52:06.525 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 17.135 seconds (JVM running for 20.415)
2020-05-20 15:52:13.329 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:52:13.330 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:52:13.362 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 31 ms
2020-05-20 15:52:13.578 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:52:13.579 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:52:13.580 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:52:13.584 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:52:13.585 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:52:13.876 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 298
2020-05-20 15:52:14.012 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"D37CB920359AB9FA58F2E89CECECA059"},"msg":"操作成功！"}
2020-05-20 15:52:35.137 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:52:35.138 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:52:35.138 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:52:35.138 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:52:35.139 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 15:56:35.513 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 15:56:35.526 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 15:56:47.722 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 352 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 15:56:47.731 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 15:56:49.820 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 15:56:49.871 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 43ms. Found 0 MongoDB repository interfaces.
2020-05-20 15:56:50.531 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$2094c668] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.633 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.654 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6e804e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.660 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$edbfa926] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.666 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 15:56:50.753 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.778 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:50.822 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.415 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 15:56:55.415 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.910 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.933 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.942 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.946 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:55.948 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:56.018 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:56.058 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 15:56:56.548 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 15:56:56.562 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 15:56:56.563 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 15:56:56.565 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 15:56:56.743 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 15:56:56.743 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8824 ms
2020-05-20 15:56:58.385 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 15:56:59.449 INFO  [cluster-ClusterId{value='5ec4e2ca027d4d49ed9fdb6a', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 15:56:59.760 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 15:56:59.804 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 15:56:59.819 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 13.454 seconds (JVM running for 15.946)
2020-05-20 15:57:33.472 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 15:57:33.473 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 15:57:33.498 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 25 ms
2020-05-20 15:57:33.684 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 15:57:33.685 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 15:57:33.686 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:57:33.689 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 15:57:33.690 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 15:57:33.969 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 285
2020-05-20 15:57:34.086 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"6C8B5AF3B2DF2341BF90BA097B01EC1C"},"msg":"操作成功！"}
2020-05-20 15:57:58.968 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/1
2020-05-20 15:57:58.969 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 15:57:58.970 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 15:57:58.970 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 15:57:58.970 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 16:00:46.876 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 16:00:46.891 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 16:00:56.031 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 7388 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 16:00:56.039 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 16:00:58.387 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 16:00:58.449 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 51ms. Found 0 MongoDB repository interfaces.
2020-05-20 16:00:59.219 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6cc87e3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.313 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.332 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$531bbcb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.338 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$39f360f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.344 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 16:00:59.429 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.452 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:00:59.489 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:05.391 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 16:01:05.393 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:05.491 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:05.997 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.021 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.027 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.031 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.033 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.097 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.135 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:01:06.661 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 16:01:06.676 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 16:01:06.678 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 16:01:06.678 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 16:01:06.901 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 16:01:06.901 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10695 ms
2020-05-20 16:01:09.010 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 16:01:10.088 INFO  [cluster-ClusterId{value='5ec4e3c5841f4b457a55a0d3', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 16:01:10.908 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 16:01:10.962 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 16:01:10.982 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 16.601 seconds (JVM running for 19.63)
2020-05-20 16:02:02.029 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 16:02:02.030 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 16:02:02.056 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 26 ms
2020-05-20 16:02:02.283 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 16:02:02.284 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 16:02:02.291 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:02:02.298 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 16:02:02.299 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 16:02:02.581 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 298
2020-05-20 16:02:02.704 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"4D89A29A78E2A6858A7A58EB8AE9C68A"},"msg":"操作成功！"}
2020-05-20 16:02:26.847 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/2
2020-05-20 16:02:26.848 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 16:02:26.849 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:02:26.849 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 16:02:26.850 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[2]
2020-05-20 16:03:45.765 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 78918
2020-05-20 16:03:45.765 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"已启用"}
2020-05-20 16:03:46.467 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-05-20 16:03:46.485 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-05-20 16:03:53.478 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 12900 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 16:03:53.486 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 16:03:55.847 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 16:03:55.891 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 37ms. Found 0 MongoDB repository interfaces.
2020-05-20 16:03:56.416 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$a2f4d5bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.487 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.506 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$89481437] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.513 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$701fb879] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.521 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 16:03:56.624 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:03:56.685 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.138 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 16:04:01.139 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.229 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.548 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.573 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.576 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.577 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.621 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:01.664 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:04:02.060 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 16:04:02.070 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 16:04:02.072 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 16:04:02.072 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 16:04:02.245 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 16:04:02.245 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8628 ms
2020-05-20 16:04:03.792 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 16:04:04.850 INFO  [cluster-ClusterId{value='5ec4e473ebcb122329c37d5b', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 16:04:05.191 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 16:04:05.252 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 16:04:05.273 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 12.994 seconds (JVM running for 15.062)
2020-05-20 16:04:18.015 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 16:04:18.017 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 16:04:18.038 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-05-20 16:04:20.615 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 16:04:20.616 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 16:04:20.617 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:04:20.620 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 16:04:20.620 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 16:04:20.867 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 252
2020-05-20 16:04:20.977 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"DA1D74FE01E569B283689E3CFDFF079F"},"msg":"操作成功！"}
2020-05-20 16:04:39.846 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/enabled/2
2020-05-20 16:04:39.848 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 16:04:39.849 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:04:39.850 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.enabled
2020-05-20 16:04:39.850 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[2]
2020-05-20 16:04:40.234 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 388
2020-05-20 16:04:40.236 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"已启用"}
2020-05-20 16:06:23.948 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/disabled/2
2020-05-20 16:06:23.949 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 16:06:23.949 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:06:23.950 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.disabled
2020-05-20 16:06:23.950 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[2]
2020-05-20 16:06:24.291 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 343
2020-05-20 16:06:24.298 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"未启用"}
2020-05-20 16:09:18.369 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:09:18.370 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:09:18.370 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:09:18.370 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:09:18.371 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:09:18.604 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 235
2020-05-20 16:09:18.605 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:25.745 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:25.746 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:25.747 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:25.747 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:25.748 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:26.357 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 612
2020-05-20 16:10:26.358 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:28.080 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:28.080 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:28.081 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:28.082 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:28.082 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:28.304 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 224
2020-05-20 16:10:28.305 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:29.965 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:29.965 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:29.966 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:29.967 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:29.967 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:30.202 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 237
2020-05-20 16:10:30.203 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:31.061 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:31.062 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:31.063 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:31.065 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:31.065 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:31.285 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 224
2020-05-20 16:10:31.285 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:32.050 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:32.051 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:32.051 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:32.052 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:32.052 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:32.281 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 231
2020-05-20 16:10:32.281 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:39.099 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:39.100 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:39.101 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:39.101 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:39.106 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:39.337 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 238
2020-05-20 16:10:39.338 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:40.784 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:40.787 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:40.798 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:40.798 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:40.799 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:41.030 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 246
2020-05-20 16:10:41.030 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:41.980 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:41.981 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:41.981 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:41.981 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:41.982 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:42.209 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 229
2020-05-20 16:10:42.209 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:43.004 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:43.005 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:43.006 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:43.006 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:43.007 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:43.239 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 235
2020-05-20 16:10:43.241 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:43.977 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:43.977 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:43.978 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:43.978 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:43.979 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:44.218 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 241
2020-05-20 16:10:44.219 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:10:44.722 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:10:44.722 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:10:44.723 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:10:44.723 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:10:44.724 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:10:44.975 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 253
2020-05-20 16:10:44.977 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:11:06.038 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 1840 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 16:11:06.069 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 16:11:08.172 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 16:11:08.212 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 32ms. Found 0 MongoDB repository interfaces.
2020-05-20 16:11:08.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$cadb5599] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.761 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.780 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b12e9415] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.785 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$98063857] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.790 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 16:11:08.887 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.911 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:08.949 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.436 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 16:11:13.436 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.816 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.825 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.834 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.839 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.842 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.844 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.889 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:13.920 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:11:14.331 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 16:11:14.341 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 16:11:14.342 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 16:11:14.342 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 16:11:14.498 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 16:11:14.499 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8271 ms
2020-05-20 16:11:16.514 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 16:11:17.578 INFO  [cluster-ClusterId{value='5ec4e624cec26607ef1b7b5f', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 16:11:18.312 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 16:11:18.348 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 16:11:18.364 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 13.76 seconds (JVM running for 15.965)
2020-05-20 16:11:56.459 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 16:11:56.460 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 16:11:56.481 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 20 ms
2020-05-20 16:11:56.647 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 16:11:56.648 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 16:11:56.649 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:11:56.652 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 16:11:56.653 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 16:11:56.928 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 282
2020-05-20 16:11:57.059 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"1E64C82E9E38D84727D81B6E41A67138"},"msg":"操作成功！"}
2020-05-20 16:12:18.315 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:12:18.316 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:12:18.317 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:12:18.318 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:12:18.319 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:12:18.573 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 258
2020-05-20 16:12:18.574 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"操作成功！"}
2020-05-20 16:12:36.156 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 20612 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 16:12:36.165 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 16:12:38.061 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 16:12:38.102 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 35ms. Found 0 MongoDB repository interfaces.
2020-05-20 16:12:38.965 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b7301734] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.045 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9d8355b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.079 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$845af9f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.085 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 16:12:39.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.221 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:39.279 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:43.753 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 16:12:43.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:43.851 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.181 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.190 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.203 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.209 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.212 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.270 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:44.323 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:48.726 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 11292 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 16:12:48.792 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 16:12:50.166 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 16:12:50.219 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 46ms. Found 0 MongoDB repository interfaces.
2020-05-20 16:12:50.747 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b3c8e2b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:50.821 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:50.838 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9a1c2135] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:50.844 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$80f3c577] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:50.853 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 16:12:50.940 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:50.967 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:51.002 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.054 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 16:12:55.055 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.140 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.493 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.504 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.514 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.519 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.522 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.579 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:55.612 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 16:12:56.007 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 16:12:56.018 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 16:12:56.019 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 16:12:56.020 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 16:12:56.182 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 16:12:56.183 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7276 ms
2020-05-20 16:12:57.594 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 16:12:58.638 INFO  [cluster-ClusterId{value='5ec4e689c12efb1725f5020d', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 16:12:58.668 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 16:12:58.700 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 16:12:58.712 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.06 seconds (JVM running for 13.298)
2020-05-20 16:13:44.916 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 16:13:44.916 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 16:13:44.933 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-05-20 16:13:45.095 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 16:13:45.095 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 16:13:45.097 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:13:45.099 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 16:13:45.100 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 16:13:45.337 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 243
2020-05-20 16:13:45.433 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"1688FC75C2B4C6D0DE81C40579093A99"},"msg":"操作成功！"}
2020-05-20 16:14:06.506 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /about/read
2020-05-20 16:14:06.507 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 16:14:06.508 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 16:14:06.509 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AboutController.read
2020-05-20 16:14:06.509 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-20 16:14:06.904 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 399
2020-05-20 16:14:06.911 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"aboutContent":"测试内容","aboutId":1,"aboutRead":1,"aboutTitle":"测试修改","createdTime":"2020-05-20 06:38:36","updateTime":"2020-05-20 08:12:41","version":2},"msg":"操作成功！"}
2020-05-20 17:13:27.965 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 22360 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 17:13:27.973 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 17:13:30.342 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 17:13:30.404 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 54ms. Found 0 MongoDB repository interfaces.
2020-05-20 17:13:31.015 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f15a2fd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.096 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.114 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d7ad6e50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$be851292] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.129 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 17:13:31.239 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.266 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:31.300 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:35.983 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 17:13:35.985 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.097 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.451 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.477 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.480 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.482 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.529 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:36.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:13:37.006 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 17:13:37.017 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 17:13:37.018 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 17:13:37.019 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 17:13:37.166 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 17:13:37.166 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8986 ms
2020-05-20 17:13:38.902 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 17:13:39.956 INFO  [cluster-ClusterId{value='5ec4f4c24402185144826570', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 17:13:40.033 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 17:13:40.073 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 17:13:40.087 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 13.478 seconds (JVM running for 15.927)
2020-05-20 17:15:15.585 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 17:15:15.586 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 17:15:15.605 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 18 ms
2020-05-20 17:15:15.744 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 17:15:15.745 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 17:15:15.746 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:15:15.748 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 17:15:15.749 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 17:15:16.086 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 342
2020-05-20 17:15:16.190 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"DF70413C1E2B77C966077822EB5E45A2"},"msg":"操作成功！"}
2020-05-20 17:15:39.985 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /log/delete/1
2020-05-20 17:15:39.986 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : DELETE
2020-05-20 17:15:39.987 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:15:39.988 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LogController.delete
2020-05-20 17:15:39.988 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 17:15:40.139 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 154
2020-05-20 17:15:40.140 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"删除成功！"}
2020-05-20 17:17:44.767 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /log/getByPage
2020-05-20 17:17:44.769 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 17:17:44.773 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:17:44.774 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LogController.getByPage
2020-05-20 17:17:44.774 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 17:18:38.496 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /log/getByPage
2020-05-20 17:18:38.497 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 17:18:38.498 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:18:38.498 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LogController.getByPage
2020-05-20 17:18:38.499 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 17:19:39.859 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 17196 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 17:19:39.898 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 17:19:42.767 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 17:19:42.831 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 57ms. Found 0 MongoDB repository interfaces.
2020-05-20 17:19:43.752 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6a185a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:43.870 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:43.901 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$506b98da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:43.910 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$37433d1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:43.929 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 17:19:44.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:44.181 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:44.222 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:48.886 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 17:19:48.887 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:48.995 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.473 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.491 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.503 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.506 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.579 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:49.642 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 17:19:50.126 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 17:19:50.136 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 17:19:50.137 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 17:19:50.138 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 17:19:50.299 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 17:19:50.300 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 10164 ms
2020-05-20 17:19:52.009 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 17:19:53.152 INFO  [cluster-ClusterId{value='5ec4f63866546873668e9d3f', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 17:19:53.182 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 17:19:53.216 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 17:19:53.229 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.885 seconds (JVM running for 18.694)
2020-05-20 17:20:15.716 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 17:20:15.717 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 17:20:15.739 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 22 ms
2020-05-20 17:20:15.889 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 17:20:15.889 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 17:20:15.890 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:20:15.892 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 17:20:15.892 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 17:20:16.122 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 234
2020-05-20 17:20:16.217 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"19145256B14E1E2EA447F1C98ADC1063"},"msg":"操作成功！"}
2020-05-20 17:20:37.619 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /log/getByPage
2020-05-20 17:20:37.620 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 17:20:37.620 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:20:37.621 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LogController.getByPage
2020-05-20 17:20:37.621 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 17:20:38.254 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 635
2020-05-20 17:20:38.287 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-17 13:23:06","logId":2,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.jg.blog.exception.BlogException: 发生了异常!\n\tat com.jg.blog.controller.TestController.testException(TestController.java:22)\n\tat com.jg.blog.controller.TestController$$FastClassBySpringCGLIB$$101168d8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:63)\n\tat com.jg.blog.controller.TestController$$EnhancerBySpringCGLIB$$7bae5fb.testException(<generated>)\n","logMethod":"GET","logParams":"[2]","logStatus":0,"logTime":0,"logUrl":"/test/testException/2"},{"createdTime":"2020-05-17 13:28:49","logId":3,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.jg.blog.exception.BlogException: 发生了异常!\n\tat com.jg.blog.controller.TestController.testException(TestController.java:22)\n\tat com.jg.blog.controller.TestController$$FastClassBySpringCGLIB$$101168d8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:63)\n\tat com.jg.blog.controller.TestController$$EnhancerBySpringCGLIB$$27141ded.testException(<generated>)\n","logMethod":"GET","logParams":"[2]","logStatus":0,"logTime":0,"logUrl":"/test/testException/2"},{"createdTime":"2020-05-17 13:49:52","logId":4,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.jg.blog.exception.BlogException: 发生了异常!\n\tat com.jg.blog.controller.TestController.testException(TestController.java:22)\n\tat com.jg.blog.controller.TestController$$FastClassBySpringCGLIB$$101168d8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.TestController$$EnhancerBySpringCGLIB$$147e05fe.testException(<generated>)\n","logMethod":"GET","logParams":"[2]","logStatus":0,"logTime":0,"logUrl":"/test/testException/2"},{"createdTime":"2020-05-18 06:02:29","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d8695ffa.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:03:59","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$2fe728d6.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:06:59","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$b318866c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:07:14","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$b318866c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:07:23","logId":9,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$b318866c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:08:36","logId":10,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$b318866c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:12:48","logId":11,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2bed104.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:13:50","logId":12,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$d2bed104.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:19:11","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$8f7fbbc2.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:22:14","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$e4783c0d.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:22:44","logId":15,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7580f84c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:49:55","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$fd1aee11.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:51:44","logId":17,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$56999544.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 06:58:53","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$8f254177.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:04:15","logId":19,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$2fe728d6.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:13:11","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.jg.blog.controller.AdminController.login(AdminController.java:37)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$7a875ca9.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:30:59","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DE4D51421030A2F3B55A82C748601A6B\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":395,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:42:17","logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DE4D51421030A2F3B55A82C748601A6B\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":211,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:43:56","logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DE4D51421030A2F3B55A82C748601A6B\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":114,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:51:04","logId":24,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DE4D51421030A2F3B55A82C748601A6B\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":113,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:53:10","logId":25,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"037D48FEC48EA88ECE02498E22FC1599\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":215,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:53:14","logId":26,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5,"logUrl":"/test/testException/1"},{"createdTime":"2020-05-18 07:55:23","logId":27,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"037D48FEC48EA88ECE02498E22FC1599\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":134,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:56:34","logId":28,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"037D48FEC48EA88ECE02498E22FC1599\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":108,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:58:45","logId":29,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"699AE6F00BB2057008396CC4B8594388\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":217,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:58:50","logId":30,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"699AE6F00BB2057008396CC4B8594388\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":111,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 07:58:52","logId":31,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":4,"logUrl":"/test/testException/1"},{"createdTime":"2020-05-18 07:58:59","logId":32,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"699AE6F00BB2057008396CC4B8594388\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":100,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 08:03:24","logId":33,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"699AE6F00BB2057008396CC4B8594388\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 08:05:42","logId":34,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"08614F331C2B05AAFCD12560DA96BF04\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":217,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 08:11:29","logId":35,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"08614F331C2B05AAFCD12560DA96BF04\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":137,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 08:12:07","logId":36,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"稽哥\",\"password\":\"\",\"signature\":\"热肠溶\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":9,"logUrl":"/admin/info"},{"createdTime":"2020-05-18 08:12:38","logId":37,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"稽哥\",\"password\":\"\",\"signature\":\"热肠溶\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-05-18 10:14:37","logId":38,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"324347939016B656696CF49CC0430578\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":300,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:15:03","logId":39,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"324347939016B656696CF49CC0430578\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":365,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:15:25","logId":40,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"324347939016B656696CF49CC0430578\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":336,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:25:48","logId":41,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":183,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:25:56","logId":42,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":106,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:26:05","logId":43,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":109,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:26:46","logId":44,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":115,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:26:48","logId":45,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":93,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:29:48","logId":46,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"132C43FE8EC9C5BE335385E8E23DCDBA\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":346,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:30:21","logId":47,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"132C43FE8EC9C5BE335385E8E23DCDBA\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":399,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:30:27","logId":48,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":255,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:30:29","logId":49,"logIp":"0:0:0:0:0:0:0:1","logMessage":"com.jg.blog.exception.BlogException: 改分类已经存在\n\tat com.jg.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:35)\n\tat com.jg.blog.controller.TypeController.save(TypeController.java:35)\n\tat com.jg.blog.controller.TypeController$$FastClassBySpringCGLIB$$e1d28180.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.TypeController$$EnhancerBySpringCGLIB$$1a519e8f.save(<generated>)\n","logMethod":"POST","logParams":"[Type(typeId=null, typeName=Java, typeBlogCount=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:33:31","logId":50,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=lINUX, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":333,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:33:40","logId":51,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=docker, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":236,"logUrl":"/type/save"},{"createdTime":"2020-05-18 10:35:36","logId":52,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"132C43FE8EC9C5BE335385E8E23DCDBA\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":204,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:35:59","logId":53,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"132C43FE8EC9C5BE335385E8E23DCDBA\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":104,"logUrl":"/admin/login"},{"createdTime":"2020-05-18 10:37:54","logId":54,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"Java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":129,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 02:12:02","logId":55,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"7EBC78BBCE00DB8C86CCB1F4BBA8D520\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2471,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 02:12:32","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"Java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":103,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 02:19:19","logId":57,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=springBoot, typeBlogCount=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":290,"logUrl":"/type/save"},{"createdTime":"2020-05-19 02:19:26","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"Java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":106,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 02:57:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"12B89EC7813F651B87F571BFFFCB95F2\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":253,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 02:58:21","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"Java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":107,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 03:00:32","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Type(typeId=6, typeName=JavaBoot, typeBlogCount=0, enable=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":212,"logUrl":"/type/update"},{"createdTime":"2020-05-19 03:00:42","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"JavaBoot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":100,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 03:04:47","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"JavaBoot\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":158,"logUrl":"/type/get/6"},{"createdTime":"2020-05-19 03:08:25","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"JavaBoot\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":362,"logUrl":"/type/getList"},{"createdTime":"2020-05-19 03:10:30","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"12B89EC7813F651B87F571BFFFCB95F2\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":130,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 03:11:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[6]","logResult":"{\"code\":20000,\"msg\":\"未启用\"}","logStatus":1,"logTime":263,"logUrl":"/type/disabled/6"},{"createdTime":"2020-05-19 03:11:25","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":98,"logUrl":"/type/getList"},{"createdTime":"2020-05-19 03:11:29","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":0,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"JavaBoot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":120,"logUrl":"/type/listBack"},{"createdTime":"2020-05-19 03:15:52","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"3401153963FA073AF409EC7B70EE5A32\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":240,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 03:16:28","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":127,"logUrl":"/type/getList"},{"createdTime":"2020-05-19 03:17:59","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[6]","logResult":"{\"code\":20000,\"msg\":\"已启用\"}","logStatus":1,"logTime":281,"logUrl":"/type/enabled/6"},{"createdTime":"2020-05-19 03:18:03","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"JavaBoot\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"lINUX\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"springBoot\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":106,"logUrl":"/type/getList"},{"createdTime":"2020-05-19 05:50:38","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"F02A3B0CA855DC2B68CDEEEF7847F4D6\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":247,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 05:55:36","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=baidu, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":163,"logUrl":"/link/save"},{"createdTime":"2020-05-19 06:01:48","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=null, linkName=taobao, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":233,"logUrl":"/link/update"},{"createdTime":"2020-05-19 06:04:08","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-05-19 05:55:36\",\"linkId\":1,\"linkName\":\"baidu\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-05-19 05:55:36\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":157,"logUrl":"/link/list"},{"createdTime":"2020-05-19 06:06:09","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=http://www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":166,"logUrl":"/link/update"},{"createdTime":"2020-05-19 06:06:13","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-05-19 05:55:36\",\"linkId\":1,\"linkName\":\"baidu\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-05-19 05:55:36\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":111,"logUrl":"/link/list"},{"createdTime":"2020-05-19 06:07:42","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=http://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":414,"logUrl":"/link/update"},{"createdTime":"2020-05-19 06:07:45","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-05-19 05:55:36\",\"linkId\":1,\"linkName\":\"baidu\",\"linkUrl\":\"http://www.baidu.com\",\"updateTime\":\"2020-05-19 06:07:42\"}],\"msg\":\"操作成功！\"}","logStatus":1,"logTime":105,"logUrl":"/link/list"},{"createdTime":"2020-05-19 06:09:18","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"baidu\",\"linkUrl\":\"http://www.baidu.com\",\"version\":2},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":105,"logUrl":"/link/get/1"},{"createdTime":"2020-05-19 06:53:09","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"AC9A13D507DDD0E1CE5AF9E9069EDD63\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":262,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 06:53:30","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"comment\":\"666\",\"id\":1,\"name\":\"稽哥\",\"signature\":\"热肠溶\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":100,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-05-19 06:57:21","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=null, header=null, signature=1213343, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":232,"logUrl":"/admin/updateInfo"},{"createdTime":"2020-05-19 07:00:31","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=null, header=null, signature=null, comment=null, username=null, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":195,"logUrl":"/admin/updateInfo"},{"createdTime":"2020-05-19 11:26:56","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"0F49FCA0B0757A9FCB271C6B1BB07B55\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":251,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 11:33:16","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_id' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_id' cannot be null\n; Column 'blog_id' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_id' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:39)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$624227da.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e42bbdbc.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:38)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$6b705000.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_id' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客, blogImage=null, blogContent=内容, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:37:56","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"866A00AF6F094FC7C27C005E5A329DAE\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":293,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 11:38:19","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客, blogImage=null, blogContent=内容, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":167,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:40:06","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"F590509D5B57290B5DF9B7A710FD8931\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":241,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 11:41:00","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客2, blogImage=null, blogContent=内容2, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":172,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:41:07","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客3, blogImage=null, blogContent=内容3, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":259,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:41:14","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客4, blogImage=null, blogContent=内容4, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":148,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:41:42","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客5, blogImage=null, blogContent=内容5, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":157,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:47:12","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"E8553A29993AA9F0450D76F419293CF4\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":152,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 11:48:06","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=博客6, blogImage=null, blogContent=内容6, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":410,"logUrl":"/blog/save"},{"createdTime":"2020-05-19 11:48:17","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[null,null],\"pageSize\":2,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":3},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":406,"logUrl":"/blog/getByPage"},{"createdTime":"2020-05-19 11:51:07","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"7AD2AE64DCD1E92FE4D7680713F15A85\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":292,"logUrl":"/admin/login"},{"createdTime":"2020-05-19 11:51:31","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1262709163762089984\",\"blogRead\":0,\"blogTitle\":\"博客\",\"createdTime\":\"2020-05-19 11:38:19\",\"typeName\":\"JavaBoot\",\"updateTime\":\"2020-05-19 11:38:19\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1262709837061111808\",\"blogRead\":0,\"blogTitle\":\"博客2\",\"createdTime\":\"2020-05-19 11:40:59\",\"typeName\":\"JavaBoot\",\"updateTime\":\"2020-05-19 11:40:59\"}],\"pageSize\":2,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":6,\"totalPage\":3},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":371,"logUrl":"/blog/getByPage"},{"createdTime":"2020-05-19 12:00:43","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1262709163762089984]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"内容\",\"blogGoods\":0,\"blogId\":\"1262709163762089984\",\"blogRead\":0,\"blogTitle\":\"博客\",\"blogType\":6,\"createdTime\":\"2020-05-19 11:38:19\",\"version\":1},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":189,"logUrl":"/blog/get/1262709163762089984"},{"createdTime":"2020-05-19 12:02:24","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1262709163762089984]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":194,"logUrl":"/blog/delete/1262709163762089984"},{"createdTime":"2020-05-19 12:02:48","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1262709163762089984]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":122,"logUrl":"/blog/get/1262709163762089984"},{"createdTime":"2020-05-20 06:11:02","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"B8C94C8020DA586221B646AACF679DCB\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":526,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:13:13","logId":104,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$414cd6ab.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$afeb6eb7.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$979600d8.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:14:00","logId":105,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$414cd6ab.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$afeb6eb7.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$979600d8.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:14:30","logId":106,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$414cd6ab.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$afeb6eb7.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$979600d8.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:20:17","logId":107,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"F316E0DA1A6307EF083E2D472EF721AB\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":231,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:20:44","logId":108,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$d31983c5.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$41b81bd1.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$c11d62fa.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:25:35","logId":109,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"E80D62881C5F41825345B0EB3199566A\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":226,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:25:59","logId":110,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$6c38e7ee.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$dad77ffa.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$831e9427.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:30:02","logId":111,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D786FACCC5E0C1C9E656C63C422DF64E\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":271,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:30:41","logId":112,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$2ec3691f.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$9d62012b.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f9c3f160.save(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''测试关于','测试内容'' at line 2\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:35:27","logId":113,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"10ECCAA2055116F1086762D88D5FDFED\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":282,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:35:55","logId":114,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value\n### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline\n### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value\n; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value\n\tat com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$24c55a31.save(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$9363f23d.save(<generated>)\n\tat com.jg.blog.controller.AboutController.save(AboutController.java:33)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$62c7550c.save(<generated>)\nCaused by: java.sql.SQLException: Field 'about_id' doesn't have a default value\n","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:38:16","logId":115,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"FAEB27E8C45B153FEA9C0EA8FF7FAC63\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":245,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:38:36","logId":116,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于, aboutContent=测试内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":151,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:44:24","logId":117,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline\n### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n\tat com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:90)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4430a0e6.getByPage(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b2cf38f2.getByPage(<generated>)\n\tat com.jg.blog.controller.AboutController.getByPage(AboutController.java:107)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$7e94c09c.getByPage(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=create_time, sortMethod=desc)]","logStatus":0,"logTime":0,"logUrl":"/about/getByPage"},{"createdTime":"2020-05-20 06:46:20","logId":118,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"3678138E0C185D9A8EA8F0AC04B1D6FD\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":339,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:46:43","logId":119,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'order clause'\n### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline\n### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'order clause'\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'order clause'\n\tat com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:90)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$10fa0c76.getByPage(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$7f98a482.getByPage(<generated>)\n\tat com.jg.blog.controller.AboutController.getByPage(AboutController.java:107)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f2d6c458.getByPage(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: Unknown column 'create_time' in 'order clause'\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=create_time, sortMethod=desc)]","logStatus":0,"logTime":0,"logUrl":"/about/getByPage"},{"createdTime":"2020-05-20 06:47:30","logId":120,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"3678138E0C185D9A8EA8F0AC04B1D6FD\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":117,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:47:50","logId":121,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":0,\"aboutTitle\":\"测试关于\",\"createdTime\":\"2020-05-20 06:38:36\",\"enable\":0,\"updateTime\":\"2020-05-20 06:38:36\"}],\"pageSize\":2,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":284,"logUrl":"/about/getByPage"},{"createdTime":"2020-05-20 06:50:31","logId":122,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n\tat com.jg.blog.service.impl.AboutServiceImpl.update(AboutServiceImpl.java:37)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$10fa0c76.update(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$7f98a482.update(<generated>)\n\tat com.jg.blog.controller.AboutController.update(AboutController.java:45)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f2d6c458.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n","logMethod":"PUT","logParams":"[About(aboutId=null, aboutTitle=测试修改, aboutContent=修改内容, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/update"},{"createdTime":"2020-05-20 06:51:17","logId":123,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于1, aboutContent=测试内容1, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":147,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:51:25","logId":124,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[About(aboutId=null, aboutTitle=测试关于2, aboutContent=测试内容2, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功\"}","logStatus":1,"logTime":146,"logUrl":"/about/save"},{"createdTime":"2020-05-20 06:52:27","logId":125,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n\tat com.jg.blog.service.impl.AboutServiceImpl.update(AboutServiceImpl.java:37)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$10fa0c76.update(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$7f98a482.update(<generated>)\n\tat com.jg.blog.controller.AboutController.update(AboutController.java:45)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f2d6c458.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n","logMethod":"PUT","logParams":"[About(aboutId=1, aboutTitle=测试修改, aboutContent=测试修改, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/about/update"},{"createdTime":"2020-05-20 06:53:02","logId":126,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n\tat com.jg.blog.service.impl.AboutServiceImpl.update(AboutServiceImpl.java:37)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$10fa0c76.update(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$7f98a482.update(<generated>)\n\tat com.jg.blog.controller.AboutController.update(AboutController.java:45)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f2d6c458.update(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'about_content' in 'class com.jg.blog.pojo.About'\n","logMethod":"PUT","logParams":"[About(aboutId=1, aboutTitle=测试修改, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=1, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"aboutId\":1,\"aboutRead\":0,\"aboutTitle\":\"测试关于\",\"createdTime\":\"2020-05-20 06:38:36\",\"enable\":0,\"updateTime\":\"2020-05-20 06:38:36\"}],\"pageSize\":2,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/update"},{"createdTime":"2020-05-20 06:57:02","logId":127,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"95904ABD4A45BFF54DB80AF26B38AF0A\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":248,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 06:57:20","logId":128,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[About(aboutId=1, aboutTitle=测试修改, aboutContent=null, aboutRead=null, createdTime=null, updateTime=null, version=1, enable=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":199,"logUrl":"/about/update"},{"createdTime":"2020-05-20 06:58:31","logId":129,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":145,"logUrl":"/about/delete/1"},{"createdTime":"2020-05-20 06:58:53","logId":130,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功\"}","logStatus":1,"logTime":146,"logUrl":"/about/delete/1"},{"createdTime":"2020-05-20 07:02:30","logId":131,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":110,"logUrl":"/about/get/1"},{"createdTime":"2020-05-20 07:02:53","logId":132,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":96,"logUrl":"/about/get/1"},{"createdTime":"2020-05-20 07:04:34","logId":133,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":110,"logUrl":"/about/get/1"},{"createdTime":"2020-05-20 07:06:50","logId":134,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"测试内容1\",\"aboutId\":2,\"aboutRead\":0,\"aboutTitle\":\"测试关于1\",\"createdTime\":\"2020-05-20 06:51:17\",\"updateTime\":\"2020-05-20 06:51:17\",\"version\":1},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":112,"logUrl":"/about/get/2"},{"createdTime":"2020-05-20 07:08:48","logId":135,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$199440bb.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$8832d8c7.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d5377816.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:10:04","logId":136,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$199440bb.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$8832d8c7.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$d5377816.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"token\":\"95904ABD4A45BFF54DB80AF26B38AF0A\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:16:50","logId":137,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"40F421CAC199EE6EDEF812DDB8E197DD\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":272,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:17:19","logId":138,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ec8b32fe.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5b29cb0a.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$e4ba3b0c.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:20:48","logId":139,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ec8b32fe.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5b29cb0a.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$e4ba3b0c.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:22:04","logId":140,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$ec8b32fe.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$5b29cb0a.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$e4ba3b0c.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:26:13","logId":141,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"CF6883291E6C183CE0E7B89E1541404D\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":271,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:26:33","logId":142,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:27:37","logId":143,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:31:19","logId":144,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:32:07","logId":145,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:39:39","logId":146,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:39:45","logId":147,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:73)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$25b7ab37.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$94564343.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$4299f5b8.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"token\":\"CF6883291E6C183CE0E7B89E1541404D\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:42:38","logId":148,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D54A9E1179B1CC24A62717C4C027101D\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":274,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:42:59","logId":149,"logIp":"127.0.0.1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$a86eb78a.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$170d4f96.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$f2d6c458.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:46:25","logId":150,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"726B7F5B95CD837B45542E9D192CEC0D\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":296,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:47:49","logId":151,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$dbde96cb.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$4a7d2ed7.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$df8de5e2.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:48:13","logId":152,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"C0ACD628FBA8851C3C40E7D0C7F71CBD\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":346,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:49:56","logId":153,"logIp":"127.0.0.1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1014bd30.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$7eb3553c.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$9d6abb73.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:50:31","logId":154,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D33629AB8A620AF377FEF510D187CCC0\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":279,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:51:40","logId":155,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$b4fd360a.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$239bce16.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$8c3fecbd.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:52:14","logId":156,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D37CB920359AB9FA58F2E89CECECA059\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":298,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 07:56:35","logId":157,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$e336a65d.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$51d53e69.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$200bd539.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 07:57:35","logId":158,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6C8B5AF3B2DF2341BF90BA097B01EC1C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":285,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 08:00:46","logId":159,"logIp":"0:0:0:0:0:0:0:1","logMessage":"\tat com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:74)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$f3936750.enabledById(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)\n\tat com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$6231ff5c.enabledById(<generated>)\n\tat com.jg.blog.controller.AboutController.enabled(AboutController.java:86)\n\tat com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$c42e8c34.enabled(<generated>)\n","logMethod":"PUT","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/about/enabled/1"},{"createdTime":"2020-05-20 08:02:03","logId":160,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4D89A29A78E2A6858A7A58EB8AE9C68A\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":298,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 08:03:46","logId":161,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"已启用\"}","logStatus":1,"logTime":78918,"logUrl":"/about/enabled/2"},{"createdTime":"2020-05-20 08:04:21","logId":162,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DA1D74FE01E569B283689E3CFDFF079F\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":252,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 08:04:41","logId":163,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"已启用\"}","logStatus":1,"logTime":388,"logUrl":"/about/enabled/2"},{"createdTime":"2020-05-20 08:06:25","logId":164,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"未启用\"}","logStatus":1,"logTime":343,"logUrl":"/about/disabled/2"},{"createdTime":"2020-05-20 08:09:19","logId":165,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":235,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:27","logId":166,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":612,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:29","logId":167,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":224,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:31","logId":168,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":237,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:32","logId":169,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":224,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:33","logId":170,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":231,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:40","logId":171,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":238,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:41","logId":172,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":246,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:43","logId":173,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":229,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:44","logId":174,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":235,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:45","logId":175,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":241,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:10:45","logId":176,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":253,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:11:57","logId":177,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"1E64C82E9E38D84727D81B6E41A67138\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":282,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 08:12:19","logId":178,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"msg\":\"操作成功！\"}","logStatus":1,"logTime":258,"logUrl":"/about/read"},{"createdTime":"2020-05-20 08:13:46","logId":179,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"1688FC75C2B4C6D0DE81C40579093A99\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":243,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 08:14:07","logId":180,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"测试内容\",\"aboutId\":1,\"aboutRead\":1,\"aboutTitle\":\"测试修改\",\"createdTime\":\"2020-05-20 06:38:36\",\"updateTime\":\"2020-05-20 08:12:41\",\"version\":2},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":399,"logUrl":"/about/read"},{"createdTime":"2020-05-20 09:15:17","logId":181,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"DF70413C1E2B77C966077822EB5E45A2\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":342,"logUrl":"/admin/login"},{"createdTime":"2020-05-20 09:15:41","logId":182,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":154,"logUrl":"/log/delete/1"},{"createdTime":"2020-05-20 09:17:46","logId":183,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n### The error may involve com.jg.blog.mapper.LogMapper.getByPage-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n\tat com.jg.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:43)\n\tat com.jg.blog.service.impl.LogServiceImpl$$FastClassBySpringCGLIB$$d24891de.invoke(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$EnhancerBySpringCGLIB$$58155342.getByPage(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$FastClassBySpringCGLIB$$d24891de.invoke(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$EnhancerBySpringCGLIB$$eb88cc34.getByPage(<generated>)\n\tat com.jg.blog.controller.LogController.getByPage(LogController.java:45)\n\tat com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$34b86b9f.getByPage(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]","logStatus":0,"logTime":0,"logUrl":"/log/getByPage"},{"createdTime":"2020-05-20 09:18:39","logId":184,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n### The error may involve com.jg.blog.mapper.LogMapper.getByPage-Inline\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n\tat com.jg.blog.service.impl.LogServiceImpl.getByPage(LogServiceImpl.java:43)\n\tat com.jg.blog.service.impl.LogServiceImpl$$FastClassBySpringCGLIB$$d24891de.invoke(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$EnhancerBySpringCGLIB$$58155342.getByPage(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$FastClassBySpringCGLIB$$d24891de.invoke(<generated>)\n\tat com.jg.blog.service.impl.LogServiceImpl$$EnhancerBySpringCGLIB$$eb88cc34.getByPage(<generated>)\n\tat com.jg.blog.controller.LogController.getByPage(LogController.java:45)\n\tat com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)\n\tat com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$34b86b9f.getByPage(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order by created_time desc' at line 5\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]","logStatus":0,"logTime":0,"logUrl":"/log/getByPage"},{"createdTime":"2020-05-20 09:20:17","logId":185,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"19145256B14E1E2EA447F1C98ADC1063\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":234,"logUrl":"/admin/login"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":184,"totalPage":92},"msg":"操作成功！"}
2020-05-20 17:23:42.474 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /log/deleteByIds
2020-05-20 17:23:42.475 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-20 17:23:42.475 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 17:23:42.476 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LogController.deleteByIds
2020-05-20 17:23:42.476 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[[2, 3, 4, 5]]
2020-05-20 17:23:42.635 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 161
2020-05-20 17:23:42.636 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"删除成功！"}
2020-05-20 18:25:17.696 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 2628 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 18:25:17.706 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 18:25:19.694 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 18:25:19.744 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 44ms. Found 0 MongoDB repository interfaces.
2020-05-20 18:25:20.408 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$81c6a3a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.510 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6819e222] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.546 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4ef18664] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.554 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 18:25:20.710 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.743 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:20.788 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:25.423 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 18:25:25.424 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:25.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.021 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.039 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.055 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.063 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.067 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.073 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.150 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:26.238 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 18:25:27.152 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 18:25:27.202 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 18:25:27.210 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 18:25:27.211 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 18:25:27.609 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 18:25:27.610 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9775 ms
2020-05-20 18:25:30.039 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 18:25:31.257 INFO  [cluster-ClusterId{value='5ec5059adc419b2a3d90310f', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 18:25:31.948 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 18:25:31.996 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 18:25:32.015 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 16.012 seconds (JVM running for 18.565)
2020-05-20 18:29:12.837 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 18:29:12.843 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 18:29:12.910 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 66 ms
2020-05-20 18:29:13.197 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 18:29:13.198 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 18:29:13.200 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 18:29:13.204 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 18:29:13.205 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 18:29:13.569 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 372
2020-05-20 18:29:13.697 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"84C8072DE0F7267897C6D53DDB4E0719"},"msg":"操作成功！"}
2020-05-20 18:33:48.919 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 18:33:48.922 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 18:33:48.925 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 18:33:48.926 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 18:33:48.927 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 18:33:49.030 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 111
2020-05-20 18:33:49.031 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"84C8072DE0F7267897C6D53DDB4E0719"},"msg":"操作成功！"}
2020-05-20 18:34:20.474 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/save
2020-05-20 18:34:20.475 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 18:34:20.476 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 18:34:20.476 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.save
2020-05-20 18:34:20.477 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Music(id=null, name=1233, artist=234, url=xxx, cover=xxxx, lrc=null, createdTime=null, enabled=null, deleted=null)]
2020-05-20 18:34:20.645 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 171
2020-05-20 18:34:20.645 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 19:30:59.866 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 19:30:59.868 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:30:59.868 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:30:59.869 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 19:30:59.870 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 19:30:59.999 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 133
2020-05-20 19:31:00.002 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"CEAAE34CD55331533D50CF7E3F94607F"},"msg":"操作成功！"}
2020-05-20 19:31:19.672 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/save
2020-05-20 19:31:19.673 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:31:19.674 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:31:19.675 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.save
2020-05-20 19:31:19.676 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Music(id=null, name=AAA, artist=bbb, url=xxx, cover=xxxx, lrc=null, createdTime=null, enabled=null, deleted=null)]
2020-05-20 19:31:19.816 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 144
2020-05-20 19:31:19.817 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 19:31:29.172 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/save
2020-05-20 19:31:29.174 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:31:29.176 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:31:29.177 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.save
2020-05-20 19:31:29.178 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Music(id=null, name=CCC, artist=bbb, url=xxx, cover=xxxx, lrc=null, createdTime=null, enabled=null, deleted=null)]
2020-05-20 19:31:29.330 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 158
2020-05-20 19:31:29.332 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 19:31:37.102 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/save
2020-05-20 19:31:37.103 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:31:37.104 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:31:37.105 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.save
2020-05-20 19:31:37.106 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Music(id=null, name=DDD, artist=bbb, url=xxx, cover=xxxx, lrc=null, createdTime=null, enabled=null, deleted=null)]
2020-05-20 19:31:37.260 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 158
2020-05-20 19:31:37.261 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-20 19:33:03.056 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/get/1
2020-05-20 19:33:03.059 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:33:03.059 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:33:03.060 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getById
2020-05-20 19:33:03.060 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 19:33:03.184 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 128
2020-05-20 19:33:03.202 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"artist":"234","cover":"xxxx","id":1,"name":"1233","url":"xxx"},"msg":"操作成功！"}
2020-05-20 19:35:55.632 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getByPage
2020-05-20 19:35:55.634 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:35:55.634 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:35:55.635 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getByPage
2020-05-20 19:35:55.635 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 19:36:27.740 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getByPage
2020-05-20 19:36:27.741 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:36:27.742 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:36:27.742 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getByPage
2020-05-20 19:36:27.742 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 19:37:37.214 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 16828 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-20 19:37:37.230 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-20 19:37:39.903 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-20 19:37:39.956 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 45ms. Found 0 MongoDB repository interfaces.
2020-05-20 19:37:40.653 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6b626492] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:40.767 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:40.791 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$51b5a30e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:40.800 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$388d4750] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:40.807 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-20 19:37:40.923 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:40.968 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:41.015 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:45.700 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-20 19:37:45.702 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:45.829 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.236 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.251 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.259 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.263 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.265 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.329 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.379 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-20 19:37:46.897 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-20 19:37:46.910 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-20 19:37:46.912 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-20 19:37:46.913 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-20 19:37:47.138 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-20 19:37:47.139 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 9759 ms
2020-05-20 19:37:48.866 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-20 19:37:49.946 INFO  [cluster-ClusterId{value='5ec5168cba1abe0d09873bdb', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-20 19:37:50.491 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-20 19:37:50.529 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-20 19:37:50.548 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 14.52 seconds (JVM running for 17.576)
2020-05-20 19:38:13.594 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-20 19:38:13.596 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-20 19:38:13.641 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 44 ms
2020-05-20 19:38:13.823 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-20 19:38:13.824 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:38:13.825 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:38:13.828 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-20 19:38:13.830 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-20 19:38:14.175 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 352
2020-05-20 19:38:14.286 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"B28719929759015B3F03606102BC1DDD"},"msg":"操作成功！"}
2020-05-20 19:38:36.768 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getByPage
2020-05-20 19:38:36.769 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:38:36.770 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:38:36.770 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getByPage
2020-05-20 19:38:36.771 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=created_time, sortMethod=desc)]
2020-05-20 19:38:37.008 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 240
2020-05-20 19:38:37.027 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"bbb","cover":"xxxx","createdTime":"2020-05-20 11:31:38","id":4,"name":"DDD","url":"xxx"},{"artist":"bbb","cover":"xxxx","createdTime":"2020-05-20 11:31:30","id":3,"name":"CCC","url":"xxx"}],"pageSize":2,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":4,"totalPage":2},"msg":"操作成功！"}
2020-05-20 19:41:35.225 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/update
2020-05-20 19:41:35.226 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-20 19:41:35.227 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:41:35.227 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.update
2020-05-20 19:41:35.228 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Music(id=1, name=ZZZ, artist=bbb, url=xxx, cover=xxxx, lrc=null, createdTime=null, enabled=null, deleted=null)]
2020-05-20 19:41:35.390 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 165
2020-05-20 19:41:35.390 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"更新成功"}
2020-05-20 19:44:38.690 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/get/1
2020-05-20 19:44:38.693 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-20 19:44:38.694 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 0:0:0:0:0:0:0:1
2020-05-20 19:44:38.695 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getById
2020-05-20 19:44:38.696 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[1]
2020-05-20 19:44:38.837 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 147
2020-05-20 19:44:38.838 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"artist":"bbb","cover":"xxxx","id":1,"name":"ZZZ","url":"xxx"},"msg":"操作成功！"}
