2020-06-13 15:49:16.566 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.3.RELEASE, Spring v5.2.3.RELEASE
2020-06-13 15:54:32.777 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-13 15:54:32.936 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-13 15:54:33.064 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 15:54:33.531 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:33.541 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 566(Long), {"code":20000,"data":{"token":"37F2DFF8C28A007742A696A82D048894"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:33.613 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:33.999 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:33.999 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:34.064 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:34.778 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 15:54:34.779 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 15:54:34.811 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 15:54:34.868 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:34.870 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:34.931 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:51.942 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-13 15:54:51.943 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-13 15:54:51.976 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-13 15:54:52.002 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc LIMIT 5 
2020-06-13 15:54:52.003 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-13 15:54:52.018 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:52.020 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:52.043 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-06-13 15:54:52.080 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:52.151 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-13 15:54:52.152 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-13 15:54:52.181 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-13 15:54:52.193 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-13 15:54:52.194 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-13 15:54:52.222 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:52.224 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 73(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:52.243 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-06-13 15:54:52.245 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-13 15:54:52.247 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-13 15:54:52.287 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-13 15:54:52.290 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:52.354 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-13 15:54:52.355 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-13 15:54:52.360 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:52.362 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, POST(String), 154(Long), {"code":20000,"data":[{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java"},{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:52.391 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-06-13 15:54:52.394 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:52.397 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 367(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-10 06:48:39"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:52.427 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:52.458 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:54:54.331 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:54:54.333 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 335(Long), {"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMOaACqYhAAAOurxSY9A577.jpg","id":1,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\n[00:01.62]作词：Ming.明\n[00:02.33]作曲：Pig小优\n[00:03.08]编曲：Pig小优\n[00:03.84]后期：Pig小优\n[00:04.54]美工：张小喵\n[00:09.15]踏红船繁华似人间\n[00:12.03]灯火熙攘祈愿\n[00:14.00]手中红线姻缘何时现\n[00:17.57]薄雾小雨润如烟\n[00:19.94]灯中画舫烟中浅\n[00:24.93]这尘缘如惊鸿一面\n[00:27.85]谁家翩翩少年\n[00:29.85]桥边白衣如纤印心间\n[00:33.34]这世间情话誓言\n[00:35.81]不抵这柔情一眼\n[00:40.79]步儿缓红绳缠\n[00:42.70]石桥边灯火染\n[00:44.72]杯中仙促长谈\n[00:46.79]舷外雨声人言难断\n[00:49.71]已成烟已消散\n[00:51.62]化作春意满\n[00:55.75]晚来风寒心却暖\n[00:57.57]三两杯酒后情又添\n[01:00.08]暮鼓丝弦声声慢\n[01:02.36]有佳人舞芊芊\n[01:04.32]研磨提笔在画卷眉目间流转\n[01:08.49]细雨婵娟\n[01:12.25]醉卧画舫听雨眠一场梦无言\n[01:15.93]窗外依旧喧怎转眼桥上人不见\n[01:20.46]回眸深处看细雨茫茫如烟\n[01:24.10]苦了思念\n[01:44.22]步儿缓红绳缠\n[01:46.18]石桥边灯火染\n[01:48.20]杯中仙促长谈\n[01:50.21]舷外雨声人言难断\n[01:53.18]已成烟已消散\n[01:55.15]化作春意满\n[01:59.25]晚来风寒心却暖\n[02:01.16]三两杯酒后情又添\n[02:03.53]暮鼓丝弦声声慢\n[02:05.74]有佳人舞芊芊\n[02:07.80]研磨提笔在画卷眉目间流转\n[02:12.03]细雨婵娟\n[02:15.69]醉卧画舫听雨眠一场梦无言\n[02:19.42]窗外依旧喧怎转眼桥上人不见\n[02:23.95]回眸深处看细雨茫茫如烟\n[02:27.58]苦了思念\n[02:43.49]青山乌蓬伴流年繁华多阑珊\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\n[02:51.46]满纸柔情过指尖笔墨笑意染\n[02:55.64]长袖翩翩\n[02:59.52]醉卧画舫听雨眠一场梦无言\n[03:03.10]窗外依旧喧怎转眼桥上人不见\n[03:07.48]回眸深处看水中喜字红残\n[03:11.31]倒了人间\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMRKAckVMAInbwpYfM3A430.mp3"},{"artist":"匿名","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVAeADSvsAAAQjTIrrnM214.jpg","id":2,"lrc":"[00:01.87]Take Me Away -逃跑计划\n[00:18.66]编辑:水妈 QQ:331451919\n[00:23.99]I use to be myself\n[00:27.59]And use to play around\n[00:31.47]Sometime I don't want to think\n[00:34.33]Maybe cause I'm afraid\n[00:38.51]I do wanna sing my song\n[00:42.36]No matter what you say\n[00:46.12]With you I never think\n[00:48.95]along~\n[00:49.69]I lood into my soul\n[00:52.63]One day I hope somepoeple take to me\n[00:57.68]About life\n[01:00.85]But I can't take no more\n[01:04.71]Where where where where my Shangri-la\n[01:08.32]I do wanna sing my song\n[01:11.86]No matter what you say\n[01:15.64]With you I never think\n[01:18.48]I lood into my soul\n[01:22.10]One day I hope somepoeple take to me\n[01:26.89]About life\n[01:30.35]But I can't take no more\n[01:34.32]Where...where...where...where my Shangri-la\n[01:38.28]Many many time I want to go\n[01:41.64]So I hardly open my eyes\n[01:45.66]The truth even force me run...run...run...run away...run away\n[01:53.21]But now I'm same to you\n[01:56.47]But I feel nothing better for sure\n[02:00.16]The star...star...star would you take me away\n[02:24.36]Many many time I want to go\n[02:27.61]So I hardly open my eyes\n[02:31.71]The truth even force me run...run...run...run away...run away\n[02:39.14]But now I'm same to you\n[02:42.47]But I feel nothing better for sure\n[02:46.48]The star...star...star would you take me away\n[02:53.98]Many many time I want to go\n[02:57.33]So I hardly open my eyes\n[03:01.30]The truth even force me run...run...run...run away...run away\n[03:08.99]Now I'm same as you\n[03:11.90]But I feel nothing better for sure\n[03:15.93]The star...star...star would you take me away\n[03:22.09]The best for right now\n[03:24.10]-end-","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVLeAdth3AACJ_hvYA4w070.jpg","id":3,"lrc":"[00:01.997]作词 : 薛之谦\n[00:03.929]作曲 : 薛之谦\n[00:06.012]\n[00:17.154]听专情的古人 把美言留给最爱的人\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\n[00:33.070]你没读懂课本 可世人硬要捧\n[00:41.350]看感情里的人 用肉眼分出三六九等\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\n[01:11.813]\n[01:12.202]所以 当我们都变成木偶人\n[01:17.471]你何苦再做一个痴情人表忠贞\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\n[01:29.805]\n[01:30.107]让我们都变成木偶人\n[01:33.678]再缝几针爱几次后就不会疼\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\n[01:46.963]\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\n[01:58.724]现在相爱的人 能耍的方式五花八门\n[02:07.230]要一式要两份 把热吻当罪证\n[02:15.298]让动了情的人 还要去分辨好人坏人\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\n[02:46.341]\n[02:46.606]所以 当我们都变成木偶人\n[02:51.507]你何苦再做一个痴情人表忠贞\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\n[03:03.407]\n[03:03.825]让我们都变成木偶人\n[03:07.373]再缝几针爱几次后就不会疼\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\n[03:21.158]\n[03:36.779]没有人能变成木偶人\n[03:39.795]无非是在感情里的逃避过程\n[03:43.999]我们盛气凌人 掩饰无权过问\n[03:48.773]遇见谁要拆几针\n[03:52.354]\n[03:52.631]当我们都羡慕木偶人\n[03:55.899]学会他在场面上的玩弄过程\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\n[04:23.520]\n[04:24.454]制作人 : 陈迪@TalentUnion\n[04:25.387]编曲 : 陈迪\n[04:26.274]吉他 : 劳国贤\n[04:27.357]贝斯 : 崔文正\n[04:28.378]鼓 : 王鹏\n[04:29.346]弦乐团 : 中国爱乐乐团\n[04:30.319]人声监制 : 杨祎\n[04:31.323]缩混 : 杨祎@RaySound Studio\n[04:32.382]母带 : 鲍锐@录顶技","name":"木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:54:54.410 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:23.131 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:23.133 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-13 15:55:23.199 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:24.471 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:24.473 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-06-13 15:55:24.539 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:25.485 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:25.488 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.CommentServiceImpl.getByPage(CommentServiceImpl.java:118)
	at com.jg.blog.controller.CommentController.getList(CommentController.java:91)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$9e066209.getList(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"37F2DFF8C28A007742A696A82D048894"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:25.556 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:26.401 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:26.404 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:26.470 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:27.499 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:27.502 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:27.569 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:28.115 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 15:55:28.116 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 15:55:28.149 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 15:55:28.193 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:28.196 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 79(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:28.263 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:29.276 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-06-13 15:55:29.278 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-06-13 15:55:29.316 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 9
2020-06-13 15:55:29.370 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:29.372 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"list":[{"blogId":"1264726600279891968","blogMonth":"2020-05","blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56"},{"blogId":"1264526633971961856","blogMonth":"2020-05","blogTitle":"注解版poi操作工具","createdTime":"2020-05-24 12:00:19"},{"blogId":"1264365258452664320","blogMonth":"2020-05","blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04"},{"blogId":"1264358511910559744","blogMonth":"2020-05","blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15"}],"month":"2020-05"},{"list":[{"blogId":"1264365631460507648","blogMonth":"2020-04","blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33"},{"blogId":"1264363719424188416","blogMonth":"2020-04","blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57"}],"month":"2020-04"},{"list":[{"blogId":"1264358089300877312","blogMonth":"2020-02","blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35"},{"blogId":"1264358056178458624","blogMonth":"2020-02","blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27"},{"blogId":"1264357690636476416","blogMonth":"2020-02","blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00"}],"month":"2020-02"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:29.440 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:29.916 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-13 15:55:29.917 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-13 15:55:29.960 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-06-13 15:55:29.961 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-13 15:55:29.962 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-13 15:55:29.996 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-13 15:55:30.109 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:30.115 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-10 06:48:39"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:30.187 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:31.493 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:31.495 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-10 06:48:39"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:31.562 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:33.047 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:33.050 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.CommentServiceImpl.getByPage(CommentServiceImpl.java:118)
	at com.jg.blog.controller.CommentController.getList(CommentController.java:91)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$9e066209.getList(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMOaACqYhAAAOurxSY9A577.jpg","id":1,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\n[00:01.62]作词：Ming.明\n[00:02.33]作曲：Pig小优\n[00:03.08]编曲：Pig小优\n[00:03.84]后期：Pig小优\n[00:04.54]美工：张小喵\n[00:09.15]踏红船繁华似人间\n[00:12.03]灯火熙攘祈愿\n[00:14.00]手中红线姻缘何时现\n[00:17.57]薄雾小雨润如烟\n[00:19.94]灯中画舫烟中浅\n[00:24.93]这尘缘如惊鸿一面\n[00:27.85]谁家翩翩少年\n[00:29.85]桥边白衣如纤印心间\n[00:33.34]这世间情话誓言\n[00:35.81]不抵这柔情一眼\n[00:40.79]步儿缓红绳缠\n[00:42.70]石桥边灯火染\n[00:44.72]杯中仙促长谈\n[00:46.79]舷外雨声人言难断\n[00:49.71]已成烟已消散\n[00:51.62]化作春意满\n[00:55.75]晚来风寒心却暖\n[00:57.57]三两杯酒后情又添\n[01:00.08]暮鼓丝弦声声慢\n[01:02.36]有佳人舞芊芊\n[01:04.32]研磨提笔在画卷眉目间流转\n[01:08.49]细雨婵娟\n[01:12.25]醉卧画舫听雨眠一场梦无言\n[01:15.93]窗外依旧喧怎转眼桥上人不见\n[01:20.46]回眸深处看细雨茫茫如烟\n[01:24.10]苦了思念\n[01:44.22]步儿缓红绳缠\n[01:46.18]石桥边灯火染\n[01:48.20]杯中仙促长谈\n[01:50.21]舷外雨声人言难断\n[01:53.18]已成烟已消散\n[01:55.15]化作春意满\n[01:59.25]晚来风寒心却暖\n[02:01.16]三两杯酒后情又添\n[02:03.53]暮鼓丝弦声声慢\n[02:05.74]有佳人舞芊芊\n[02:07.80]研磨提笔在画卷眉目间流转\n[02:12.03]细雨婵娟\n[02:15.69]醉卧画舫听雨眠一场梦无言\n[02:19.42]窗外依旧喧怎转眼桥上人不见\n[02:23.95]回眸深处看细雨茫茫如烟\n[02:27.58]苦了思念\n[02:43.49]青山乌蓬伴流年繁华多阑珊\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\n[02:51.46]满纸柔情过指尖笔墨笑意染\n[02:55.64]长袖翩翩\n[02:59.52]醉卧画舫听雨眠一场梦无言\n[03:03.10]窗外依旧喧怎转眼桥上人不见\n[03:07.48]回眸深处看水中喜字红残\n[03:11.31]倒了人间\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMRKAckVMAInbwpYfM3A430.mp3"},{"artist":"匿名","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVAeADSvsAAAQjTIrrnM214.jpg","id":2,"lrc":"[00:01.87]Take Me Away -逃跑计划\n[00:18.66]编辑:水妈 QQ:331451919\n[00:23.99]I use to be myself\n[00:27.59]And use to play around\n[00:31.47]Sometime I don't want to think\n[00:34.33]Maybe cause I'm afraid\n[00:38.51]I do wanna sing my song\n[00:42.36]No matter what you say\n[00:46.12]With you I never think\n[00:48.95]along~\n[00:49.69]I lood into my soul\n[00:52.63]One day I hope somepoeple take to me\n[00:57.68]About life\n[01:00.85]But I can't take no more\n[01:04.71]Where where where where my Shangri-la\n[01:08.32]I do wanna sing my song\n[01:11.86]No matter what you say\n[01:15.64]With you I never think\n[01:18.48]I lood into my soul\n[01:22.10]One day I hope somepoeple take to me\n[01:26.89]About life\n[01:30.35]But I can't take no more\n[01:34.32]Where...where...where...where my Shangri-la\n[01:38.28]Many many time I want to go\n[01:41.64]So I hardly open my eyes\n[01:45.66]The truth even force me run...run...run...run away...run away\n[01:53.21]But now I'm same to you\n[01:56.47]But I feel nothing better for sure\n[02:00.16]The star...star...star would you take me away\n[02:24.36]Many many time I want to go\n[02:27.61]So I hardly open my eyes\n[02:31.71]The truth even force me run...run...run...run away...run away\n[02:39.14]But now I'm same to you\n[02:42.47]But I feel nothing better for sure\n[02:46.48]The star...star...star would you take me away\n[02:53.98]Many many time I want to go\n[02:57.33]So I hardly open my eyes\n[03:01.30]The truth even force me run...run...run...run away...run away\n[03:08.99]Now I'm same as you\n[03:11.90]But I feel nothing better for sure\n[03:15.93]The star...star...star would you take me away\n[03:22.09]The best for right now\n[03:24.10]-end-","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVLeAdth3AACJ_hvYA4w070.jpg","id":3,"lrc":"[00:01.997]作词 : 薛之谦\n[00:03.929]作曲 : 薛之谦\n[00:06.012]\n[00:17.154]听专情的古人 把美言留给最爱的人\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\n[00:33.070]你没读懂课本 可世人硬要捧\n[00:41.350]看感情里的人 用肉眼分出三六九等\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\n[01:11.813]\n[01:12.202]所以 当我们都变成木偶人\n[01:17.471]你何苦再做一个痴情人表忠贞\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\n[01:29.805]\n[01:30.107]让我们都变成木偶人\n[01:33.678]再缝几针爱几次后就不会疼\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\n[01:46.963]\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\n[01:58.724]现在相爱的人 能耍的方式五花八门\n[02:07.230]要一式要两份 把热吻当罪证\n[02:15.298]让动了情的人 还要去分辨好人坏人\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\n[02:46.341]\n[02:46.606]所以 当我们都变成木偶人\n[02:51.507]你何苦再做一个痴情人表忠贞\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\n[03:03.407]\n[03:03.825]让我们都变成木偶人\n[03:07.373]再缝几针爱几次后就不会疼\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\n[03:21.158]\n[03:36.779]没有人能变成木偶人\n[03:39.795]无非是在感情里的逃避过程\n[03:43.999]我们盛气凌人 掩饰无权过问\n[03:48.773]遇见谁要拆几针\n[03:52.354]\n[03:52.631]当我们都羡慕木偶人\n[03:55.899]学会他在场面上的玩弄过程\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\n[04:23.520]\n[04:24.454]制作人 : 陈迪@TalentUnion\n[04:25.387]编曲 : 陈迪\n[04:26.274]吉他 : 劳国贤\n[04:27.357]贝斯 : 崔文正\n[04:28.378]鼓 : 王鹏\n[04:29.346]弦乐团 : 中国爱乐乐团\n[04:30.319]人声监制 : 杨祎\n[04:31.323]缩混 : 杨祎@RaySound Studio\n[04:32.382]母带 : 鲍锐@录顶技","name":"木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:33.129 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:35.080 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:35.084 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-06-13 15:55:35.154 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:35.462 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:35.464 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-13 15:55:35.529 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:50.863 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-13 15:55:50.864 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: tangtu22(String)
2020-06-13 15:55:50.897 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 15:55:50.944 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:50.946 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.CommentServiceImpl.getByPage(CommentServiceImpl.java:118)
	at com.jg.blog.controller.CommentController.getList(CommentController.java:91)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$9e066209.getList(<generated>)
(String), POST(String), 74(Long), {"code":20000,"data":{"user":{"deleted":0,"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","password":"","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22"},"token":"37F2DFF8C28A007742A696A82D048894"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:51.266 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:51.779 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-13 15:55:51.780 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-13 15:55:51.822 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-06-13 15:55:51.823 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-13 15:55:51.824 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-13 15:55:51.856 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-13 15:55:51.912 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc LIMIT 5 
2020-06-13 15:55:51.913 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-13 15:55:51.931 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-13 15:55:51.931 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-13 15:55:51.936 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-13 15:55:51.938 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-13 15:55:51.945 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-06-13 15:55:51.964 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:51.967 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-06-13 15:55:51.967 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-10 06:48:39"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:51.969 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-13 15:55:51.972 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-13 15:55:51.975 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-13 15:55:51.987 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:51.988 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), POST(String), 75(Long), {"code":20000,"data":[{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java"},{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:52.005 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-13 15:55:52.011 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:52.013 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 76(Long), {"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMOaACqYhAAAOurxSY9A577.jpg","id":1,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\n[00:01.62]作词：Ming.明\n[00:02.33]作曲：Pig小优\n[00:03.08]编曲：Pig小优\n[00:03.84]后期：Pig小优\n[00:04.54]美工：张小喵\n[00:09.15]踏红船繁华似人间\n[00:12.03]灯火熙攘祈愿\n[00:14.00]手中红线姻缘何时现\n[00:17.57]薄雾小雨润如烟\n[00:19.94]灯中画舫烟中浅\n[00:24.93]这尘缘如惊鸿一面\n[00:27.85]谁家翩翩少年\n[00:29.85]桥边白衣如纤印心间\n[00:33.34]这世间情话誓言\n[00:35.81]不抵这柔情一眼\n[00:40.79]步儿缓红绳缠\n[00:42.70]石桥边灯火染\n[00:44.72]杯中仙促长谈\n[00:46.79]舷外雨声人言难断\n[00:49.71]已成烟已消散\n[00:51.62]化作春意满\n[00:55.75]晚来风寒心却暖\n[00:57.57]三两杯酒后情又添\n[01:00.08]暮鼓丝弦声声慢\n[01:02.36]有佳人舞芊芊\n[01:04.32]研磨提笔在画卷眉目间流转\n[01:08.49]细雨婵娟\n[01:12.25]醉卧画舫听雨眠一场梦无言\n[01:15.93]窗外依旧喧怎转眼桥上人不见\n[01:20.46]回眸深处看细雨茫茫如烟\n[01:24.10]苦了思念\n[01:44.22]步儿缓红绳缠\n[01:46.18]石桥边灯火染\n[01:48.20]杯中仙促长谈\n[01:50.21]舷外雨声人言难断\n[01:53.18]已成烟已消散\n[01:55.15]化作春意满\n[01:59.25]晚来风寒心却暖\n[02:01.16]三两杯酒后情又添\n[02:03.53]暮鼓丝弦声声慢\n[02:05.74]有佳人舞芊芊\n[02:07.80]研磨提笔在画卷眉目间流转\n[02:12.03]细雨婵娟\n[02:15.69]醉卧画舫听雨眠一场梦无言\n[02:19.42]窗外依旧喧怎转眼桥上人不见\n[02:23.95]回眸深处看细雨茫茫如烟\n[02:27.58]苦了思念\n[02:43.49]青山乌蓬伴流年繁华多阑珊\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\n[02:51.46]满纸柔情过指尖笔墨笑意染\n[02:55.64]长袖翩翩\n[02:59.52]醉卧画舫听雨眠一场梦无言\n[03:03.10]窗外依旧喧怎转眼桥上人不见\n[03:07.48]回眸深处看水中喜字红残\n[03:11.31]倒了人间\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMRKAckVMAInbwpYfM3A430.mp3"},{"artist":"匿名","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVAeADSvsAAAQjTIrrnM214.jpg","id":2,"lrc":"[00:01.87]Take Me Away -逃跑计划\n[00:18.66]编辑:水妈 QQ:331451919\n[00:23.99]I use to be myself\n[00:27.59]And use to play around\n[00:31.47]Sometime I don't want to think\n[00:34.33]Maybe cause I'm afraid\n[00:38.51]I do wanna sing my song\n[00:42.36]No matter what you say\n[00:46.12]With you I never think\n[00:48.95]along~\n[00:49.69]I lood into my soul\n[00:52.63]One day I hope somepoeple take to me\n[00:57.68]About life\n[01:00.85]But I can't take no more\n[01:04.71]Where where where where my Shangri-la\n[01:08.32]I do wanna sing my song\n[01:11.86]No matter what you say\n[01:15.64]With you I never think\n[01:18.48]I lood into my soul\n[01:22.10]One day I hope somepoeple take to me\n[01:26.89]About life\n[01:30.35]But I can't take no more\n[01:34.32]Where...where...where...where my Shangri-la\n[01:38.28]Many many time I want to go\n[01:41.64]So I hardly open my eyes\n[01:45.66]The truth even force me run...run...run...run away...run away\n[01:53.21]But now I'm same to you\n[01:56.47]But I feel nothing better for sure\n[02:00.16]The star...star...star would you take me away\n[02:24.36]Many many time I want to go\n[02:27.61]So I hardly open my eyes\n[02:31.71]The truth even force me run...run...run...run away...run away\n[02:39.14]But now I'm same to you\n[02:42.47]But I feel nothing better for sure\n[02:46.48]The star...star...star would you take me away\n[02:53.98]Many many time I want to go\n[02:57.33]So I hardly open my eyes\n[03:01.30]The truth even force me run...run...run...run away...run away\n[03:08.99]Now I'm same as you\n[03:11.90]But I feel nothing better for sure\n[03:15.93]The star...star...star would you take me away\n[03:22.09]The best for right now\n[03:24.10]-end-","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVLeAdth3AACJ_hvYA4w070.jpg","id":3,"lrc":"[00:01.997]作词 : 薛之谦\n[00:03.929]作曲 : 薛之谦\n[00:06.012]\n[00:17.154]听专情的古人 把美言留给最爱的人\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\n[00:33.070]你没读懂课本 可世人硬要捧\n[00:41.350]看感情里的人 用肉眼分出三六九等\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\n[01:11.813]\n[01:12.202]所以 当我们都变成木偶人\n[01:17.471]你何苦再做一个痴情人表忠贞\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\n[01:29.805]\n[01:30.107]让我们都变成木偶人\n[01:33.678]再缝几针爱几次后就不会疼\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\n[01:46.963]\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\n[01:58.724]现在相爱的人 能耍的方式五花八门\n[02:07.230]要一式要两份 把热吻当罪证\n[02:15.298]让动了情的人 还要去分辨好人坏人\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\n[02:46.341]\n[02:46.606]所以 当我们都变成木偶人\n[02:51.507]你何苦再做一个痴情人表忠贞\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\n[03:03.407]\n[03:03.825]让我们都变成木偶人\n[03:07.373]再缝几针爱几次后就不会疼\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\n[03:21.158]\n[03:36.779]没有人能变成木偶人\n[03:39.795]无非是在感情里的逃避过程\n[03:43.999]我们盛气凌人 掩饰无权过问\n[03:48.773]遇见谁要拆几针\n[03:52.354]\n[03:52.631]当我们都羡慕木偶人\n[03:55.899]学会他在场面上的玩弄过程\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\n[04:23.520]\n[04:24.454]制作人 : 陈迪@TalentUnion\n[04:25.387]编曲 : 陈迪\n[04:26.274]吉他 : 劳国贤\n[04:27.357]贝斯 : 崔文正\n[04:28.378]鼓 : 王鹏\n[04:29.346]弦乐团 : 中国爱乐乐团\n[04:30.319]人声监制 : 杨祎\n[04:31.323]缩混 : 杨祎@RaySound Studio\n[04:32.382]母带 : 鲍锐@录顶技","name":"木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:52.015 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:52.017 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 80(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:52.040 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:52.049 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:52.050 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:52.052 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 85(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:52.073 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:52.078 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:52.110 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:54.540 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:54.541 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 537(Long), {"code":20000,"data":{"collectionCount":0,"commentCount":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:54.601 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:55.611 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:55.613 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.CommentServiceImpl.getByPage(CommentServiceImpl.java:118)
	at com.jg.blog.controller.CommentController.getList(CommentController.java:91)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$9e066209.getList(<generated>)
(String), POST(String), 282(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:55.671 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:56.930 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:56.933 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 45(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:56.992 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:57.837 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:57.839 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/commentAndCollectionCount(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:123)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:159)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$d0bdfc49.commentAndCollectionCount(<generated>)
(String), GET(String), 66(Long), {"code":20000,"data":{"collectionCount":0,"commentCount":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:57.897 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:55:58.885 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:55:58.886 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollectionList(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.CommentServiceImpl.getByPage(CommentServiceImpl.java:118)
	at com.jg.blog.controller.CommentController.getList(CommentController.java:91)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$9e066209.getList(<generated>)
(String), POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:55:58.943 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 15:56:00.017 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-13 15:56:00.019 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-13 15:56:00.051 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-06-13 15:56:00.053 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-13 15:56:00.055 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-13 15:56:00.084 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-13 15:56:00.172 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 15:56:00.173 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:169)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:182)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$488a0bee.getCollectionList(<generated>)
(String), POST(String), 185(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":29,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-10 06:48:39"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 15:56:00.234 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:01:08.868 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-13 19:01:09.034 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-13 19:01:09.321 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 19:01:09.507 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:01:09.509 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 1541(Long), {"code":20000,"data":{"token":"406D952B9E3A2DBA872F445E6E24712F"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:01:09.569 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:01:10.109 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:01:10.109 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:01:10.169 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:01:10.414 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 19:01:10.415 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 19:01:10.544 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 19:01:10.593 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:01:10.595 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 174(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:01:10.653 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:02:25.840 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.3.RELEASE, Spring v5.2.3.RELEASE
2020-06-13 19:02:42.359 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-13 19:02:42.401 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-13 19:02:42.473 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 19:02:42.657 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:02:42.661 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 233(Long), {"code":20000,"data":{"token":"4FF393D4CF0F21D7D59280A1F0C8F782"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:02:42.720 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:02:43.121 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:02:43.123 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:02:43.184 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:02:43.897 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 19:02:43.899 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 19:02:43.929 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 19:02:43.982 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:02:43.984 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 93(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:02:44.047 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:02:44.844 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:02:44.846 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 935(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:02:44.909 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:04:31.145 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:04:31.146 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:04:31.212 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:04:31.528 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 19:04:31.529 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 19:04:31.568 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 19:04:31.627 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:04:31.629 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 81(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:04:31.947 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:04:33.977 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:04:33.977 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 37(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:04:34.036 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:04.743 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:04.744 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollection/1264358511910559744(String), [1264358511910559744](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:162)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:172)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getCollection(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":{"token":"4FF393D4CF0F21D7D59280A1F0C8F782"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:04.746 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:04.748 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getGood/1264358511910559744(String), [1264358511910559744](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:136)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:149)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getGood(<generated>)
(String), GET(String), 0(Long), null, 127.0.0.1(String)
2020-06-13 19:06:04.762 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-13 19:06:04.763 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264358511910559744(String)
2020-06-13 19:06:04.805 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:04.817 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:04.829 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:04.847 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:04.850 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1264358511910559744(String), [1264358511910559744](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:04.869 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-13 19:06:04.871 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: Java只使用位运算实现加减乘除(String), <p>前言<br />接前面一篇博客，这又是某个公司的奇葩面试题（都说了到底是哪家公司才会出这种没营养的面试题）。不过吐槽归吐槽，这个题目还是有点学问的，比前面那个&nbsp;不使用比较运算符如何比较两个数的大小 强多了（但是还是能看出面试官是在存心刁难人）。</p>
<p>原题是&ldquo;只给加法，如何实现减乘除&rdquo;，我寻思着，既然减乘除都不给了，那就加大点难度，加法也别给了吧，今天就手动去实现加减乘除。这里只实现int类型的加减乘除。</p>
<p>一说到这种&ldquo;不给xxx如何实现xxx的问题&rdquo;，那第一个想到的就是位运算，因此本篇博客的各种运算也是基于位运算的。关于位运算的知识点，请阅读本博客的看官们自行百度学习。。。。</p>
<p>加法<br />我们先举个加法的例子：8+9=17，可以转换成10+7，即：二者相加不考虑进位的值，和二者相加只考虑进位的值相加。我们再通过二进制来直观的看一下。</p>
<p>0000 1000 (8)<br />0000 1001 (9)<br />0001 0001 (17)<br />下面描述一下思路（可能有点绕）。</p>
<p>首先我们看，直接二进制相加的结果，0+0=0,1+0=1,1+1=10。好像能看出点什么。前两个的运算规则复合&ldquo;异或运算&rdquo;，而后者则复合与运算并左移1位。</p>
<p>到现在思路就清楚了：a^b的结果是不考虑进位的结果，而a&amp;b&lt;&lt;1是只考虑进位的结果。把二者相加即可。如果相加后，可能还存在进位，那就让这两个数字继续相加，一直到进位为0为止。这里使用递归去实现，感兴趣的可以用循环实现，性能比递归要高。</p>
<p>public int add(int a, int b) {<br />// 得到原位和<br />int xor = a ^ b;<br />// 得到进位和<br />int forWoad = (a &amp; b) &lt;&lt; 1;<br />return forWoad == 0 ? xor : add(xor, forWoad);<br />}<br />到这里，加法就实现完毕了</p>
<p>负数<br />计算机中的负数实现，是将正数按位取反获取反码，之后+1获得补码，这个结果就是某个正数所对应的负数。（这个在计算机组成原理、操作系统、计算机导论、离散数学等课本中都有，不记得的请翻一下大学课本。）。</p>
<p>负数的实现其实还是比较简单的，按位取反之后+1即可。</p>
<p>public int negative(int num) {<br />return add(~num, 1);<br />}<br />减法<br />实现了负数之后，我们第一步实现的加法就可以和负数进行运算了，而减法也就变得简单起来。</p>
<p>减法的实现如4-2等价于4+(-2)，我们直接使用加法和负数就可以实现。</p>
<p>public int minus(int a, int b) {<br />return add(a, negative(b));<br />}<br />绝对值<br />接下来要实现乘法和除法。乘法和除法可能会有正数和负数相互计算的情况，因此我们实现乘除之前，需要先实现绝对值计算的功能，将运算数字转换成绝对值进行乘除，之后判断是否需要加上负号即可。</p>
<p>public int abs(int num) {<br />if (num &lt; 0) {<br />num = minus(0, num);<br />}<br />return num;<br />}<br />乘法<br />乘法的实现，如11*10，乘法的流程如下面所示。</p>
<p>0000 1011 （11）<br />0000 1010 （10）<br />================<br />0001 0110 （1011&lt;&lt;1，相当于乘以0010）<br />0101 1000 （1011&lt;&lt;3，相当于乘以1000）<br />可以看到，二进制乘法的原理是：从乘数的低位到高位，遇到1并且这个1在乘数的右边起第i（i从0开始）位，那么就把被乘数左移i位得到temp_i，直到乘数中的1遍历完毕后，把根据各位1而得到的被乘数的左移值全部相加即得到乘法结果。</p>
<p>而至于存在负数的运算，可以先获取负数的个数，再将两个数字转换成绝对值计算，最后判断当负数是1个时，计算结果就是负数，其他情况则是正数。</p>
<p>public int multi(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int i = 0;<br />int res = 0;<br />// 乘数为0则结束<br />while (b != 0) {<br />// 处理乘数当前位<br />if ((b &amp; 1) == 1) {<br />res = add(res, a &lt;&lt; i);<br />}<br />b = b &gt;&gt; 1;<br />i = add(i, 1);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />negativeCount方法</p>
<p>public int negativeCount(int a, int b) {<br />int count = 0;<br />if (a &lt; 0) {<br />count = add(count, 1);<br />}<br />if (b &lt; 0) {<br />count = add(count, 1);<br />}<br />return count;<br />}<br />乘法事实上有个简单的实现。乘法就是个连加的过程，如5*4就是4个5相加，这个虽然性能比较低，但是操作起来简单，感兴趣的朋友可以自己去实现。</p>
<p>除法<br />除法没有什么简单的二进制实现方案，实际计算机中的除法也是通过连减去计算的。a/b的意义就是求a可以由多少个b组成，因此除法可以求a能减去多少个b。至于负数的情况，和乘法相同，不再介绍。</p>
<p>public int sub(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int res;<br />if (a &lt; b) {<br />return 0;<br />} else {<br />res = add(sub(minus(a, b), b), 1);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />取模<br />取模运算的思路和除法一样，也是个连减的过程，一直减到我们减不了为止，剩下的值就是我们要的结果。</p>
<p>public int mode(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int res;<br />if (a &lt; b) {<br />res = a;<br />} else {<br />res = sub(minus(a, b), b);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />结语<br />总的来说，加减乘除的实现还是比较简单的，只是对于初学者来说比较难想。熟悉了这类&ldquo;不给xxx如何实现xxx&rdquo;的题目之后，就能第一时间想到位运算了，通过位运算去实现运算符规则，实现起来就没有什么难度了。</p>
<p>最后还是需要点评一下这道题。这个问题相比上次的问题，稍微的有那么点水平，但是还是不难看出面试官在刁难人。程序员需要懂的原理，应该是开发中的各种框架原理，如HashMap、Spring、Mybatis等，理解了原理才能更好的优化、扩展，以便于提高性能。而所谓的加减乘除原理并没有这些重要，往往在上大学的时候也就了解过了。加减乘除原理的理解对性能优化帮助并不大，即使位运算性能比减法和除法高，但是这点性能损耗，在我们服务器动辄4g8g的情况下是没有任何区别的。所以说面试的时候别问这种刁难人的问题啊，你就是造造火箭问问Spring也好！</p>
<p>如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>(String), 1(Integer), 30(Integer), 19(Integer), 2(Integer), 0(Integer), 1264358511910559744(String), 49(Integer)
2020-06-13 19:06:04.914 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:04.933 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-13 19:06:04.943 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-13 19:06:04.944 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-06-13 19:06:04.974 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:05.086 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:05.088 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1264358511910559744(String), [1264358511910559744](String), 1(Integer), null, GET(String), 365(Long), {"code":20000,"data":{"blogCollection":19,"blogComment":0,"blogContent":"<p>前言<br />接前面一篇博客，这又是某个公司的奇葩面试题（都说了到底是哪家公司才会出这种没营养的面试题）。不过吐槽归吐槽，这个题目还是有点学问的，比前面那个&nbsp;不使用比较运算符如何比较两个数的大小 强多了（但是还是能看出面试官是在存心刁难人）。</p>\n<p>原题是&ldquo;只给加法，如何实现减乘除&rdquo;，我寻思着，既然减乘除都不给了，那就加大点难度，加法也别给了吧，今天就手动去实现加减乘除。这里只实现int类型的加减乘除。</p>\n<p>一说到这种&ldquo;不给xxx如何实现xxx的问题&rdquo;，那第一个想到的就是位运算，因此本篇博客的各种运算也是基于位运算的。关于位运算的知识点，请阅读本博客的看官们自行百度学习。。。。</p>\n<p>加法<br />我们先举个加法的例子：8+9=17，可以转换成10+7，即：二者相加不考虑进位的值，和二者相加只考虑进位的值相加。我们再通过二进制来直观的看一下。</p>\n<p>0000 1000 (8)<br />0000 1001 (9)<br />0001 0001 (17)<br />下面描述一下思路（可能有点绕）。</p>\n<p>首先我们看，直接二进制相加的结果，0+0=0,1+0=1,1+1=10。好像能看出点什么。前两个的运算规则复合&ldquo;异或运算&rdquo;，而后者则复合与运算并左移1位。</p>\n<p>到现在思路就清楚了：a^b的结果是不考虑进位的结果，而a&amp;b&lt;&lt;1是只考虑进位的结果。把二者相加即可。如果相加后，可能还存在进位，那就让这两个数字继续相加，一直到进位为0为止。这里使用递归去实现，感兴趣的可以用循环实现，性能比递归要高。</p>\n<p>public int add(int a, int b) {<br />// 得到原位和<br />int xor = a ^ b;<br />// 得到进位和<br />int forWoad = (a &amp; b) &lt;&lt; 1;<br />return forWoad == 0 ? xor : add(xor, forWoad);<br />}<br />到这里，加法就实现完毕了</p>\n<p>负数<br />计算机中的负数实现，是将正数按位取反获取反码，之后+1获得补码，这个结果就是某个正数所对应的负数。（这个在计算机组成原理、操作系统、计算机导论、离散数学等课本中都有，不记得的请翻一下大学课本。）。</p>\n<p>负数的实现其实还是比较简单的，按位取反之后+1即可。</p>\n<p>public int negative(int num) {<br />return add(~num, 1);<br />}<br />减法<br />实现了负数之后，我们第一步实现的加法就可以和负数进行运算了，而减法也就变得简单起来。</p>\n<p>减法的实现如4-2等价于4+(-2)，我们直接使用加法和负数就可以实现。</p>\n<p>public int minus(int a, int b) {<br />return add(a, negative(b));<br />}<br />绝对值<br />接下来要实现乘法和除法。乘法和除法可能会有正数和负数相互计算的情况，因此我们实现乘除之前，需要先实现绝对值计算的功能，将运算数字转换成绝对值进行乘除，之后判断是否需要加上负号即可。</p>\n<p>public int abs(int num) {<br />if (num &lt; 0) {<br />num = minus(0, num);<br />}<br />return num;<br />}<br />乘法<br />乘法的实现，如11*10，乘法的流程如下面所示。</p>\n<p>0000 1011 （11）<br />0000 1010 （10）<br />================<br />0001 0110 （1011&lt;&lt;1，相当于乘以0010）<br />0101 1000 （1011&lt;&lt;3，相当于乘以1000）<br />可以看到，二进制乘法的原理是：从乘数的低位到高位，遇到1并且这个1在乘数的右边起第i（i从0开始）位，那么就把被乘数左移i位得到temp_i，直到乘数中的1遍历完毕后，把根据各位1而得到的被乘数的左移值全部相加即得到乘法结果。</p>\n<p>而至于存在负数的运算，可以先获取负数的个数，再将两个数字转换成绝对值计算，最后判断当负数是1个时，计算结果就是负数，其他情况则是正数。</p>\n<p>public int multi(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int i = 0;<br />int res = 0;<br />// 乘数为0则结束<br />while (b != 0) {<br />// 处理乘数当前位<br />if ((b &amp; 1) == 1) {<br />res = add(res, a &lt;&lt; i);<br />}<br />b = b &gt;&gt; 1;<br />i = add(i, 1);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />negativeCount方法</p>\n<p>public int negativeCount(int a, int b) {<br />int count = 0;<br />if (a &lt; 0) {<br />count = add(count, 1);<br />}<br />if (b &lt; 0) {<br />count = add(count, 1);<br />}<br />return count;<br />}<br />乘法事实上有个简单的实现。乘法就是个连加的过程，如5*4就是4个5相加，这个虽然性能比较低，但是操作起来简单，感兴趣的朋友可以自己去实现。</p>\n<p>除法<br />除法没有什么简单的二进制实现方案，实际计算机中的除法也是通过连减去计算的。a/b的意义就是求a可以由多少个b组成，因此除法可以求a能减去多少个b。至于负数的情况，和乘法相同，不再介绍。</p>\n<p>public int sub(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int res;<br />if (a &lt; b) {<br />return 0;<br />} else {<br />res = add(sub(minus(a, b), b), 1);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />取模<br />取模运算的思路和除法一样，也是个连减的过程，一直减到我们减不了为止，剩下的值就是我们要的结果。</p>\n<p>public int mode(int a, int b) {<br />// 先获取负数的个数<br />int negativeCount = negativeCount(a, b);<br />// 负数转正数进行计算<br />a = abs(a);<br />b = abs(b);<br />int res;<br />if (a &lt; b) {<br />res = a;<br />} else {<br />res = sub(minus(a, b), b);<br />}<br />if (negativeCount == 1) {<br />// 转为负数<br />res = negative(res);<br />}<br />return res;<br />}<br />结语<br />总的来说，加减乘除的实现还是比较简单的，只是对于初学者来说比较难想。熟悉了这类&ldquo;不给xxx如何实现xxx&rdquo;的题目之后，就能第一时间想到位运算了，通过位运算去实现运算符规则，实现起来就没有什么难度了。</p>\n<p>最后还是需要点评一下这道题。这个问题相比上次的问题，稍微的有那么点水平，但是还是不难看出面试官在刁难人。程序员需要懂的原理，应该是开发中的各种框架原理，如HashMap、Spring、Mybatis等，理解了原理才能更好的优化、扩展，以便于提高性能。而所谓的加减乘除原理并没有这些重要，往往在上大学的时候也就了解过了。加减乘除原理的理解对性能优化帮助并不大，即使位运算性能比减法和除法高，但是这点性能损耗，在我们服务器动辄4g8g的情况下是没有任何区别的。所以说面试的时候别问这种刁难人的问题啊，你就是造造火箭问问Spring也好！</p>\n<p>如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>","blogGoods":1,"blogId":"1264358511910559744","blogRead":30,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:05.158 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:11.944 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:11.945 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264358511910559744, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:12.005 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:14.677 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:14.678 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264358511910559744, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:14.741 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:16.056 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:16.057 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264358511910559744, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:16.119 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:16.478 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:16.479 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264358511910559744, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:16.538 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:16.610 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:16.612 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264358511910559744, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:16.696 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:34.322 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2020-06-13 19:06:34.322 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: tangtu22(String)
2020-06-13 19:06:34.422 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 19:06:34.533 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:34.535 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 153(Long), {"code":20000,"data":{"user":{"deleted":0,"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","password":"","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22"},"token":"4FF393D4CF0F21D7D59280A1F0C8F782"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:34.618 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:35.296 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-06-13 19:06:35.297 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-06-13 19:06:35.331 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-06-13 19:06:35.350 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2020-06-13 19:06:35.351 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-06-13 19:06:35.369 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:35.371 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:162)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:172)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getCollection(<generated>)
(String), GET(String), 81(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:35.391 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-06-13 19:06:35.393 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-06-13 19:06:35.394 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-06-13 19:06:35.395 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc LIMIT 5 
2020-06-13 19:06:35.396 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-06-13 19:06:35.425 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-06-13 19:06:35.431 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:35.432 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 5
2020-06-13 19:06:35.471 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:35.472 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, POST(String), 83(Long), {"code":20000,"data":[{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":30,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java"},{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:35.519 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:35.520 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:136)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:149)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getGood(<generated>)
(String), POST(String), 228(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":1,"blogComment":2,"blogGoods":2,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":13,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-10 11:31:50"},{"blogCollection":12,"blogComment":4,"blogGoods":3,"blogId":"1264365258452664320","blogRead":12,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-10 03:13:53"},{"blogCollection":19,"blogComment":0,"blogGoods":1,"blogId":"1264358511910559744","blogRead":30,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-13 11:06:06"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264365631460507648","blogRead":11,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-04-24 01:20:33","typeName":"linux","updateTime":"2020-06-10 03:13:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":2,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-04-24 01:12:57","typeName":"java","updateTime":"2020-06-09 13:21:36"},{"blogCollection":0,"blogComment":5,"blogGoods":1,"blogId":"1264358089300877312","blogRead":4,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:35","typeName":"java","updateTime":"2020-06-10 03:12:22"},{"blogCollection":0,"blogComment":1,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-02-24 00:50:27","typeName":"linux","updateTime":"2020-06-10 03:10:30"},{"blogCollection":0,"blogComment":1,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":2,"blogTitle":"垃圾回收算法","createdTime":"2020-02-24 00:49:00","typeName":"java","updateTime":"2020-06-10 03:10:48"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:35.547 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:35.582 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:35.903 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-06-13 19:06:35.904 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2020-06-13 19:06:35.915 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2020-06-13 19:06:35.915 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-06-13 19:06:35.934 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2020-06-13 19:06:35.949 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-06-13 19:06:35.969 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:35.970 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 83(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:35.989 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:35.990 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 82(Long), {"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMOaACqYhAAAOurxSY9A577.jpg","id":1,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\n[00:01.62]作词：Ming.明\n[00:02.33]作曲：Pig小优\n[00:03.08]编曲：Pig小优\n[00:03.84]后期：Pig小优\n[00:04.54]美工：张小喵\n[00:09.15]踏红船繁华似人间\n[00:12.03]灯火熙攘祈愿\n[00:14.00]手中红线姻缘何时现\n[00:17.57]薄雾小雨润如烟\n[00:19.94]灯中画舫烟中浅\n[00:24.93]这尘缘如惊鸿一面\n[00:27.85]谁家翩翩少年\n[00:29.85]桥边白衣如纤印心间\n[00:33.34]这世间情话誓言\n[00:35.81]不抵这柔情一眼\n[00:40.79]步儿缓红绳缠\n[00:42.70]石桥边灯火染\n[00:44.72]杯中仙促长谈\n[00:46.79]舷外雨声人言难断\n[00:49.71]已成烟已消散\n[00:51.62]化作春意满\n[00:55.75]晚来风寒心却暖\n[00:57.57]三两杯酒后情又添\n[01:00.08]暮鼓丝弦声声慢\n[01:02.36]有佳人舞芊芊\n[01:04.32]研磨提笔在画卷眉目间流转\n[01:08.49]细雨婵娟\n[01:12.25]醉卧画舫听雨眠一场梦无言\n[01:15.93]窗外依旧喧怎转眼桥上人不见\n[01:20.46]回眸深处看细雨茫茫如烟\n[01:24.10]苦了思念\n[01:44.22]步儿缓红绳缠\n[01:46.18]石桥边灯火染\n[01:48.20]杯中仙促长谈\n[01:50.21]舷外雨声人言难断\n[01:53.18]已成烟已消散\n[01:55.15]化作春意满\n[01:59.25]晚来风寒心却暖\n[02:01.16]三两杯酒后情又添\n[02:03.53]暮鼓丝弦声声慢\n[02:05.74]有佳人舞芊芊\n[02:07.80]研磨提笔在画卷眉目间流转\n[02:12.03]细雨婵娟\n[02:15.69]醉卧画舫听雨眠一场梦无言\n[02:19.42]窗外依旧喧怎转眼桥上人不见\n[02:23.95]回眸深处看细雨茫茫如烟\n[02:27.58]苦了思念\n[02:43.49]青山乌蓬伴流年繁华多阑珊\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\n[02:51.46]满纸柔情过指尖笔墨笑意染\n[02:55.64]长袖翩翩\n[02:59.52]醉卧画舫听雨眠一场梦无言\n[03:03.10]窗外依旧喧怎转眼桥上人不见\n[03:07.48]回眸深处看水中喜字红残\n[03:11.31]倒了人间\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7iMRKAckVMAInbwpYfM3A430.mp3"},{"artist":"匿名","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVAeADSvsAAAQjTIrrnM214.jpg","id":2,"lrc":"[00:01.87]Take Me Away -逃跑计划\n[00:18.66]编辑:水妈 QQ:331451919\n[00:23.99]I use to be myself\n[00:27.59]And use to play around\n[00:31.47]Sometime I don't want to think\n[00:34.33]Maybe cause I'm afraid\n[00:38.51]I do wanna sing my song\n[00:42.36]No matter what you say\n[00:46.12]With you I never think\n[00:48.95]along~\n[00:49.69]I lood into my soul\n[00:52.63]One day I hope somepoeple take to me\n[00:57.68]About life\n[01:00.85]But I can't take no more\n[01:04.71]Where where where where my Shangri-la\n[01:08.32]I do wanna sing my song\n[01:11.86]No matter what you say\n[01:15.64]With you I never think\n[01:18.48]I lood into my soul\n[01:22.10]One day I hope somepoeple take to me\n[01:26.89]About life\n[01:30.35]But I can't take no more\n[01:34.32]Where...where...where...where my Shangri-la\n[01:38.28]Many many time I want to go\n[01:41.64]So I hardly open my eyes\n[01:45.66]The truth even force me run...run...run...run away...run away\n[01:53.21]But now I'm same to you\n[01:56.47]But I feel nothing better for sure\n[02:00.16]The star...star...star would you take me away\n[02:24.36]Many many time I want to go\n[02:27.61]So I hardly open my eyes\n[02:31.71]The truth even force me run...run...run...run away...run away\n[02:39.14]But now I'm same to you\n[02:42.47]But I feel nothing better for sure\n[02:46.48]The star...star...star would you take me away\n[02:53.98]Many many time I want to go\n[02:57.33]So I hardly open my eyes\n[03:01.30]The truth even force me run...run...run...run away...run away\n[03:08.99]Now I'm same as you\n[03:11.90]But I feel nothing better for sure\n[03:15.93]The star...star...star would you take me away\n[03:22.09]The best for right now\n[03:24.10]-end-","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVLeAdth3AACJ_hvYA4w070.jpg","id":3,"lrc":"[00:01.997]作词 : 薛之谦\n[00:03.929]作曲 : 薛之谦\n[00:06.012]\n[00:17.154]听专情的古人 把美言留给最爱的人\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\n[00:33.070]你没读懂课本 可世人硬要捧\n[00:41.350]看感情里的人 用肉眼分出三六九等\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\n[01:11.813]\n[01:12.202]所以 当我们都变成木偶人\n[01:17.471]你何苦再做一个痴情人表忠贞\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\n[01:29.805]\n[01:30.107]让我们都变成木偶人\n[01:33.678]再缝几针爱几次后就不会疼\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\n[01:46.963]\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\n[01:58.724]现在相爱的人 能耍的方式五花八门\n[02:07.230]要一式要两份 把热吻当罪证\n[02:15.298]让动了情的人 还要去分辨好人坏人\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\n[02:46.341]\n[02:46.606]所以 当我们都变成木偶人\n[02:51.507]你何苦再做一个痴情人表忠贞\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\n[03:03.407]\n[03:03.825]让我们都变成木偶人\n[03:07.373]再缝几针爱几次后就不会疼\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\n[03:21.158]\n[03:36.779]没有人能变成木偶人\n[03:39.795]无非是在感情里的逃避过程\n[03:43.999]我们盛气凌人 掩饰无权过问\n[03:48.773]遇见谁要拆几针\n[03:52.354]\n[03:52.631]当我们都羡慕木偶人\n[03:55.899]学会他在场面上的玩弄过程\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\n[04:23.520]\n[04:24.454]制作人 : 陈迪@TalentUnion\n[04:25.387]编曲 : 陈迪\n[04:26.274]吉他 : 劳国贤\n[04:27.357]贝斯 : 崔文正\n[04:28.378]鼓 : 王鹏\n[04:29.346]弦乐团 : 中国爱乐乐团\n[04:30.319]人声监制 : 杨祎\n[04:31.323]缩混 : 杨祎@RaySound Studio\n[04:32.382]母带 : 鲍锐@录顶技","name":"木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVFKARG1KAJ5SAlaB8pA938.mp3"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:36.031 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:36.060 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:38.694 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-13 19:06:38.695 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365258452664320(String)
2020-06-13 19:06:38.732 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:38.734 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-13 19:06:38.735 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 不使用比较运算符如何比较两个数的大小(String), <p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>
<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>
<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>
<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>
<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>
<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>
<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>(String), 3(Integer), 13(Integer), 12(Integer), 1(Integer), 4(Integer), 1264365258452664320(String), 29(Integer)
2020-06-13 19:06:38.740 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:38.741 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 73(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:38.806 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:38.806 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-13 19:06:38.808 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-06-13 19:06:38.809 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-06-13 19:06:38.812 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:38.814 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollection/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 129(Long), {"code":20000,"data":0,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:38.819 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:38.821 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getGood/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 135(Long), {"code":20000,"data":0,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:38.843 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:38.872 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:38.881 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:38.953 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:38.954 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 289(Long), {"code":20000,"data":{"blogCollection":12,"blogComment":4,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":3,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:39.026 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:41.605 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.updateGoods.debug:159 -==>  Preparing: update bl_blog set blog_goods=blog_goods+1 where blog_id= ? 
2020-06-13 19:06:41.605 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.updateGoods.debug:159 -==> Parameters: 1264365258452664320(String)
2020-06-13 19:06:41.668 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.updateGoods.debug:159 -<==    Updates: 1
2020-06-13 19:06:41.876 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:41.876 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/good(String), [BlogGoods(id=null, userId=null, blogId=1264365258452664320)](String), 1(Integer), null, POST(String), 274(Long), {"code":20000,"msg":"点赞成功"}(String), 127.0.0.1(String)
2020-06-13 19:06:41.942 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:42.353 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:42.354 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getGood/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:162)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:172)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getCollection(<generated>)
(String), GET(String), 39(Long), {"code":20000,"data":1,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:42.418 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:47.022 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-13 19:06:47.023 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365258452664320(String)
2020-06-13 19:06:47.054 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:47.089 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-13 19:06:47.090 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 不使用比较运算符如何比较两个数的大小(String), <p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>
<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>
<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>
<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>
<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>
<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>
<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>(String), 4(Integer), 13(Integer), 12(Integer), 1(Integer), 5(Integer), 1264365258452664320(String), 30(Integer)
2020-06-13 19:06:47.154 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-13 19:06:47.189 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-06-13 19:06:47.190 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-06-13 19:06:47.223 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:47.349 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:47.351 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=66666666666666, commentUser=null, user=null, commentBlog=1264365258452664320, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 1(Integer), null, POST(String), 334(Long), {"code":20000,"msg":"评论成功"}(String), 127.0.0.1(String)
2020-06-13 19:06:47.423 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:47.898 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:47.899 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:136)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:149)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getGood(<generated>)
(String), GET(String), 92(Long), {"code":20000,"data":[{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:47.966 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:52.345 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-13 19:06:52.346 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365258452664320(String)
2020-06-13 19:06:52.381 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:52.416 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-13 19:06:52.418 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 不使用比较运算符如何比较两个数的大小(String), <p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>
<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>
<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>
<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>
<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>
<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>
<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>(String), 4(Integer), 13(Integer), 12(Integer), 1(Integer), 6(Integer), 1264365258452664320(String), 31(Integer)
2020-06-13 19:06:52.483 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-13 19:06:52.519 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-06-13 19:06:52.520 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-06-13 19:06:52.553 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:52.622 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:52.623 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=很秀, commentUser=null, user=null, commentBlog=1264365258452664320, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 1(Integer), null, POST(String), 339(Long), {"code":20000,"msg":"评论成功"}(String), 127.0.0.1(String)
2020-06-13 19:06:52.686 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:53.116 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:53.118 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 65(Long), {"code":20000,"data":[{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:53.185 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:55.903 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-06-13 19:06:55.904 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365258452664320(String)
2020-06-13 19:06:55.938 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:55.973 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-06-13 19:06:55.974 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 不使用比较运算符如何比较两个数的大小(String), <p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>
<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>
<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>
<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>
<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>
<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>
<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>(String), 4(Integer), 13(Integer), 12(Integer), 1(Integer), 7(Integer), 1264365258452664320(String), 32(Integer)
2020-06-13 19:06:56.039 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-06-13 19:06:56.084 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-06-13 19:06:56.086 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-06-13 19:06:56.134 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-06-13 19:06:56.205 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:56.206 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/save(String), [Comment(id=null, commentContent=很强, commentUser=null, user=null, commentBlog=1264365258452664320, blog=null, commentGood=null, createdTime=null, commentFlag=false)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 305(Long), {"code":20000,"msg":"评论成功"}(String), 127.0.0.1(String)
2020-06-13 19:06:56.270 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:06:56.718 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:06:56.720 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1264365258452664320(String), [1264365258452664320](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 68(Long), {"code":20000,"data":[{"blog":{"blogCollection":12,"blogComment":7,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":32},"commentBlog":"1264365258452664320","commentContent":"很强","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:56","id":"1271760961437118464","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:06:56.787 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:07:00.623 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:07:00.625 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:60)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$be870827.getLoginInfo(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":0,"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:07:00.688 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:07:09.343 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-06-13 19:07:09.344 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-06-13 19:07:09.376 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-06-13 19:07:09.452 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:07:09.455 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 131(Long), {"code":20000,"data":{"token":"4FF393D4CF0F21D7D59280A1F0C8F782"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:07:09.519 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:07:09.906 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:07:09.908 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:07:09.973 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:07:10.335 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 19:07:10.336 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 19:07:10.369 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 19:07:10.406 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:07:10.407 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:162)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:172)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getCollection(<generated>)
(String), GET(String), 79(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:07:10.472 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:07:10.671 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:07:10.672 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 38(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":7,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":32},"commentBlog":"1264365258452664320","commentContent":"很强","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:56","id":"1271760961437118464","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:07:10.740 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:12:04.494 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:12:04.499 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:136)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$36368b7f.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b8202161.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:149)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$b05010bc.getGood(<generated>)
(String), POST(String), 77(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":7,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":32},"commentBlog":"1264365258452664320","commentContent":"很强","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:56","id":"1271760961437118464","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:12:04.569 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:13:18.345 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:13:18.346 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 47(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":7,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":32},"commentBlog":"1264365258452664320","commentContent":"很强","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:56","id":"1271760961437118464","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:13:18.419 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:13:37.363 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:13:37.368 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:13:37.436 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:13:37.926 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-06-13 19:13:37.927 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-06-13 19:13:37.963 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-06-13 19:13:37.970 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:13:37.972 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), POST(String), 56(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blog":{"blogCollection":12,"blogComment":5,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":30},"commentBlog":"1264365258452664320","commentContent":"66666666666666","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:47","id":"1271760924174921728","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":6,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":31},"commentBlog":"1264365258452664320","commentContent":"很秀","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:52","id":"1271760946526367744","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}},{"blog":{"blogCollection":12,"blogComment":7,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":4,"blogId":"1264365258452664320","blogRead":13,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":32},"commentBlog":"1264365258452664320","commentContent":"很强","commentFlag":false,"commentGood":0,"commentUser":4,"createdTime":"20-06-13 19:06:56","id":"1271760961437118464","user":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7jVgWAMrZmAACJ_hvYA4w442.jpg","nickname":"老王11222222","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22","version":2}}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:13:38.004 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-06-13 19:13:38.006 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.controller.CommentController.save(CommentController.java:30)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$5cc66d7.save(<generated>)
(String), GET(String), 79(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-06-13 19:13:38.035 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-06-13 19:13:38.072 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
