2020-05-23 06:58:10.343 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 9412 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-23 06:58:10.365 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-23 06:58:40.654 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-23 06:58:41.549 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 161ms. Found 0 MongoDB repository interfaces.
2020-05-23 06:58:44.654 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f15a2fd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:44.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:45.001 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d7ad6e50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:45.016 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$be851292] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:45.029 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-23 06:58:45.484 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:45.561 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:45.778 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:53.283 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-23 06:58:53.290 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:53.880 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.672 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.748 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.796 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.808 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.820 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:57.823 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:58.219 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:58:58.326 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 06:59:01.250 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-23 06:59:01.394 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-23 06:59:01.394 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-23 06:59:01.394 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-23 06:59:03.068 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-23 06:59:03.070 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 49358 ms
2020-05-23 06:59:19.986 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-23 06:59:21.671 INFO  [cluster-ClusterId{value='5ec85947ebe6c739ce943f0e', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-23 06:59:37.243 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-23 06:59:37.280 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-23 06:59:37.300 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 108.043 seconds (JVM running for 120.353)
2020-05-23 08:43:21.810 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-23 08:43:21.901 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-23 08:43:22.219 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 317 ms
2020-05-23 08:43:23.801 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 08:43:23.802 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 08:43:23.804 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 08:43:23.807 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 08:43:23.808 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 08:43:26.978 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3178
2020-05-23 08:43:28.138 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 08:43:28.139 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 08:43:28.140 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 08:43:28.140 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 08:43:28.140 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 08:43:28.330 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"7C3C369A9DF299718333B98F6E204A1B"},"msg":"操作成功！"}
2020-05-23 08:43:37.516 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 08:43:47.408 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 08:43:47.409 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 08:43:47.410 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 08:43:47.411 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 08:43:47.461 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 19323
2020-05-23 08:43:47.461 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"D9F46A13359032659983CF3BFEF0320C"},"msg":"操作成功！"}
2020-05-23 08:43:47.546 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 10030
2020-05-23 08:43:47.547 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"AFD97760370DDB20893E1DE0D5E4B32B"},"msg":"操作成功！"}
2020-05-23 08:43:55.994 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 08:43:55.999 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 08:43:56.000 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 08:43:56.001 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 08:43:56.002 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 08:43:56.109 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 116
2020-05-23 08:43:56.110 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"BEE2E3EEA2F4D64423F2C8805709CF4E"},"msg":"操作成功！"}
2020-05-23 08:43:56.340 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 08:43:56.340 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 08:43:56.341 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 08:43:56.341 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 08:43:56.342 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 08:43:56.343 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 08:43:56.353 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 09:25:51.726 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 8864 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-23 09:25:51.735 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-23 09:25:54.545 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-23 09:25:54.638 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 85ms. Found 0 MongoDB repository interfaces.
2020-05-23 09:25:55.313 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7d8e8a61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.410 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.430 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$63e1c8dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.430 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4ab96d1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.440 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-23 09:25:55.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:25:55.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:00.890 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-23 09:26:00.891 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.005 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.650 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.662 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.675 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.684 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.687 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.690 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.756 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:01.815 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 09:26:02.642 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-23 09:26:02.671 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-23 09:26:02.672 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-23 09:26:02.672 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-23 09:26:03.367 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-23 09:26:03.368 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 11372 ms
2020-05-23 09:26:05.123 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-23 09:26:06.179 INFO  [cluster-ClusterId{value='5ec87bad471dbb1090104e3c', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-23 09:26:06.368 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-23 09:26:06.450 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-23 09:26:06.476 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 16.478 seconds (JVM running for 20.701)
2020-05-23 09:28:29.037 INFO  [http-nio-1001-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-23 09:28:29.038 INFO  [http-nio-1001-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-23 09:28:29.056 INFO  [http-nio-1001-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 17 ms
2020-05-23 09:29:35.530 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 09:29:35.531 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 09:29:35.532 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 09:29:35.534 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 09:29:35.535 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 09:29:35.944 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 415
2020-05-23 09:29:36.058 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"507EDD86E51AD195E0FB55EF976D92C3"},"msg":"操作成功！"}
2020-05-23 09:29:36.293 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 09:29:36.294 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 09:29:36.294 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 09:29:36.295 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 09:29:36.295 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 09:29:36.296 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 09:29:36.303 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:13:05.334 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 10:13:05.368 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 10:13:05.368 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:13:05.369 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 10:13:05.370 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 10:13:05.547 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 213
2020-05-23 10:13:05.550 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"EB41D4CFABE20A1C03B5770955C53D72"},"msg":"操作成功！"}
2020-05-23 10:13:06.064 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:13:06.065 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:13:06.065 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:13:06.066 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:13:06.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:13:06.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 10:13:06.068 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:20:35.493 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:20:35.495 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:20:35.496 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:20:35.498 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:20:35.499 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:20:35.500 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 10:20:35.502 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:28:52.845 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:28:52.847 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:28:52.848 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:28:52.849 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:28:52.849 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:28:52.850 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 10:28:52.852 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:29:45.102 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:29:45.103 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:29:45.104 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:29:45.105 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:29:45.105 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:29:45.711 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 609
2020-05-23 10:29:45.733 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:30:10.440 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:30:10.441 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:30:10.442 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:30:10.443 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:30:10.444 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:30:10.682 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 242
2020-05-23 10:30:10.683 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:30:20.118 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:30:20.119 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:30:20.120 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:30:20.121 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:30:20.121 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:30:20.122 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 10:30:20.123 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:30:20.890 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:30:20.891 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:30:20.891 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:30:20.892 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:30:20.892 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:30:21.120 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 230
2020-05-23 10:30:21.120 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:30:42.545 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:30:42.546 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:30:42.546 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:30:42.547 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:30:42.549 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:30:42.550 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 10:30:42.550 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:30:43.006 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:30:43.007 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:30:43.008 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:30:43.009 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:30:43.009 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:30:43.128 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-05-23 10:30:43.129 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:31:30.502 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:31:30.503 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:31:30.503 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:31:30.504 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:31:30.505 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:31:30.505 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 10:31:30.506 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:31:31.266 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:31:31.266 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:31:31.267 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:31:31.268 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:31:31.268 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:31:31.372 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 106
2020-05-23 10:31:31.373 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:38:17.587 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:38:17.588 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:38:17.589 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:38:17.589 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:38:17.589 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:38:17.800 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 213
2020-05-23 10:38:17.802 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:38:19.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:38:19.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:38:19.202 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:38:19.203 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:38:19.204 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:38:19.204 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 10:38:19.206 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:38:19.858 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:38:19.858 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:38:19.859 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:38:19.859 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:38:19.860 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:38:19.978 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 120
2020-05-23 10:38:19.980 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:39:18.918 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:39:18.919 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:39:18.920 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:39:18.920 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:39:18.921 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:39:18.921 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 10:39:18.922 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:39:19.699 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:39:19.699 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:39:19.700 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:39:19.701 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:39:19.701 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:39:19.822 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-05-23 10:39:19.824 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:40:20.024 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:40:20.025 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:40:20.026 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:40:20.027 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:40:20.028 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:40:20.131 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 107
2020-05-23 10:40:20.132 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:40:26.119 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:40:26.120 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:40:26.122 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:40:26.123 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:40:26.123 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:40:26.123 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 10:40:26.124 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:40:26.788 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:40:26.788 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:40:26.788 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:40:26.788 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:40:26.788 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:40:26.888 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 100
2020-05-23 10:40:26.888 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:50:12.001 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:50:12.001 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:50:12.002 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:50:12.003 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:50:12.003 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:50:12.124 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-05-23 10:50:12.133 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:50:13.765 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:50:13.766 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:50:13.766 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:50:13.767 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:50:13.768 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:50:13.769 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 10:50:13.771 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:50:14.199 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:50:14.200 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:50:14.201 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:50:14.202 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:50:14.202 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:50:14.309 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 110
2020-05-23 10:50:14.309 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:51:19.032 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:51:19.033 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:51:19.033 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:51:19.034 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:51:19.035 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:51:19.035 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 10:51:19.036 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:51:19.563 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:51:19.564 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:51:19.565 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:51:19.565 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:51:19.566 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:51:19.683 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 120
2020-05-23 10:51:19.684 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:53:39.070 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:53:39.082 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:53:39.086 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:53:39.086 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:53:39.087 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:53:39.509 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 439
2020-05-23 10:53:39.512 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:54:20.153 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:54:20.153 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:54:20.154 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:54:20.154 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:54:20.155 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:54:20.288 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 135
2020-05-23 10:54:20.289 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 10:55:27.343 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 10:55:27.345 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:55:27.345 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:55:27.346 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 10:55:27.347 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:55:27.348 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 10:55:27.348 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 10:55:28.148 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 10:55:28.148 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 10:55:28.149 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 10:55:28.149 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 10:55:28.150 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 10:55:28.309 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 161
2020-05-23 10:55:28.311 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:14:31.042 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:14:31.051 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:14:31.051 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:14:31.052 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:14:31.053 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:14:31.054 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 12
2020-05-23 11:14:31.060 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:14:32.098 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:14:32.098 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:14:32.100 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:14:32.100 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:14:32.100 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:14:32.647 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 549
2020-05-23 11:14:32.649 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:18:44.793 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:18:44.794 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:18:44.796 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:18:44.798 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:18:44.799 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:18:44.799 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 11:18:44.800 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:18:45.504 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:18:45.508 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:18:45.508 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:18:45.509 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:18:45.510 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:18:45.616 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 112
2020-05-23 11:18:45.617 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 0
2020-05-23 11:18:56.799 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:18:57.200 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:18:57.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:18:57.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:18:57.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:18:57.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:18:57.305 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 105
2020-05-23 11:18:57.307 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:28:10.311 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:28:10.315 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:28:10.315 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:28:10.316 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:28:10.317 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:28:10.319 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 9
2020-05-23 11:28:10.322 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:28:11.012 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:28:11.016 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:28:11.017 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:28:11.018 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:28:11.018 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:28:11.891 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 879
2020-05-23 11:28:11.892 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:35:08.182 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:35:08.195 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:35:08.195 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:35:08.196 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:35:08.196 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:35:08.415 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 233
2020-05-23 11:35:08.418 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:35:25.843 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:35:25.846 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:35:25.847 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:35:25.850 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:35:25.851 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:35:25.852 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 9
2020-05-23 11:35:25.853 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:35:26.578 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:35:26.578 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:35:26.579 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:35:26.580 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:35:26.580 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:35:26.710 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 132
2020-05-23 11:35:26.711 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:35:45.421 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:35:45.421 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:35:45.421 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:35:45.422 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:35:45.422 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:35:45.422 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1
2020-05-23 11:35:45.423 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:35:45.811 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:35:45.812 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:35:45.813 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:35:45.814 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:35:45.815 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:35:45.924 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 113
2020-05-23 11:35:45.924 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 11:36:26.697 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 11:36:26.698 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:36:26.699 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:36:26.699 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 11:36:26.700 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:36:26.703 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 11:36:26.704 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 11:36:27.075 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 11:36:27.076 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 11:36:27.077 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 11:36:27.078 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 11:36:27.081 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 11:36:27.201 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 126
2020-05-23 11:36:27.202 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:13:14.756 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 11992 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-05-23 12:13:14.766 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-05-23 12:13:16.506 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-05-23 12:13:16.553 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 41ms. Found 0 MongoDB repository interfaces.
2020-05-23 12:13:17.078 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8c42dc50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.168 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$72961acc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.172 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$596dbf0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.178 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-05-23 12:13:17.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.251 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:17.271 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.001 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-05-23 12:13:22.001 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.331 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.341 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.351 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.351 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.401 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.431 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-23 12:13:22.776 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-05-23 12:13:22.786 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-05-23 12:13:22.786 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-05-23 12:13:22.786 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-23 12:13:22.936 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-05-23 12:13:22.936 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 8029 ms
2020-05-23 12:13:24.229 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-05-23 12:13:25.164 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-05-23 12:13:25.194 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-05-23 12:13:25.207 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 11.438 seconds (JVM running for 13.55)
2020-05-23 12:13:25.282 INFO  [cluster-ClusterId{value='5ec8a2e46fa02045365d1518', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-05-23 12:14:02.695 INFO  [http-nio-1001-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-23 12:14:02.695 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-05-23 12:14:02.723 INFO  [http-nio-1001-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 28 ms
2020-05-23 12:14:13.889 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 12:14:13.891 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 12:14:13.892 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:13.896 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 12:14:13.897 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 12:14:14.171 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 282
2020-05-23 12:14:14.303 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"EBC87F6D1FE3642DDA77607CC45DC05B"},"msg":"操作成功！"}
2020-05-23 12:14:14.650 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:14:14.651 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:14:14.652 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:14.652 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:14:14.654 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:14:14.655 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 12:14:14.663 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:14:15.305 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:14:15.306 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:14:15.307 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:15.308 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:14:15.308 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:14:15.425 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 120
2020-05-23 12:14:15.431 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:14:43.972 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:14:43.974 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:14:43.976 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:43.977 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:14:43.978 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:14:44.186 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 214
2020-05-23 12:14:44.187 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:14:51.023 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:14:51.032 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:14:51.034 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:51.035 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:14:51.036 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:14:51.037 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 14
2020-05-23 12:14:51.038 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:14:51.780 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:14:51.782 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:14:51.783 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:14:51.784 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:14:51.784 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:14:51.896 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 116
2020-05-23 12:14:51.897 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:17:06.504 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:17:06.505 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:17:06.508 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:17:06.510 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:17:06.512 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:17:06.650 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 146
2020-05-23 12:17:06.651 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:17:27.331 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:17:27.333 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:17:27.335 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:17:27.336 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:17:27.337 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:17:27.446 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 115
2020-05-23 12:17:27.446 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:17:30.188 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:17:30.189 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:17:30.190 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:17:30.192 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:17:30.192 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:17:30.193 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 12:17:30.195 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:17:30.907 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:17:30.908 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:17:30.908 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:17:30.909 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:17:30.910 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:17:31.291 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 384
2020-05-23 12:17:31.294 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:18:14.522 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:18:14.523 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:18:14.523 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:18:14.524 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:18:14.524 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:18:14.525 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 12:18:14.526 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:18:14.951 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:18:14.951 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:18:14.952 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:18:14.953 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:18:14.954 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:18:15.071 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 120
2020-05-23 12:18:15.071 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:20:50.201 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:20:50.205 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:20:50.205 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:20:50.206 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:20:50.207 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:20:50.390 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 189
2020-05-23 12:20:50.392 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:20:53.440 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:20:53.442 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:20:53.442 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:20:53.443 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:20:53.444 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:20:53.445 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 12:20:53.446 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:20:54.121 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:20:54.121 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:20:54.122 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:20:54.122 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:20:54.123 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:20:54.226 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 105
2020-05-23 12:20:54.227 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:21:32.821 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:21:32.824 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:21:32.825 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:21:32.825 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:21:32.826 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:21:33.298 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 479
2020-05-23 12:21:33.300 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:42:59.819 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:42:59.831 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:42:59.833 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:42:59.834 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:42:59.835 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:43:00.046 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 228
2020-05-23 12:43:00.049 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":0,"typeBlogCount":0,"typeId":9,"typeName":"springBoot"}],"msg":"操作成功！"}
2020-05-23 12:43:05.063 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/delete/9
2020-05-23 12:43:05.064 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 12:43:05.065 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:43:05.065 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.delete
2020-05-23 12:43:05.066 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[9]
2020-05-23 12:43:05.416 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 354
2020-05-23 12:43:05.417 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"删除成功"}
2020-05-23 12:43:05.895 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:43:05.896 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:43:05.897 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:43:05.897 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:43:05.898 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:43:06.009 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 114
2020-05-23 12:43:06.010 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 12:48:34.958 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:48:34.970 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:48:34.971 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:48:34.972 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:48:34.972 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:48:35.130 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 172
2020-05-23 12:48:35.134 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 12:48:36.575 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:48:36.576 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:48:36.577 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:48:36.578 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:48:36.578 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:48:36.579 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 12:48:36.580 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:48:37.243 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:48:37.243 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:48:37.244 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:48:37.244 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:48:37.245 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:48:37.426 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 183
2020-05-23 12:48:37.427 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 12:50:19.149 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 12:50:19.195 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:50:19.196 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:50:19.197 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 12:50:19.197 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:50:19.198 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 50
2020-05-23 12:50:19.200 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 12:50:19.902 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 12:50:19.903 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 12:50:19.904 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 12:50:19.904 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 12:50:19.905 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 12:50:20.030 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 128
2020-05-23 12:50:20.030 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:01:54.853 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:01:54.868 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:01:54.869 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:01:54.870 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:01:54.870 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:01:55.035 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 182
2020-05-23 13:01:55.037 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:04:57.953 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:04:57.967 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:04:57.968 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:04:57.969 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:04:57.970 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:04:58.138 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 186
2020-05-23 13:04:58.145 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:05:41.217 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:05:41.220 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:05:41.221 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:05:41.221 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:05:41.221 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:05:41.348 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 131
2020-05-23 13:05:41.349 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:07:50.626 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:07:50.630 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:07:50.631 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:07:50.632 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:07:50.632 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:07:50.967 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 341
2020-05-23 13:07:50.969 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:09:39.993 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:09:39.996 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:09:39.996 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:09:39.997 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:09:39.998 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:09:40.229 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 236
2020-05-23 13:09:40.230 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:11:03.992 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:11:03.994 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:11:03.995 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:11:03.996 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:11:03.996 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:11:04.109 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 117
2020-05-23 13:11:04.110 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:11:07.807 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:11:07.808 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:11:07.809 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:11:07.809 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:11:07.810 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:11:07.811 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 13:11:07.812 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:11:08.558 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:11:08.559 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:11:08.560 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:11:08.560 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:11:08.561 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:11:08.685 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 127
2020-05-23 13:11:08.687 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:25:48.061 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:25:48.075 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:25:48.075 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:25:48.076 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:25:48.076 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:25:48.284 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 224
2020-05-23 13:25:48.288 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:25:49.131 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:25:49.131 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:25:49.132 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:25:49.133 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:25:49.134 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:25:49.137 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 13:25:49.138 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:25:49.523 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:25:49.525 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:25:49.525 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:25:49.526 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:25:49.526 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:25:49.654 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 131
2020-05-23 13:25:49.655 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:26:05.681 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:26:05.681 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:26:05.682 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:26:05.683 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:26:05.685 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:26:05.686 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 13:26:05.687 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:26:06.442 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:26:06.444 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:26:06.445 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:26:06.446 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:26:06.446 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:26:06.558 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 116
2020-05-23 13:26:06.559 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:26:43.786 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:26:43.787 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:26:43.787 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:26:43.788 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:26:43.789 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:26:43.789 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 13:26:43.790 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:26:44.684 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:26:44.685 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:26:44.686 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:26:44.686 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:26:44.687 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:26:44.935 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 251
2020-05-23 13:26:44.936 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:28:09.498 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:28:09.499 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:28:09.500 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:28:09.501 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:28:09.501 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:28:09.502 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 13:28:09.504 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:28:09.839 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:28:09.839 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:28:09.840 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:28:09.844 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:28:09.845 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:28:10.014 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 175
2020-05-23 13:28:10.014 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"}],"msg":"操作成功！"}
2020-05-23 13:28:27.521 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/save
2020-05-23 13:28:27.521 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 13:28:27.521 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:28:27.521 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.save
2020-05-23 13:28:27.521 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Type(typeId=null, typeName=python, typeBlogCount=null, enable=null, deleted=null)]
2020-05-23 13:28:27.931 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 410
2020-05-23 13:28:27.941 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 13:28:28.129 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:28:28.129 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:28:28.130 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:28:28.131 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:28:28.132 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:28:28.230 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 101
2020-05-23 13:28:28.230 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"}],"msg":"操作成功！"}
2020-05-23 13:29:36.692 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:29:36.692 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:29:36.693 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:29:36.694 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:29:36.695 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:29:36.695 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 13:29:36.696 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:29:37.194 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:29:37.195 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:29:37.196 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:29:37.196 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:29:37.197 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:29:37.449 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 255
2020-05-23 13:29:37.450 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"}],"msg":"操作成功！"}
2020-05-23 13:29:51.008 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/save
2020-05-23 13:29:51.010 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 13:29:51.010 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:29:51.011 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.save
2020-05-23 13:29:51.012 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Type(typeId=null, typeName=redis, typeBlogCount=null, enable=null, deleted=null)]
2020-05-23 13:29:51.259 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 251
2020-05-23 13:29:51.259 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 13:29:51.433 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:29:51.434 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:29:51.435 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:29:51.436 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:29:51.436 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:29:51.539 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 106
2020-05-23 13:29:51.540 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:32:48.429 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:32:48.468 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:32:48.469 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:32:48.470 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:32:48.475 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:32:48.478 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 49
2020-05-23 13:32:48.481 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:32:49.182 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:32:49.183 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:32:49.183 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:32:49.184 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:32:49.184 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:32:49.293 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 111
2020-05-23 13:32:49.294 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:33:49.256 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:33:49.257 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:33:49.257 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:33:49.258 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:33:49.258 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:33:49.509 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 253
2020-05-23 13:33:49.510 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:35:08.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 13:35:08.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:35:08.481 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:35:08.482 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:35:08.482 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:35:08.483 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:35:08.483 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:35:08.589 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 108
2020-05-23 13:35:08.590 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:37:30.630 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:37:30.631 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:37:30.632 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:37:30.632 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:37:30.633 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:37:30.634 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 13:37:30.635 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:37:31.422 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:37:31.425 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:37:31.427 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:37:31.431 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:37:31.432 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:37:31.538 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 116
2020-05-23 13:37:31.540 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:48:36.767 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:48:36.812 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:48:36.814 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:48:36.815 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:48:36.828 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:48:36.983 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 217
2020-05-23 13:48:36.985 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:48:41.192 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:48:41.193 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:48:41.195 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:48:41.197 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:48:41.198 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:48:41.199 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 13:48:41.199 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:48:41.947 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:48:41.948 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:48:41.948 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:48:41.949 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:48:41.950 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:48:42.047 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 100
2020-05-23 13:48:42.048 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 13:51:13.971 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 13:51:13.973 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:51:13.973 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:51:13.974 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 13:51:13.978 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:51:13.979 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 8
2020-05-23 13:51:13.980 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 13:51:14.990 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 13:51:14.994 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 13:51:14.995 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 13:51:14.996 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 13:51:14.996 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 13:51:15.154 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 164
2020-05-23 13:51:15.155 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:00:38.037 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:00:38.048 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:00:38.048 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:00:38.049 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:00:38.053 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:00:38.056 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 20
2020-05-23 14:00:38.058 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:00:38.847 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:00:38.847 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:00:38.864 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:00:38.864 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:00:38.864 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:00:39.005 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 158
2020-05-23 14:00:39.005 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:01:49.125 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:01:49.126 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:01:49.126 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:01:49.126 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:01:49.127 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:01:49.127 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 2
2020-05-23 14:01:49.129 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:01:49.798 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:01:49.798 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:01:49.801 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:01:49.801 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:01:49.801 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:01:49.928 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 130
2020-05-23 14:01:49.928 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:07:03.494 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:07:03.504 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:07:03.506 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:07:03.507 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:07:03.508 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:07:03.686 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 192
2020-05-23 14:07:03.689 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:07:07.066 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/disabled/6
2020-05-23 14:07:07.066 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : PUT
2020-05-23 14:07:07.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:07:07.067 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.disabled
2020-05-23 14:07:07.068 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[6]
2020-05-23 14:07:07.611 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 545
2020-05-23 14:07:07.611 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"未启用"}
2020-05-23 14:07:08.139 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:07:08.140 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:07:08.141 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:07:08.141 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:07:08.142 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:07:08.269 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 130
2020-05-23 14:07:08.269 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:00.034 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:18:00.113 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:00.154 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:00.155 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:18:00.156 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:00.162 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 128
2020-05-23 14:18:00.165 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:18:01.518 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 14:18:01.519 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:01.520 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:01.521 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 14:18:01.521 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:01.537 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:18:01.538 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:01.538 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:01.539 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:18:01.540 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:01.637 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 119
2020-05-23 14:18:01.638 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:01.895 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 358
2020-05-23 14:18:01.896 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:02.352 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:18:02.354 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:02.355 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:02.355 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:18:02.356 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:02.356 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 14:18:02.357 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:18:03.014 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 14:18:03.016 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:03.016 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:03.017 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 14:18:03.018 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:03.118 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 104
2020-05-23 14:18:03.119 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:03.310 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:18:03.311 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:03.312 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:03.313 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:18:03.313 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:03.426 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 116
2020-05-23 14:18:03.427 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:42.386 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:18:42.387 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:42.395 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:42.396 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:18:42.398 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:42.398 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 12
2020-05-23 14:18:42.399 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:18:42.981 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 14:18:42.982 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:42.982 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:42.983 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 14:18:42.984 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:43.176 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 195
2020-05-23 14:18:43.177 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:18:43.292 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:18:43.293 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:18:43.294 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:18:43.294 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:18:43.295 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:18:43.429 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 137
2020-05-23 14:18:43.429 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:24:06.967 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 14:24:06.992 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:24:06.993 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:24:06.994 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 14:24:06.995 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:24:06.996 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 29
2020-05-23 14:24:07.000 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 14:24:07.692 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 14:24:07.693 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:24:07.694 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:24:07.694 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 14:24:07.695 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:24:07.806 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 114
2020-05-23 14:24:07.806 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:24:07.999 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 14:24:08.000 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 14:24:08.000 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:24:08.001 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 14:24:08.001 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 14:24:08.103 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 104
2020-05-23 14:24:08.150 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 14:24:17.479 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/get/6
2020-05-23 14:24:17.481 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 14:24:17.481 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 14:24:17.482 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getById
2020-05-23 14:24:17.482 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[6]
2020-05-23 14:24:17.845 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 366
2020-05-23 14:24:17.846 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},"msg":"操作成功！"}
2020-05-23 16:35:55.753 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 16:35:55.755 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 16:35:55.756 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 16:35:55.756 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 16:35:55.757 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 16:35:56.722 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 970
2020-05-23 16:35:56.762 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"42F9B273D6D6BFF255F870B79DDBDAFF"},"msg":"操作成功！"}
2020-05-23 16:35:57.003 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 16:35:57.003 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 16:35:57.006 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 16:35:57.006 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 16:35:57.007 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 16:35:57.007 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 16:35:57.008 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 16:35:57.705 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 16:35:57.707 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 16:35:57.708 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 16:35:57.708 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 16:35:57.709 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 16:35:57.712 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 16:35:57.713 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 16:35:57.714 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 16:35:57.714 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 16:35:57.715 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 16:35:57.871 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 167
2020-05-23 16:35:57.872 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 16:35:57.973 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 261
2020-05-23 16:35:57.973 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 16:36:03.827 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 16:36:03.828 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 16:36:03.828 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 16:36:03.828 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 16:36:03.829 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 16:36:03.951 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 124
2020-05-23 16:36:03.952 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:14:48.824 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 17:14:48.889 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:14:48.890 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:14:48.891 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 17:14:48.891 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 17:14:49.252 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 428
2020-05-23 17:14:49.254 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"15C46A909039934CC2432E7AFF07B7B8"},"msg":"操作成功！"}
2020-05-23 17:14:49.575 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:14:49.576 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:14:49.577 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:14:49.578 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:14:49.579 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:14:49.580 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 17:14:49.581 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:14:50.247 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:14:50.248 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:14:50.248 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:14:50.249 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:14:50.250 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:14:50.281 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/listBack
2020-05-23 17:14:50.282 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:14:50.282 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:14:50.283 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.list
2020-05-23 17:14:50.284 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:14:50.359 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 112
2020-05-23 17:14:50.359 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:14:50.404 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-05-23 17:14:50.405 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"enable":0,"typeBlogCount":0,"typeId":6,"typeName":"JavaBoot"},{"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"python"},{"enable":1,"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:14:54.613 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:14:54.614 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:14:54.615 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:14:54.615 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:14:54.626 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:14:55.890 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1277
2020-05-23 17:14:55.994 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:20:34.615 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:20:34.616 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:20:34.617 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:20:34.618 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:20:34.618 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:20:34.934 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 319
2020-05-23 17:20:34.935 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:26:33.536 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:26:33.540 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:26:33.541 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:26:33.541 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:26:33.542 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:26:33.902 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 366
2020-05-23 17:26:33.903 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:31:47.067 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:31:47.070 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:31:47.071 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:31:47.073 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:31:47.075 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:31:47.644 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 577
2020-05-23 17:31:47.645 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:33:15.611 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:33:15.614 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:33:15.615 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:33:15.617 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:33:15.618 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:33:15.939 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 328
2020-05-23 17:33:15.940 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:33:53.729 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:33:53.730 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:33:53.731 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:33:53.732 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:33:53.732 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:33:54.151 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 422
2020-05-23 17:33:54.152 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:36:26.893 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:36:26.897 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:36:26.897 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:36:26.898 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:36:26.899 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:36:26.900 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 17:36:26.903 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:36:27.760 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:36:27.761 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:36:27.761 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:36:27.761 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:36:27.762 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:36:27.762 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:36:27.762 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:36:27.763 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:36:27.763 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:36:27.763 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:36:27.866 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 106
2020-05-23 17:36:27.866 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:36:28.059 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 298
2020-05-23 17:36:28.061 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:37:19.498 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:37:19.501 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:37:19.501 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:37:19.502 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:37:19.503 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:37:19.864 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 366
2020-05-23 17:37:19.865 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:37:20.969 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:37:20.970 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:37:20.971 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:37:20.972 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:37:20.972 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:37:20.973 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 17:37:20.973 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:37:21.370 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:37:21.371 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:37:21.372 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:37:21.373 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:37:21.373 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:37:21.675 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:37:21.676 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:37:21.676 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:37:21.677 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:37:21.677 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:37:21.758 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 388
2020-05-23 17:37:21.762 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:37:21.774 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 99
2020-05-23 17:37:21.775 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:38:42.579 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:38:42.583 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:38:42.584 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:38:42.584 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:38:42.585 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:38:42.586 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 17:38:42.587 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:38:43.146 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:38:43.147 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:38:43.147 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:38:43.148 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:38:43.149 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:38:43.452 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 306
2020-05-23 17:38:43.453 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:38:43.456 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:38:43.456 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:38:43.459 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:38:43.460 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:38:43.461 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:38:43.566 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 110
2020-05-23 17:38:43.566 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:41:26.773 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:41:26.774 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:41:26.775 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:41:26.775 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:41:26.776 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:41:26.776 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 17:41:26.777 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:41:27.443 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:41:27.444 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:41:27.444 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:41:27.444 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:41:27.444 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:41:27.448 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:41:27.444 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:41:27.449 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:41:27.450 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:41:27.451 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:41:27.552 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 109
2020-05-23 17:41:27.553 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:41:27.764 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 320
2020-05-23 17:41:27.765 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:43:32.089 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:43:32.092 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:43:32.092 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:43:32.093 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:43:32.094 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:43:32.095 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 17:43:32.096 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:43:32.863 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:43:32.864 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:43:32.864 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:43:32.864 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:43:32.865 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:43:33.005 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 141
2020-05-23 17:43:33.007 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:43:33.187 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 324
2020-05-23 17:43:33.187 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:44:38.283 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:44:38.288 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:44:38.290 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:44:38.291 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:44:38.292 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:44:38.293 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 9
2020-05-23 17:44:38.294 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:44:39.121 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:44:39.122 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:44:39.123 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:44:39.123 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:44:39.124 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:44:39.124 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:44:39.124 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:44:39.124 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:44:39.125 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:44:39.125 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:44:39.228 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 107
2020-05-23 17:44:39.229 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:44:39.429 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 306
2020-05-23 17:44:39.430 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:45:38.321 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 17:45:38.324 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:45:38.325 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:45:38.326 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 17:45:38.330 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:45:38.331 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 10
2020-05-23 17:45:38.332 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 17:45:39.101 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 17:45:39.102 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 17:45:39.103 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:45:39.103 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:45:39.104 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:45:39.104 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 17:45:39.104 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:45:39.104 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 17:45:39.105 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:45:39.106 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:45:39.222 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 121
2020-05-23 17:45:39.223 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 17:45:39.404 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 301
2020-05-23 17:45:39.404 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:51:08.750 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:51:08.763 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:51:08.764 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:51:08.765 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:51:08.765 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:51:09.091 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 342
2020-05-23 17:51:09.092 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:51:25.438 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:51:25.439 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:51:25.439 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:51:25.440 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:51:25.440 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:51:25.726 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 288
2020-05-23 17:51:25.727 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:52:10.690 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:52:10.691 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:52:10.692 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:52:10.692 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:52:10.693 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:52:10.979 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 289
2020-05-23 17:52:10.980 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:53:43.781 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:53:43.783 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:53:43.784 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:53:43.784 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:53:43.785 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:53:44.252 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 471
2020-05-23 17:53:44.253 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:55:23.525 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:55:23.540 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:55:23.541 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:55:23.542 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:55:23.543 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:55:23.894 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 369
2020-05-23 17:55:23.896 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:55:58.763 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:55:58.765 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:55:58.766 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:55:58.766 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:55:58.767 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:55:59.063 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 300
2020-05-23 17:55:59.065 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 17:59:36.502 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 17:59:36.505 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 17:59:36.505 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 17:59:36.506 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 17:59:36.506 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 17:59:36.840 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 338
2020-05-23 17:59:36.841 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:06:45.031 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:06:45.098 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:06:45.098 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:06:45.099 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:06:45.100 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:06:45.101 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 70
2020-05-23 18:06:45.106 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:06:45.981 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:06:45.982 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:06:45.983 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:06:45.983 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:06:45.984 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:06:45.991 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:06:45.992 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:06:45.992 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:06:45.993 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:06:45.994 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:06:46.107 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 126
2020-05-23 18:06:46.108 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:06:46.310 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 319
2020-05-23 18:06:46.310 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:42:21.914 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/login
2020-05-23 18:42:21.917 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:42:21.918 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:42:21.918 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.login
2020-05-23 18:42:21.919 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]
2020-05-23 18:42:22.080 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 166
2020-05-23 18:42:22.091 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"token":"1A4D37CAF50390D597E1AC8B9F6B11B1"},"msg":"操作成功！"}
2020-05-23 18:42:22.325 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:42:22.325 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:42:22.326 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:42:22.326 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:42:22.327 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:42:22.327 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 18:42:22.327 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:42:23.016 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:42:23.017 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:42:23.018 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:42:23.019 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:42:23.020 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:42:23.027 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:42:23.028 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:42:23.029 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:42:23.029 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:42:23.029 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:42:23.123 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 107
2020-05-23 18:42:23.124 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:42:23.327 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 300
2020-05-23 18:42:23.328 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:43:18.202 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:43:18.203 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:43:18.203 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:43:18.204 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:43:18.207 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:43:18.209 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 18:43:18.212 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:43:18.689 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:43:18.690 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:43:18.690 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:43:18.695 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:43:18.697 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:43:18.838 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 149
2020-05-23 18:43:18.839 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:43:22.557 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:43:22.558 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:43:22.560 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:43:22.560 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:43:22.561 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:43:22.858 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 301
2020-05-23 18:43:22.860 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:45:08.343 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:45:08.348 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:45:08.349 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:45:08.350 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:45:08.351 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:45:08.354 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 11
2020-05-23 18:45:08.356 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:45:08.824 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:45:08.836 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:45:08.837 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:45:08.837 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:45:08.838 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:45:08.990 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 166
2020-05-23 18:45:08.991 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:45:09.129 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:45:09.130 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:45:09.130 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:45:09.130 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:45:09.131 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:45:09.436 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 307
2020-05-23 18:45:09.437 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:53:14.435 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:53:14.437 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:53:14.438 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:53:14.440 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:53:14.442 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:53:14.443 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 9
2020-05-23 18:53:14.445 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:53:15.553 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:53:15.606 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:53:15.607 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:53:15.607 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:53:15.608 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:53:15.610 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:53:15.611 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:53:15.611 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:53:15.611 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:53:15.612 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:53:15.761 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 208
2020-05-23 18:53:15.762 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:53:15.942 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 332
2020-05-23 18:53:15.943 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:54:07.636 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:54:07.637 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:54:07.637 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:07.638 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:54:07.639 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:54:07.640 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 4
2020-05-23 18:54:07.641 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:54:08.556 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:54:08.557 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:54:08.557 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:54:08.557 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:08.557 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:54:08.557 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:54:08.558 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:08.558 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:54:08.558 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:54:08.559 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:54:08.679 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-05-23 18:54:08.680 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:54:08.878 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 321
2020-05-23 18:54:08.879 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:54:50.699 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:54:50.700 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:54:50.700 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:50.701 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:54:50.702 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:54:50.702 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 3
2020-05-23 18:54:50.703 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:54:51.518 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:54:51.520 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:54:51.524 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:51.525 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:54:51.525 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:54:51.529 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:54:51.530 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:54:51.531 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:54:51.533 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:54:51.535 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:54:51.632 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 113
2020-05-23 18:54:51.632 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:54:51.854 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 325
2020-05-23 18:54:51.854 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 18:55:39.070 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 18:55:39.088 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:55:39.089 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:55:39.090 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 18:55:39.092 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:55:39.095 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 25
2020-05-23 18:55:39.098 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 18:55:40.064 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 18:55:40.065 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 18:55:40.065 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:55:40.066 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 18:55:40.066 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 18:55:40.078 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 18:55:40.078 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 18:55:40.079 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 18:55:40.079 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 18:55:40.080 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 18:55:40.176 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 112
2020-05-23 18:55:40.177 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 18:55:40.610 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 532
2020-05-23 18:55:40.612 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:09:03.919 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 19:09:03.920 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:09:03.921 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:09:03.922 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 19:09:03.922 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:09:03.923 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 19:09:03.925 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 19:09:04.686 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 19:09:04.687 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:09:04.687 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:09:04.688 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 19:09:04.688 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:09:04.692 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:09:04.693 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:09:04.693 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:09:04.693 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:09:04.693 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:09:04.844 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 158
2020-05-23 19:09:04.846 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 19:09:05.055 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 363
2020-05-23 19:09:05.056 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:28:54.683 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 19:28:54.685 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:28:54.685 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:28:54.686 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 19:28:54.687 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:28:54.688 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 19:28:54.690 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 19:28:56.008 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 19:28:56.009 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:28:56.009 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:28:56.010 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 19:28:56.011 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:28:56.015 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:28:56.016 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:28:56.016 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:28:56.017 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:28:56.018 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:28:56.121 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 113
2020-05-23 19:28:56.122 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 19:28:57.592 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1577
2020-05-23 19:28:57.592 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:29:24.680 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 19:29:24.681 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:29:24.681 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:29:24.681 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 19:29:24.696 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:29:24.697 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 17
2020-05-23 19:29:24.697 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 19:29:25.357 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:29:25.357 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:29:25.358 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:29:25.362 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:29:25.362 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:29:25.664 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 19:29:25.665 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:29:25.665 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:29:25.666 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 19:29:25.666 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:29:25.901 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 237
2020-05-23 19:29:25.902 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 19:29:26.311 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 954
2020-05-23 19:29:26.311 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709837061111808","blogRead":0,"blogTitle":"博客2","createdTime":"2020-05-19 11:40:59","typeName":"JavaBoot","updateTime":"2020-05-19 11:40:59"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709865968254976","blogRead":0,"blogTitle":"博客3","createdTime":"2020-05-19 11:41:06","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262709896800583680","blogRead":0,"blogTitle":"博客4","createdTime":"2020-05-19 11:41:14","typeName":"JavaBoot","updateTime":"2020-05-19 11:41:14"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262710012693397504","blogRead":0,"blogTitle":"博客5","createdTime":"2020-05-19 11:41:41","typeName":"lINUX","updateTime":"2020-05-19 11:41:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1262711622848954368","blogRead":0,"blogTitle":"博客6","createdTime":"2020-05-19 11:48:05","typeName":"lINUX","updateTime":"2020-05-19 11:48:05"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:35:32.683 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:35:32.694 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:35:32.694 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:35:32.695 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:35:32.696 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=<p>关于这个话题，现在这里阐述立场：就公司工作而言，不建议重复造轮子。就个人技术而言，强烈建议造轮子！</p>
<p>程序员圈子里流行这么一句话：&ldquo;不要重复造轮子&rdquo;。它的原文是：&ldquo;Stop Trying to Reinvent the Wheel&rdquo;，意思是&ldquo;不要重复发明轮子&rdquo;。</p>
<p>首先我们要搞清楚两个概念 &mdash;&mdash; 造轮子和发明轮子。轮子是在距今6800年前被发明出来，在此之前我们的祖先可能已经就在尝试对轮子的创造。从三角形、四边形、五边形等等，一直到最后的圆形轮子，每种轮子都不一样，这叫做发明轮子。</p>
<p>而当轮子的形状确定后，再发明其它形状的轮子就没有意义了，改进轮子才是重点，于是就有了石轮、木轮、空心木轮、气轮的转变。而现在，气轮也有多种款式，适用于不同的场景，这叫做造轮子。</p>
<p>可以看出，发明轮子已经变得毫无意义，但是造轮子依然是人们所关注的焦点。</p>
<p>jdbc操作数据库过于繁琐，所以有了hibernate。hibernate过于笨重，因此有了轻量级的mybatis。mybatis 手写sql比较麻烦，因此衍生出了通用Mapper、mybatisplus等框架，struts2浪费资源，所以有了单例的SpringMVC。。。这就是重复造轮子的过程，了解现有轮子的原理和利弊，加以改进，这并不是一个无意义的过程。</p>
<p>造轮子是一种学习方式，造轮子前需要对现有的轮子理解透彻，我相信mybatisplus的作者一定熟读了mybatis的源码，这样才能把自己的轮子造的好，这是自我能力提高的表现，同时可以增加自己的知名度。有的人工作了五六年依然只会crud，有的人已经靠造轮子成了大V。有的人依然沉溺于旧技术而排斥新技术，有的人已经靠造轮子写了书。有的人在小公司使用SSM写完了一生的项目，有的人靠造轮子已经被大公司挖走。。</p>
<p>造轮子是学习技术的极好途径，当你要造一个轮子时，必定要去阅读类似的源码。初步可能寸步难行，而当你攻破了一个、两个、三个关卡之后不知不觉的就理解了他的架构方式，你会发现高手之所以是高手，代码可读性真的高。有些的代码读起来很享受，而有些人的代码读起来让人想死。而当你理解了框架源码后，自己的技术也就有了质的飞跃。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=10, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:35:32.932 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 251
2020-05-23 19:35:32.933 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:35:33.129 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:35:33.129 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:35:33.130 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:35:33.130 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:35:33.131 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(blogId=1262709837061111808, blogTitle=博客2, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JavaBoot, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-19 11:40:59, updateTime=2020-05-19 11:40:59), BlogVo(blogId=1262709865968254976, blogTitle=博客3, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JavaBoot, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-19 11:41:06, updateTime=2020-05-19 11:41:06), BlogVo(blogId=1262709896800583680, blogTitle=博客4, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=JavaBoot, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-19 11:41:14, updateTime=2020-05-19 11:41:14), BlogVo(blogId=1262710012693397504, blogTitle=博客5, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-19 11:41:41, updateTime=2020-05-19 11:41:41), BlogVo(blogId=1262711622848954368, blogTitle=博客6, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-19 11:48:05, updateTime=2020-05-19 11:48:05)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:35:33.438 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 309
2020-05-23 19:35:33.438 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:37:45.293 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:37:45.296 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:37:45.296 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:37:45.297 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:37:45.297 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=<p>前言<br />在前面的文章中，已经介绍了三种SqlSource的代码，下面开始介绍执行select语句对查询结果集封装的过程。</p>
<p>ResultSetHandler<br />前面的文章中得知，mybatis会将结果集按照映射配置文件中定义的映射规则，如resultMap节点，映射成相应的结果对象。</p>
<p>在StatementHandler接口执行完指定的select语句后，会将查询结果集交给ResultSetHandler完成映射处理。</p>
<p>ResultSetHandler接口代码如下：</p>
<p>/**<br />* 处理select查询的结果集<br />* @author Clinton Begin<br />*/<br />public interface ResultSetHandler {<br /><br />/**<br />* 处理结果集，生成结果集集合<br />* @param stmt<br />* @param &lt;E&gt;<br />* @return<br />* @throws SQLException<br />*/<br />&lt;E&gt; List&lt;E&gt; handleResultSets(Statement stmt) throws SQLException;<br /><br />/**<br />* 处理结果集，返回相应的游标<br />* @param stmt<br />* @param &lt;E&gt;<br />* @return<br />* @throws SQLException<br />*/<br />&lt;E&gt; Cursor&lt;E&gt; handleCursorResultSets(Statement stmt) throws SQLException;<br /><br />/**<br />* 处理存储过程<br />* @param cs<br />* @throws SQLException<br />*/<br />void handleOutputParameters(CallableStatement cs) throws SQLException;<br /><br />}<br />ResultSetHandler只有DefaultResultSetHandler一个实现，该类是处理结果集映射的核心类。核心字段如下所示：</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=10, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:37:45.452 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 159
2020-05-23 19:37:45.452 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:37:45.645 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:37:45.646 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:37:45.646 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:37:45.647 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:37:45.647 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:37:46.200 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 555
2020-05-23 19:37:46.201 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:47:55.567 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 19:47:55.580 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:47:55.580 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:47:55.618 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 19:47:55.619 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:47:55.620 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 54
2020-05-23 19:47:55.621 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 19:47:56.026 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:47:56.030 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:47:56.031 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:47:56.032 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:47:56.033 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:47:56.322 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 19:47:56.323 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:47:56.324 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:47:56.324 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 19:47:56.324 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:47:56.349 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 323
2020-05-23 19:47:56.350 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:47:56.432 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 110
2020-05-23 19:47:56.432 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 19:48:44.473 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 19:48:44.474 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:48:44.477 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:48:44.478 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 19:48:44.478 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:48:44.479 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 19:48:44.480 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 19:48:45.118 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 19:48:45.121 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 19:48:45.122 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:48:45.123 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 19:48:45.123 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 19:48:45.183 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:48:45.184 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:48:45.184 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:48:45.185 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:48:45.185 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:48:45.238 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 120
2020-05-23 19:48:45.238 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 19:48:45.480 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 297
2020-05-23 19:48:45.482 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:49:06.293 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:49:06.294 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:49:06.295 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:49:06.295 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:49:06.295 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=<p>计算机是二进制计算的，1 bytes = 8 bit ,一个字节最多可以代表的数据长度是2的8次方 11111111 在计算机中也就是-128到127。</p>
<p>而varchar类型存储变长字段的字符类型，当存储的字符串长度小于255字节时，其需要1字节的空间，当大于255字节时，需要2字节的空间。</p>
<p>使用2 ^ n长度是更好的磁盘或内存块对齐。对齐块更快。今天&ldquo;块&rdquo;的大小更大，内存和磁盘足够快，可以忽略对齐，对于非常大的块来说是非常重要的。</p>
<p>所以使用（2^n）-1 可以更好的利用磁盘空间和内存，使数据库可以在最大限度内存储更多的数据</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。<br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/103929348</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:49:06.442 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 149
2020-05-23 19:49:06.443 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:49:06.620 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:49:06.621 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:49:06.621 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:49:06.621 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:49:06.621 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:49:06.934 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 314
2020-05-23 19:49:06.934 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:51:11.976 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:51:11.978 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:51:11.979 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:51:11.979 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:51:11.980 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=<p>SqlSourceBuilder<br />前面我们对SqlSource和SqlNode进行了介绍，在经过SqlNode.apply方法的解析之后，Sql语句会被传递到SqlSourceBuilder中进行进一步的解析。SqlSourceBuilder主要完成了两方面的操作，一方面是解析Sql中的#{}占位符定义的属性，如jdbcType、javaType（使用较少），一方面是把#{}占位符替换成?占位符</p>
<p>SqlSourceBuilder代码如下</p>
<p><br />/**<br />* 用于进一步解析SqlSource中的${}<br />* @author Clinton Begin<br />*/<br />public class SqlSourceBuilder extends BaseBuilder {<br /><br />private static final String PARAMETER_PROPERTIES = "javaType,jdbcType,mode,numericScale,resultMap,typeHandler,jdbcTypeName";<br /><br />public SqlSourceBuilder(Configuration configuration) {<br />super(configuration);<br />}<br /><br />/**<br />* 解析#{}<br />* @param originalSql 被SqlNode.apply解析后的sql<br />* @param parameterType 参数类型<br />* @param additionalParameters DynamicContext.bindings集合<br />* @return<br />*/<br />public SqlSource parse(String originalSql, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />ParameterMappingTokenHandler handler = new ParameterMappingTokenHandler(configuration, parameterType, additionalParameters);<br />// 解析#{}<br />GenericTokenParser parser = new GenericTokenParser("#{", "}", handler);<br />String sql = parser.parse(originalSql);<br />// 最终被解析成含有？的静态sql。创建StaticSqlSource，包含这个sql和参数<br />return new StaticSqlSource(configuration, sql, handler.getParameterMappings());<br />}<br /><br />/**<br />* 内部类，是解析#{}的核心<br />*/<br />private static class ParameterMappingTokenHandler extends BaseBuilder implements TokenHandler {<br /><br />/**<br />* 记录解析后得到的parameterMapping集合<br />*/<br />private List&lt;ParameterMapping&gt; parameterMappings = new ArrayList&lt;&gt;();<br />/**<br />* 参数类型<br />*/<br />private Class&lt;?&gt; parameterType;<br />/**<br />* DynamicContext.bindings对应的类<br />*/<br />private MetaObject metaParameters;<br /><br />public ParameterMappingTokenHandler(Configuration configuration, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />super(configuration);<br />this.parameterType = parameterType;<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />/**<br />* 占位符处理器核心方法。<br />* @param content<br />* @return<br />*/<br />@Override<br />public String handleToken(String content) {<br />parameterMappings.add(buildParameterMapping(content));<br />return "?";<br />}<br /><br />private ParameterMapping buildParameterMapping(String content) {<br />Map&lt;String, String&gt; propertiesMap = parseParameterMapping(content);<br />String property = propertiesMap.get("property");<br />Class&lt;?&gt; propertyType;<br />if (metaParameters.hasGetter(property)) { // issue #448 get type from additional params<br />propertyType = metaParameters.getGetterType(property);<br />} else if (typeHandlerRegistry.hasTypeHandler(parameterType)) {<br />propertyType = parameterType;<br />} else if (JdbcType.CURSOR.name().equals(propertiesMap.get("jdbcType"))) {<br />propertyType = java.sql.ResultSet.class;<br />} else if (property == null || Map.class.isAssignableFrom(parameterType)) {<br />propertyType = Object.class;<br />} else {<br />MetaClass metaClass = MetaClass.forClass(parameterType, configuration.getReflectorFactory());<br />if (metaClass.hasGetter(property)) {<br />propertyType = metaClass.getGetterType(property);<br />} else {<br />propertyType = Object.class;<br />}<br />}<br />ParameterMapping.Builder builder = new ParameterMapping.Builder(configuration, property, propertyType);<br />Class&lt;?&gt; javaType = propertyType;<br />String typeHandlerAlias = null;<br />for (Map.Entry&lt;String, String&gt; entry : propertiesMap.entrySet()) {<br />String name = entry.getKey();<br />String value = entry.getValue();<br />// 处理jdbcType、javaType等一大堆东西<br />if ("javaType".equals(name)) {<br />javaType = resolveClass(value);<br />builder.javaType(javaType);<br />} else if ("jdbcType".equals(name)) {<br />builder.jdbcType(resolveJdbcType(value));<br />} else if ("mode".equals(name)) {<br />builder.mode(resolveParameterMode(value));<br />} else if ("numericScale".equals(name)) {<br />builder.numericScale(Integer.valueOf(value));<br />} else if ("resultMap".equals(name)) {<br />builder.resultMapId(value);<br />} else if ("typeHandler".equals(name)) {<br />typeHandlerAlias = value;<br />} else if ("jdbcTypeName".equals(name)) {<br />builder.jdbcTypeName(value);<br />} else if ("property".equals(name)) {<br />// Do Nothing<br />} else if ("expression".equals(name)) {<br />throw new BuilderException("Expression based parameters are not supported yet");<br />} else {<br />throw new BuilderException("An invalid property '" + name + "' was found in mapping #{" + content + "}. Valid properties are " + PARAMETER_PROPERTIES);<br />}<br />}<br />if (typeHandlerAlias != null) {<br />builder.typeHandler(resolveTypeHandler(javaType, typeHandlerAlias));<br />}<br />return builder.build();<br />}<br /><br />private Map&lt;String, String&gt; parseParameterMapping(String content) {<br />try {<br />return new ParameterExpression(content);<br />} catch (BuilderException ex) {<br />throw ex;<br />} catch (Exception ex) {<br />throw new BuilderException("Parsing error was found in mapping #{" + content + "}. Check syntax #{property|(expression), var1=value1, var2=value2, ...} ", ex);<br />}<br />}<br />}<br /><br />}<br />其中，ParameterMappingTokenHandler是SqlSourceBuilder的一个内部类，该类是解析#{}的核心。</p>
<p>ParameterMapping中记录了#{}占位符中的参数属性，字段如下</p>
<p>public class ParameterMapping {<br /><br />private Configuration configuration;<br /><br />/**<br />* 参数名<br />*/<br />private String property;<br />/**<br />* 参数模式。输入参数还是输出参数<br />*/<br />private ParameterMode mode;<br />private Class&lt;?&gt; javaType = Object.class;<br />private JdbcType jdbcType;<br />private Integer numericScale;<br />private TypeHandler&lt;?&gt; typeHandler;<br />private String resultMapId;<br />private String jdbcTypeName;<br />private String expression;<br />}<br />之后，SqlSourceBuilder会将Sql语句以及parameterMap平时集合封装成StaticSqlSource对象。StaticSqlSource.getBoundSql方法直接返回BoundSql，BoundSql代码如下。</p>
<p><br />/**<br />* Sql实体。包含sql和 参数集合<br />*<br />* @author Clinton Begin<br />*/<br />public class BoundSql {<br /><br />private final String sql;<br />/**<br />* SQL中参数属性集合#{item}这些<br />*/<br />private final List&lt;ParameterMapping&gt; parameterMappings;<br />/**<br />* 执行SQL时传入的实际参数<br />*/<br />private final Object parameterObject;<br />/**<br />* DynamicContext.bindings集合<br />*/<br />private final Map&lt;String, Object&gt; additionalParameters;<br />/**<br />* additionalParameters对应的MetaObject<br />*/<br />private final MetaObject metaParameters;<br /><br />public BoundSql(Configuration configuration, String sql, List&lt;ParameterMapping&gt; parameterMappings, Object parameterObject) {<br />this.sql = sql;<br />this.parameterMappings = parameterMappings;<br />this.parameterObject = parameterObject;<br />this.additionalParameters = new HashMap&lt;&gt;();<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public String getSql() {<br />return sql;<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />public Object getParameterObject() {<br />return parameterObject;<br />}<br /><br />public boolean hasAdditionalParameter(String name) {<br />String paramName = new PropertyTokenizer(name).getName();<br />return additionalParameters.containsKey(paramName);<br />}<br /><br />public void setAdditionalParameter(String name, Object value) {<br />metaParameters.setValue(name, value);<br />}<br /><br />public Object getAdditionalParameter(String name) {<br />return metaParameters.getValue(name);<br />}<br />}<br />DynamicSqlSource<br />DynamicSqlSource负责解析动态SQL语句，也是最常用的SqlSource实现。DynamicSqlSource使用rootSqlNode字段，记录了带解析的SqlNode根节点DynamicSqlSource的代码如下。</p>
<p><br />/**<br />* 负责解析动态sql语句<br />* 包含#{}占位符<br />*<br />* @author Clinton Begin<br />*/<br />public class DynamicSqlSource implements SqlSource {<br /><br />private final Configuration configuration;<br />private final SqlNode rootSqlNode;<br /><br />public DynamicSqlSource(Configuration configuration, SqlNode rootSqlNode) {<br />this.configuration = configuration;<br />this.rootSqlNode = rootSqlNode;<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />// 创建<br />DynamicContext context = new DynamicContext(configuration, parameterObject);<br />// 解析sql节点<br />rootSqlNode.apply(context);<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; parameterType = parameterObject == null ? Object.class : parameterObject.getClass();<br />// 解析sql，将#{}替换成?<br />SqlSource sqlSource = sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());<br />BoundSql boundSql = sqlSource.getBoundSql(parameterObject);<br />context.getBindings().forEach(boundSql::setAdditionalParameter);<br />return boundSql;<br />}<br /><br />}<br />RawSqlSource<br />RawSqlSource的逻辑和DynamicSqlSource类似，但是处理SQL的机制不同。RawSqlSource用于处理非动态SQL。当一个sql中只包含#{}占位符。不包含${}和动态sql节点，就不是动态SQL语句，会创建相应的StaticTextSqlNode在XmlScriptBuilder.parseScriptNode方法会判断整个SQL节点是否是动态的，如果是动态，就用DynamicSqlSource进行处理，否则用RawSqlSource进行处理。</p>
<p>RawSqlSource在构造方法中会调用getSql方法，该方法会调用SqlNode.apply方法完成sql语句的处不处理。SqlSourceBuilder完成占位符的替换，并返回StaticSqlSource对象。</p>
<p><br />/**<br />* 处理非动态sql语句<br />* 如果节点只包含&ldquo;＃｛｝&rdquo;占位符，而不包含动态 SQL 点或未解析的 &ldquo;$｛｝&rdquo;占位<br />* 符的话， 则不是动态 SQL 语句<br />*<br />* @author Eduardo Macarron<br />* @since 3.2.0<br />*/<br />public class RawSqlSource implements SqlSource {<br /><br />private final SqlSource sqlSource;<br /><br />public RawSqlSource(Configuration configuration, SqlNode rootSqlNode, Class&lt;?&gt; parameterType) {<br />this(configuration, getSql(configuration, rootSqlNode), parameterType);<br />}<br /><br />public RawSqlSource(Configuration configuration, String sql, Class&lt;?&gt; parameterType) {<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; clazz = parameterType == null ? Object.class : parameterType;<br />sqlSource = sqlSourceParser.parse(sql, clazz, new HashMap&lt;&gt;());<br />}<br /><br />private static String getSql(Configuration configuration, SqlNode rootSqlNode) {<br />DynamicContext context = new DynamicContext(configuration, null);<br />rootSqlNode.apply(context);<br />return context.getSql();<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />return sqlSource.getBoundSql(parameterObject);<br />}<br />}<br />像foreach、if、where等标签，以及${}占位符，在mybatis初始化时并不知道其具体含义，因此这类sql就视为&ldquo;动态sql&rdquo;，交由DynamicSqlSource在程序运行时进行解析。而如果只含有#{}占位符，则会在mybatis初始化时就完成sql解析。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:51:12.149 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 173
2020-05-23 19:51:12.151 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:53:09.588 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:53:09.602 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:53:09.603 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:53:09.604 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:53:09.605 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=<p>SqlSourceBuilder<br />前面我们对SqlSource和SqlNode进行了介绍，在经过SqlNode.apply方法的解析之后，Sql语句会被传递到SqlSourceBuilder中进行进一步的解析。SqlSourceBuilder主要完成了两方面的操作，一方面是解析Sql中的#{}占位符定义的属性，如jdbcType、javaType（使用较少），一方面是把#{}占位符替换成?占位符</p>
<p>SqlSourceBuilder代码如下</p>
<p><br />/**<br />* 用于进一步解析SqlSource中的${}<br />* @author Clinton Begin<br />*/<br />public class SqlSourceBuilder extends BaseBuilder {<br /><br />private static final String PARAMETER_PROPERTIES = "javaType,jdbcType,mode,numericScale,resultMap,typeHandler,jdbcTypeName";<br /><br />public SqlSourceBuilder(Configuration configuration) {<br />super(configuration);<br />}<br /><br />/**<br />* 解析#{}<br />* @param originalSql 被SqlNode.apply解析后的sql<br />* @param parameterType 参数类型<br />* @param additionalParameters DynamicContext.bindings集合<br />* @return<br />*/<br />public SqlSource parse(String originalSql, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />ParameterMappingTokenHandler handler = new ParameterMappingTokenHandler(configuration, parameterType, additionalParameters);<br />// 解析#{}<br />GenericTokenParser parser = new GenericTokenParser("#{", "}", handler);<br />String sql = parser.parse(originalSql);<br />// 最终被解析成含有？的静态sql。创建StaticSqlSource，包含这个sql和参数<br />return new StaticSqlSource(configuration, sql, handler.getParameterMappings());<br />}<br /><br />/**<br />* 内部类，是解析#{}的核心<br />*/<br />private static class ParameterMappingTokenHandler extends BaseBuilder implements TokenHandler {<br /><br />/**<br />* 记录解析后得到的parameterMapping集合<br />*/<br />private List&lt;ParameterMapping&gt; parameterMappings = new ArrayList&lt;&gt;();<br />/**<br />* 参数类型<br />*/<br />private Class&lt;?&gt; parameterType;<br />/**<br />* DynamicContext.bindings对应的类<br />*/<br />private MetaObject metaParameters;<br /><br />public ParameterMappingTokenHandler(Configuration configuration, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />super(configuration);<br />this.parameterType = parameterType;<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />/**<br />* 占位符处理器核心方法。<br />* @param content<br />* @return<br />*/<br />@Override<br />public String handleToken(String content) {<br />parameterMappings.add(buildParameterMapping(content));<br />return "?";<br />}<br /><br />private ParameterMapping buildParameterMapping(String content) {<br />Map&lt;String, String&gt; propertiesMap = parseParameterMapping(content);<br />String property = propertiesMap.get("property");<br />Class&lt;?&gt; propertyType;<br />if (metaParameters.hasGetter(property)) { // issue #448 get type from additional params<br />propertyType = metaParameters.getGetterType(property);<br />} else if (typeHandlerRegistry.hasTypeHandler(parameterType)) {<br />propertyType = parameterType;<br />} else if (JdbcType.CURSOR.name().equals(propertiesMap.get("jdbcType"))) {<br />propertyType = java.sql.ResultSet.class;<br />} else if (property == null || Map.class.isAssignableFrom(parameterType)) {<br />propertyType = Object.class;<br />} else {<br />MetaClass metaClass = MetaClass.forClass(parameterType, configuration.getReflectorFactory());<br />if (metaClass.hasGetter(property)) {<br />propertyType = metaClass.getGetterType(property);<br />} else {<br />propertyType = Object.class;<br />}<br />}<br />ParameterMapping.Builder builder = new ParameterMapping.Builder(configuration, property, propertyType);<br />Class&lt;?&gt; javaType = propertyType;<br />String typeHandlerAlias = null;<br />for (Map.Entry&lt;String, String&gt; entry : propertiesMap.entrySet()) {<br />String name = entry.getKey();<br />String value = entry.getValue();<br />// 处理jdbcType、javaType等一大堆东西<br />if ("javaType".equals(name)) {<br />javaType = resolveClass(value);<br />builder.javaType(javaType);<br />} else if ("jdbcType".equals(name)) {<br />builder.jdbcType(resolveJdbcType(value));<br />} else if ("mode".equals(name)) {<br />builder.mode(resolveParameterMode(value));<br />} else if ("numericScale".equals(name)) {<br />builder.numericScale(Integer.valueOf(value));<br />} else if ("resultMap".equals(name)) {<br />builder.resultMapId(value);<br />} else if ("typeHandler".equals(name)) {<br />typeHandlerAlias = value;<br />} else if ("jdbcTypeName".equals(name)) {<br />builder.jdbcTypeName(value);<br />} else if ("property".equals(name)) {<br />// Do Nothing<br />} else if ("expression".equals(name)) {<br />throw new BuilderException("Expression based parameters are not supported yet");<br />} else {<br />throw new BuilderException("An invalid property '" + name + "' was found in mapping #{" + content + "}. Valid properties are " + PARAMETER_PROPERTIES);<br />}<br />}<br />if (typeHandlerAlias != null) {<br />builder.typeHandler(resolveTypeHandler(javaType, typeHandlerAlias));<br />}<br />return builder.build();<br />}<br /><br />private Map&lt;String, String&gt; parseParameterMapping(String content) {<br />try {<br />return new ParameterExpression(content);<br />} catch (BuilderException ex) {<br />throw ex;<br />} catch (Exception ex) {<br />throw new BuilderException("Parsing error was found in mapping #{" + content + "}. Check syntax #{property|(expression), var1=value1, var2=value2, ...} ", ex);<br />}<br />}<br />}<br /><br />}<br />其中，ParameterMappingTokenHandler是SqlSourceBuilder的一个内部类，该类是解析#{}的核心。</p>
<p>ParameterMapping中记录了#{}占位符中的参数属性，字段如下</p>
<p>public class ParameterMapping {<br /><br />private Configuration configuration;<br /><br />/**<br />* 参数名<br />*/<br />private String property;<br />/**<br />* 参数模式。输入参数还是输出参数<br />*/<br />private ParameterMode mode;<br />private Class&lt;?&gt; javaType = Object.class;<br />private JdbcType jdbcType;<br />private Integer numericScale;<br />private TypeHandler&lt;?&gt; typeHandler;<br />private String resultMapId;<br />private String jdbcTypeName;<br />private String expression;<br />}<br />之后，SqlSourceBuilder会将Sql语句以及parameterMap平时集合封装成StaticSqlSource对象。StaticSqlSource.getBoundSql方法直接返回BoundSql，BoundSql代码如下。</p>
<p><br />/**<br />* Sql实体。包含sql和 参数集合<br />*<br />* @author Clinton Begin<br />*/<br />public class BoundSql {<br /><br />private final String sql;<br />/**<br />* SQL中参数属性集合#{item}这些<br />*/<br />private final List&lt;ParameterMapping&gt; parameterMappings;<br />/**<br />* 执行SQL时传入的实际参数<br />*/<br />private final Object parameterObject;<br />/**<br />* DynamicContext.bindings集合<br />*/<br />private final Map&lt;String, Object&gt; additionalParameters;<br />/**<br />* additionalParameters对应的MetaObject<br />*/<br />private final MetaObject metaParameters;<br /><br />public BoundSql(Configuration configuration, String sql, List&lt;ParameterMapping&gt; parameterMappings, Object parameterObject) {<br />this.sql = sql;<br />this.parameterMappings = parameterMappings;<br />this.parameterObject = parameterObject;<br />this.additionalParameters = new HashMap&lt;&gt;();<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public String getSql() {<br />return sql;<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />public Object getParameterObject() {<br />return parameterObject;<br />}<br /><br />public boolean hasAdditionalParameter(String name) {<br />String paramName = new PropertyTokenizer(name).getName();<br />return additionalParameters.containsKey(paramName);<br />}<br /><br />public void setAdditionalParameter(String name, Object value) {<br />metaParameters.setValue(name, value);<br />}<br /><br />public Object getAdditionalParameter(String name) {<br />return metaParameters.getValue(name);<br />}<br />}<br />DynamicSqlSource<br />DynamicSqlSource负责解析动态SQL语句，也是最常用的SqlSource实现。DynamicSqlSource使用rootSqlNode字段，记录了带解析的SqlNode根节点DynamicSqlSource的代码如下。</p>
<p><br />/**<br />* 负责解析动态sql语句<br />* 包含#{}占位符<br />*<br />* @author Clinton Begin<br />*/<br />public class DynamicSqlSource implements SqlSource {<br /><br />private final Configuration configuration;<br />private final SqlNode rootSqlNode;<br /><br />public DynamicSqlSource(Configuration configuration, SqlNode rootSqlNode) {<br />this.configuration = configuration;<br />this.rootSqlNode = rootSqlNode;<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />// 创建<br />DynamicContext context = new DynamicContext(configuration, parameterObject);<br />// 解析sql节点<br />rootSqlNode.apply(context);<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; parameterType = parameterObject == null ? Object.class : parameterObject.getClass();<br />// 解析sql，将#{}替换成?<br />SqlSource sqlSource = sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());<br />BoundSql boundSql = sqlSource.getBoundSql(parameterObject);<br />context.getBindings().forEach(boundSql::setAdditionalParameter);<br />return boundSql;<br />}<br /><br />}<br />RawSqlSource<br />RawSqlSource的逻辑和DynamicSqlSource类似，但是处理SQL的机制不同。RawSqlSource用于处理非动态SQL。当一个sql中只包含#{}占位符。不包含${}和动态sql节点，就不是动态SQL语句，会创建相应的StaticTextSqlNode在XmlScriptBuilder.parseScriptNode方法会判断整个SQL节点是否是动态的，如果是动态，就用DynamicSqlSource进行处理，否则用RawSqlSource进行处理。</p>
<p>RawSqlSource在构造方法中会调用getSql方法，该方法会调用SqlNode.apply方法完成sql语句的处不处理。SqlSourceBuilder完成占位符的替换，并返回StaticSqlSource对象。</p>
<p><br />/**<br />* 处理非动态sql语句<br />* 如果节点只包含&ldquo;＃｛｝&rdquo;占位符，而不包含动态 SQL 点或未解析的 &ldquo;$｛｝&rdquo;占位<br />* 符的话， 则不是动态 SQL 语句<br />*<br />* @author Eduardo Macarron<br />* @since 3.2.0<br />*/<br />public class RawSqlSource implements SqlSource {<br /><br />private final SqlSource sqlSource;<br /><br />public RawSqlSource(Configuration configuration, SqlNode rootSqlNode, Class&lt;?&gt; parameterType) {<br />this(configuration, getSql(configuration, rootSqlNode), parameterType);<br />}<br /><br />public RawSqlSource(Configuration configuration, String sql, Class&lt;?&gt; parameterType) {<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; clazz = parameterType == null ? Object.class : parameterType;<br />sqlSource = sqlSourceParser.parse(sql, clazz, new HashMap&lt;&gt;());<br />}<br /><br />private static String getSql(Configuration configuration, SqlNode rootSqlNode) {<br />DynamicContext context = new DynamicContext(configuration, null);<br />rootSqlNode.apply(context);<br />return context.getSql();<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />return sqlSource.getBoundSql(parameterObject);<br />}<br />}<br />像foreach、if、where等标签，以及${}占位符，在mybatis初始化时并不知道其具体含义，因此这类sql就视为&ldquo;动态sql&rdquo;，交由DynamicSqlSource在程序运行时进行解析。而如果只含有#{}占位符，则会在mybatis初始化时就完成sql解析。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:53:09.884 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 296
2020-05-23 19:53:09.885 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:53:10.076 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:53:10.077 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:53:10.078 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:53:10.078 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:53:10.079 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:53:10.376 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 300
2020-05-23 19:53:10.379 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:54:24.459 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:54:24.462 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:54:24.463 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:54:24.463 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:54:24.464 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=<p>SqlSourceBuilder<br />前面我们对SqlSource和SqlNode进行了介绍，在经过SqlNode.apply方法的解析之后，Sql语句会被传递到SqlSourceBuilder中进行进一步的解析。SqlSourceBuilder主要完成了两方面的操作，一方面是解析Sql中的#{}占位符定义的属性，如jdbcType、javaType（使用较少），一方面是把#{}占位符替换成?占位符</p>
<p>SqlSourceBuilder代码如下</p>
<p><br />/**<br />* 用于进一步解析SqlSource中的${}<br />* @author Clinton Begin<br />*/<br />public class SqlSourceBuilder extends BaseBuilder {<br /><br />private static final String PARAMETER_PROPERTIES = "javaType,jdbcType,mode,numericScale,resultMap,typeHandler,jdbcTypeName";<br /><br />public SqlSourceBuilder(Configuration configuration) {<br />super(configuration);<br />}<br /><br />/**<br />* 解析#{}<br />* @param originalSql 被SqlNode.apply解析后的sql<br />* @param parameterType 参数类型<br />* @param additionalParameters DynamicContext.bindings集合<br />* @return<br />*/<br />public SqlSource parse(String originalSql, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />ParameterMappingTokenHandler handler = new ParameterMappingTokenHandler(configuration, parameterType, additionalParameters);<br />// 解析#{}<br />GenericTokenParser parser = new GenericTokenParser("#{", "}", handler);<br />String sql = parser.parse(originalSql);<br />// 最终被解析成含有？的静态sql。创建StaticSqlSource，包含这个sql和参数<br />return new StaticSqlSource(configuration, sql, handler.getParameterMappings());<br />}<br /><br />/**<br />* 内部类，是解析#{}的核心<br />*/<br />private static class ParameterMappingTokenHandler extends BaseBuilder implements TokenHandler {<br /><br />/**<br />* 记录解析后得到的parameterMapping集合<br />*/<br />private List&lt;ParameterMapping&gt; parameterMappings = new ArrayList&lt;&gt;();<br />/**<br />* 参数类型<br />*/<br />private Class&lt;?&gt; parameterType;<br />/**<br />* DynamicContext.bindings对应的类<br />*/<br />private MetaObject metaParameters;<br /><br />public ParameterMappingTokenHandler(Configuration configuration, Class&lt;?&gt; parameterType, Map&lt;String, Object&gt; additionalParameters) {<br />super(configuration);<br />this.parameterType = parameterType;<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />/**<br />* 占位符处理器核心方法。<br />* @param content<br />* @return<br />*/<br />@Override<br />public String handleToken(String content) {<br />parameterMappings.add(buildParameterMapping(content));<br />return "?";<br />}<br /><br />private ParameterMapping buildParameterMapping(String content) {<br />Map&lt;String, String&gt; propertiesMap = parseParameterMapping(content);<br />String property = propertiesMap.get("property");<br />Class&lt;?&gt; propertyType;<br />if (metaParameters.hasGetter(property)) { // issue #448 get type from additional params<br />propertyType = metaParameters.getGetterType(property);<br />} else if (typeHandlerRegistry.hasTypeHandler(parameterType)) {<br />propertyType = parameterType;<br />} else if (JdbcType.CURSOR.name().equals(propertiesMap.get("jdbcType"))) {<br />propertyType = java.sql.ResultSet.class;<br />} else if (property == null || Map.class.isAssignableFrom(parameterType)) {<br />propertyType = Object.class;<br />} else {<br />MetaClass metaClass = MetaClass.forClass(parameterType, configuration.getReflectorFactory());<br />if (metaClass.hasGetter(property)) {<br />propertyType = metaClass.getGetterType(property);<br />} else {<br />propertyType = Object.class;<br />}<br />}<br />ParameterMapping.Builder builder = new ParameterMapping.Builder(configuration, property, propertyType);<br />Class&lt;?&gt; javaType = propertyType;<br />String typeHandlerAlias = null;<br />for (Map.Entry&lt;String, String&gt; entry : propertiesMap.entrySet()) {<br />String name = entry.getKey();<br />String value = entry.getValue();<br />// 处理jdbcType、javaType等一大堆东西<br />if ("javaType".equals(name)) {<br />javaType = resolveClass(value);<br />builder.javaType(javaType);<br />} else if ("jdbcType".equals(name)) {<br />builder.jdbcType(resolveJdbcType(value));<br />} else if ("mode".equals(name)) {<br />builder.mode(resolveParameterMode(value));<br />} else if ("numericScale".equals(name)) {<br />builder.numericScale(Integer.valueOf(value));<br />} else if ("resultMap".equals(name)) {<br />builder.resultMapId(value);<br />} else if ("typeHandler".equals(name)) {<br />typeHandlerAlias = value;<br />} else if ("jdbcTypeName".equals(name)) {<br />builder.jdbcTypeName(value);<br />} else if ("property".equals(name)) {<br />// Do Nothing<br />} else if ("expression".equals(name)) {<br />throw new BuilderException("Expression based parameters are not supported yet");<br />} else {<br />throw new BuilderException("An invalid property '" + name + "' was found in mapping #{" + content + "}. Valid properties are " + PARAMETER_PROPERTIES);<br />}<br />}<br />if (typeHandlerAlias != null) {<br />builder.typeHandler(resolveTypeHandler(javaType, typeHandlerAlias));<br />}<br />return builder.build();<br />}<br /><br />private Map&lt;String, String&gt; parseParameterMapping(String content) {<br />try {<br />return new ParameterExpression(content);<br />} catch (BuilderException ex) {<br />throw ex;<br />} catch (Exception ex) {<br />throw new BuilderException("Parsing error was found in mapping #{" + content + "}. Check syntax #{property|(expression), var1=value1, var2=value2, ...} ", ex);<br />}<br />}<br />}<br /><br />}<br />其中，ParameterMappingTokenHandler是SqlSourceBuilder的一个内部类，该类是解析#{}的核心。</p>
<p>ParameterMapping中记录了#{}占位符中的参数属性，字段如下</p>
<p>public class ParameterMapping {<br /><br />private Configuration configuration;<br /><br />/**<br />* 参数名<br />*/<br />private String property;<br />/**<br />* 参数模式。输入参数还是输出参数<br />*/<br />private ParameterMode mode;<br />private Class&lt;?&gt; javaType = Object.class;<br />private JdbcType jdbcType;<br />private Integer numericScale;<br />private TypeHandler&lt;?&gt; typeHandler;<br />private String resultMapId;<br />private String jdbcTypeName;<br />private String expression;<br />}<br />之后，SqlSourceBuilder会将Sql语句以及parameterMap平时集合封装成StaticSqlSource对象。StaticSqlSource.getBoundSql方法直接返回BoundSql，BoundSql代码如下。</p>
<p><br />/**<br />* Sql实体。包含sql和 参数集合<br />*<br />* @author Clinton Begin<br />*/<br />public class BoundSql {<br /><br />private final String sql;<br />/**<br />* SQL中参数属性集合#{item}这些<br />*/<br />private final List&lt;ParameterMapping&gt; parameterMappings;<br />/**<br />* 执行SQL时传入的实际参数<br />*/<br />private final Object parameterObject;<br />/**<br />* DynamicContext.bindings集合<br />*/<br />private final Map&lt;String, Object&gt; additionalParameters;<br />/**<br />* additionalParameters对应的MetaObject<br />*/<br />private final MetaObject metaParameters;<br /><br />public BoundSql(Configuration configuration, String sql, List&lt;ParameterMapping&gt; parameterMappings, Object parameterObject) {<br />this.sql = sql;<br />this.parameterMappings = parameterMappings;<br />this.parameterObject = parameterObject;<br />this.additionalParameters = new HashMap&lt;&gt;();<br />this.metaParameters = configuration.newMetaObject(additionalParameters);<br />}<br /><br />public String getSql() {<br />return sql;<br />}<br /><br />public List&lt;ParameterMapping&gt; getParameterMappings() {<br />return parameterMappings;<br />}<br /><br />public Object getParameterObject() {<br />return parameterObject;<br />}<br /><br />public boolean hasAdditionalParameter(String name) {<br />String paramName = new PropertyTokenizer(name).getName();<br />return additionalParameters.containsKey(paramName);<br />}<br /><br />public void setAdditionalParameter(String name, Object value) {<br />metaParameters.setValue(name, value);<br />}<br /><br />public Object getAdditionalParameter(String name) {<br />return metaParameters.getValue(name);<br />}<br />}<br />DynamicSqlSource<br />DynamicSqlSource负责解析动态SQL语句，也是最常用的SqlSource实现。DynamicSqlSource使用rootSqlNode字段，记录了带解析的SqlNode根节点DynamicSqlSource的代码如下。</p>
<p><br />/**<br />* 负责解析动态sql语句<br />* 包含#{}占位符<br />*<br />* @author Clinton Begin<br />*/<br />public class DynamicSqlSource implements SqlSource {<br /><br />private final Configuration configuration;<br />private final SqlNode rootSqlNode;<br /><br />public DynamicSqlSource(Configuration configuration, SqlNode rootSqlNode) {<br />this.configuration = configuration;<br />this.rootSqlNode = rootSqlNode;<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />// 创建<br />DynamicContext context = new DynamicContext(configuration, parameterObject);<br />// 解析sql节点<br />rootSqlNode.apply(context);<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; parameterType = parameterObject == null ? Object.class : parameterObject.getClass();<br />// 解析sql，将#{}替换成?<br />SqlSource sqlSource = sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());<br />BoundSql boundSql = sqlSource.getBoundSql(parameterObject);<br />context.getBindings().forEach(boundSql::setAdditionalParameter);<br />return boundSql;<br />}<br /><br />}<br />RawSqlSource<br />RawSqlSource的逻辑和DynamicSqlSource类似，但是处理SQL的机制不同。RawSqlSource用于处理非动态SQL。当一个sql中只包含#{}占位符。不包含${}和动态sql节点，就不是动态SQL语句，会创建相应的StaticTextSqlNode在XmlScriptBuilder.parseScriptNode方法会判断整个SQL节点是否是动态的，如果是动态，就用DynamicSqlSource进行处理，否则用RawSqlSource进行处理。</p>
<p>RawSqlSource在构造方法中会调用getSql方法，该方法会调用SqlNode.apply方法完成sql语句的处不处理。SqlSourceBuilder完成占位符的替换，并返回StaticSqlSource对象。</p>
<p><br />/**<br />* 处理非动态sql语句<br />* 如果节点只包含&ldquo;＃｛｝&rdquo;占位符，而不包含动态 SQL 点或未解析的 &ldquo;$｛｝&rdquo;占位<br />* 符的话， 则不是动态 SQL 语句<br />*<br />* @author Eduardo Macarron<br />* @since 3.2.0<br />*/<br />public class RawSqlSource implements SqlSource {<br /><br />private final SqlSource sqlSource;<br /><br />public RawSqlSource(Configuration configuration, SqlNode rootSqlNode, Class&lt;?&gt; parameterType) {<br />this(configuration, getSql(configuration, rootSqlNode), parameterType);<br />}<br /><br />public RawSqlSource(Configuration configuration, String sql, Class&lt;?&gt; parameterType) {<br />SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);<br />Class&lt;?&gt; clazz = parameterType == null ? Object.class : parameterType;<br />sqlSource = sqlSourceParser.parse(sql, clazz, new HashMap&lt;&gt;());<br />}<br /><br />private static String getSql(Configuration configuration, SqlNode rootSqlNode) {<br />DynamicContext context = new DynamicContext(configuration, null);<br />rootSqlNode.apply(context);<br />return context.getSql();<br />}<br /><br />@Override<br />public BoundSql getBoundSql(Object parameterObject) {<br />return sqlSource.getBoundSql(parameterObject);<br />}<br />}<br />像foreach、if、where等标签，以及${}占位符，在mybatis初始化时并不知道其具体含义，因此这类sql就视为&ldquo;动态sql&rdquo;，交由DynamicSqlSource在程序运行时进行解析。而如果只含有#{}占位符，则会在mybatis初始化时就完成sql解析。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:54:24.626 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 167
2020-05-23 19:54:24.627 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:54:24.810 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:54:24.810 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:54:24.811 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:54:24.811 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:54:24.812 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:54:25.110 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 300
2020-05-23 19:54:25.110 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":6,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:55:16.755 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:55:16.757 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:55:16.758 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:55:16.758 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:55:16.759 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=<p>前言<br />前段时间关于统计数量的sql问题和朋友进行了讨论，网上关于这三种查询方式说法不一，主要有以下两种说法。</p>
<p>count(*) = count(主键) &gt; count(1)<br />count(主键) &gt; count(*) &gt; count(1)<br />今天对这三种方式进行探究。</p>
<p>数据库为mysql 5.7.12，引擎为InnoDB。</p>
<p>建表</p>
<p>CREATE TABLE `user` (<br />`id` int(32) NOT NULL AUTO_INCREMENT,<br />`name` varchar(500) DEFAULT NULL COMMENT '姓名',<br />`deleted` int(2) NOT NULL DEFAULT '1' COMMENT '逻辑删除',<br />`created_date` datetime DEFAULT NULL COMMENT '创建时间',<br />`created_by` varchar(255) DEFAULT NULL,<br />`update_date` datetime DEFAULT NULL,<br />`update_by` varchar(255) DEFAULT NULL,<br />`version` int(11) NOT NULL DEFAULT '1' COMMENT '乐观锁',<br />PRIMARY KEY (`id`) USING BTREE<br />) ENGINE=InnoDB AUTO_INCREMENT=1502726 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='用户表';<br />循环插入150万条数据。</p>
<p>DROP PROCEDURE<br />IF<br />EXISTS proc_initData;<br />DELIMITER $<br />CREATE PROCEDURE proc_initData () BEGIN<br />DECLARE<br />i INT DEFAULT 1;<br />WHILE<br />i &lt;= 5000000 DO<br />INSERT INTO user ( name, created_date, update_date )<br />VALUES<br />( '哈哈哈啊哈哈哈', NOW(), NOW() );<br /><br />SET i = i + 1;<br /><br />END WHILE;<br /><br />END $ CALL proc_initData ();<br />这里需要使用到mysql的explain关键字，对count(1)，count(*)，count(id)，count(name)分别查看性能</p>
<p>explain select count(1) from user<br />explain select count(*) from user<br />explain select count(id) from user<br />explain select count(name) from user</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=7, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:55:16.916 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 161
2020-05-23 19:55:16.916 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:55:17.088 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:55:17.089 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:55:17.090 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:55:17.090 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:55:17.091 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=6, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:55:17.383 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 295
2020-05-23 19:55:17.384 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":7,"totalPage":1},"msg":"操作成功！"}
2020-05-23 19:56:30.830 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 19:56:30.831 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:56:30.832 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:56:30.832 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 19:56:30.833 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=<p>前言<br />接上一篇博客，解析核心配置文件的流程还剩两块。Mybatis初始化1.2 &mdash;&mdash; 解析别名、插件、对象工厂、反射工具箱、环境</p>
<p>本想着只是两个模块，随便写写就完事，没想到内容还不少，加上最近几天事情比较多，就没怎么更新，几天抽空编写剩下两块代码。</p>
<p>解析sql片段<br />sql节点配置在Mapper.xml文件中，用于配置一些常用的sql片段。</p>
<p>/**<br />* 解析sql节点。<br />* sql节点用于定义一些常用的sql片段<br />* @param list<br />*/<br />private void sqlElement(List&lt;XNode&gt; list) {<br />if (configuration.getDatabaseId() != null) {<br />sqlElement(list, configuration.getDatabaseId());<br />}<br />sqlElement(list, null);<br />}<br /><br />/**<br />* 解析sql节点<br />* @param list sql节点集合<br />* @param requiredDatabaseId 当前配置的databaseId<br />*/<br />private void sqlElement(List&lt;XNode&gt; list, String requiredDatabaseId) {<br />for (XNode context : list) {<br />// 获取databaseId和id属性<br />String databaseId = context.getStringAttribute("databaseId");<br />// 这里的id指定的是命名空间<br />String id = context.getStringAttribute("id");<br />// 启用当前的命名空间<br />id = builderAssistant.applyCurrentNamespace(id, false);<br />if (databaseIdMatchesCurrent(id, databaseId, requiredDatabaseId)) {<br />// 如果该节点指定的databaseId是当前配置中的，就启用该节点的sql片段<br />sqlFragments.put(id, context);<br />}<br />}<br />}<br />这里面，SQLFragments用于存放sql片段。在存放sql片段之前，会先调用databaseIdMatchesCurrent方法去校验该片段的databaseId是否为当前启用的databaseId</p>
<p>/**<br />* 判断databaseId是否是当前启用的<br />* @param id 命名空间id<br />* @param databaseId 待匹配的databaseId<br />* @param requiredDatabaseId 当前启用的databaseId<br />* @return<br />*/<br />private boolean databaseIdMatchesCurrent(String id, String databaseId, String requiredDatabaseId) {<br />if (requiredDatabaseId != null) {<br />return requiredDatabaseId.equals(databaseId);<br />}<br />if (databaseId != null) {<br />return false;<br />}<br />if (!this.sqlFragments.containsKey(id)) {<br />return true;<br />}<br />// skip this fragment if there is a previous one with a not null databaseId<br />XNode context = this.sqlFragments.get(id);<br />return context.getStringAttribute("databaseId") == null;</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 19:56:30.994 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 164
2020-05-23 19:56:30.995 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 19:56:31.556 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 19:56:31.557 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 19:56:31.559 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 19:56:31.560 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 19:56:31.561 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=7, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 19:56:31.858 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 302
2020-05-23 19:56:31.862 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-05-23 20:00:06.035 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 20:00:06.044 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:00:06.044 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:00:06.045 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 20:00:06.046 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=注解版poi操作工具, blogImage=null, blogContent=<p>最近在搭公司新项目的架构，测试的过程中深感导出Excel极为不便，因此就产生了写一个通用导出工具类的想法。写完后经测试发现比较好用，因此将公司相关的代码移除，单独拿出来这个模块进行开源。</p>
<p>项目的GitHub地址：POI操作工具</p>
<p>如果您对本工具比较感兴趣，可以加入下面QQ群进行技术交流：781943947</p>
<p>使用方式：</p>
<p>创建数据库（这个操作就不贴代码了）</p>
<p>导入工程下db目录的数据库</p>
<p>创建类ApiLog（实际开发中换成自己的类），加上注解@Excel</p>
<p>@Data<br />public class ApiLog implements Serializable {<br /><br />private static final long serialVersionUID = -3286564461647015367L;<br /><br />/**<br />* 日志id<br />*/<br />@Excel(name = "编号")<br />private Integer logId;<br /><br />/**<br />* 请求路径<br />*/<br />@Excel(name = "请求地址")<br />private String logUrl;<br /><br />/**<br />* 参数<br />*/<br />@Excel(name = "请求参数")<br />private String logParams;<br /><br />/**<br />* 访问状态，1正常0异常<br />*/<br />@Excel(name = "访问状态")<br />private Integer logStatus;<br /><br />/**<br />* 异常信息<br />*/<br />@Excel(name = "异常信息")<br />private String logMessage;<br /><br />/**<br />* 浏览器UA标识<br />*/<br />@Excel(name = "浏览器标识", autoSize = true)<br />private String logUa;<br /><br />/**<br />* 访问controller<br />*/<br />@Excel(name = "控制层")<br />private String logController;<br /><br />/**<br />* 请求方式，get、post等<br />*/<br />@Excel(name = "请求方式")<br />private String logMethod;<br /><br />/**<br />* 响应时间，单位毫秒<br />*/<br />@Excel(name = "响应时间", isStatistics = true)<br />private Long logTime;<br /><br />/**<br />* 请求ip<br />*/<br />@Excel(name = "请求ip")<br />private String logIp;<br /><br />/**<br />* 设备MAC<br />*/<br />@Excel(name = "设备号")<br />private String logDevice;<br /><br />/**<br />* 创建时间<br />*/<br />@Excel(name = "请求时间")<br />private String createdDate;<br /><br />/**<br />* 创建人<br />*/<br />private String createdBy;<br /><br />/**<br />* 创建人姓名<br />*/<br />@Excel(name = "创建人", autoSize = true)<br />private String createdName;<br /><br />/**<br />* 返回值<br />*/<br />@Excel(name = "返回值")<br />private String logResult;<br /><br />/**<br />* 日志内容<br />*/<br />@Excel(name = "日志内容")<br />private String logContent;<br /><br />/**<br />* 日志类型 0:操作日志;1:登录日志;2:定时任务;<br />*/<br />private Integer logType;<br /><br />/**<br />* 操作类型 1查询，2添加，3修改，4删除，5导入，6导出<br />*/<br />private Integer logOperateType;<br /><br />@Override<br />public String toString() {<br />return "ApiLog{" +<br />"logId=" + logId +<br />", logUrl='" + logUrl + '\'' +<br />", logParams='" + logParams + '\'' +<br />", logStatus=" + logStatus +<br />", logMessage='" + logMessage + '\'' +<br />", logUa='" + logUa + '\'' +<br />", logController='" + logController + '\'' +<br />", logMethod='" + logMethod + '\'' +<br />", logTime=" + logTime +<br />", logIp='" + logIp + '\'' +<br />", logDevice='" + logDevice + '\'' +<br />", createdDate='" + createdDate + '\'' +<br />", createdBy='" + createdBy + '\'' +<br />", createdName='" + createdName + '\'' +<br />", logResult='" + logResult + '\'' +<br />", logContent='" + logContent + '\'' +<br />", logType=" + logType +<br />", logOperateType=" + logOperateType +<br />'}';<br />}<br />}<br />编写Mapper（Service就跳过了）</p>
<p>@Component<br />public interface ApiMapper {<br /><br />/**<br />* 查询所有<br />* @return<br />*/<br />List&lt;ApiLog&gt; findAll();<br /><br />}<br />&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;<br />&lt;mapper namespace="com.gej.poi.mapper.ApiMapper"&gt;<br />&lt;!-- 注意：本内容仅限于风越云力内部传阅，禁止外泄以及用于其他的商业目 --&gt;<br />&lt;!-- 通用查询映射结果 --&gt;<br />&lt;resultMap id="BaseResultMap" type="com.gej.poi.pojo.ApiLog"&gt;<br />&lt;id column="log_id" property="logId"/&gt;<br />&lt;result column="log_url" property="logUrl"/&gt;<br />&lt;result column="log_params" property="logParams"/&gt;<br />&lt;result column="log_status" property="logStatus"/&gt;<br />&lt;result column="log_message" property="logMessage"/&gt;<br />&lt;result column="log_ua" property="logUa"/&gt;<br />&lt;result column="log_controller" property="logController"/&gt;<br />&lt;result column="log_method" property="logMethod"/&gt;<br />&lt;result column="log_time" property="logTime"/&gt;<br />&lt;result column="log_ip" property="logIp"/&gt;<br />&lt;result column="log_device" property="logDevice"/&gt;<br />&lt;result column="created_date" property="createdDate"/&gt;<br />&lt;result column="created_by" property="createdBy"/&gt;<br />&lt;result column="log_result" property="logResult"/&gt;<br />&lt;result column="created_name" property="createdName"/&gt;<br />&lt;/resultMap&gt;<br /><br />&lt;!-- 通用查询结果列 --&gt;<br />&lt;sql id="Base_Column_List"&gt;<br />log_id, log_url, log_params, log_status, log_message, log_ua, log_controller, log_method, log_time, log_ip, log_device, created_date, created_name, log_result<br />&lt;/sql&gt;<br /><br />&lt;select id="findAll" resultMap="BaseResultMap"&gt;<br />select * from sys_log_api<br />&lt;/select&gt;<br /><br />&lt;/mapper&gt;<br />编写测试类</p>
<p>@SpringBootTest<br />@RunWith(SpringRunner.class)<br />public class ExportTest {<br /><br />@Autowired<br />private ApiMapper apiMapper;<br /><br />/**<br />* 导出测试<br />* @throws Exception<br />*/<br />@Test<br />public void testExportLog() throws Exception {<br />List&lt;ApiLog&gt; list = apiMapper.findAll();<br />Workbook workbook = new ExcelExportHandler().createSheet(new ExportParams("测试导出", "最新日志"), ApiLog.class, list);<br />OutputStream outputStream = new FileOutputStream(new File("D:/测试.xlsx"));<br />workbook.write(outputStream);<br />}<br /><br />/**<br />* 导入测试<br />* @throws Exception<br />*/<br />@Test<br />public void testImportLog() throws Exception {<br />InputStream inputStream = new FileInputStream(new File("D:/测试.xlsx"));<br />List&lt;ApiLog&gt; apiLogs = new ExcelImportHandler().importExcel(inputStream, ApiLog.class, new ImportParams());<br />for (ApiLog apiLog : apiLogs) {<br />System.out.println(apiLog);<br />}<br />}<br /><br />}<br />最后附上Excel注解的代码</p>
<p>@Retention(RetentionPolicy.RUNTIME)<br />@Target({ElementType.FIELD})<br />public @interface Excel {<br /><br />/**<br />* 该列是否需要时间格式化<br />*/<br />boolean needFormat() default false;<br /><br />/**<br />* 时间格式化<br />*/<br />String format() default "";<br /><br />/**<br />* 导出时在excel中每个列的高度 单位为字符，一个汉字=2个字符<br />*/<br />double height() default 10;<br /><br />/**<br />* 导出时的列名。不可重复<br />*/<br />String name();<br /><br />/**<br />* 导出时在excel中每个列的宽 单位为字符，一个汉字=2个字符 如 以列名列内容中较合适的长度 例如姓名列6 【姓名一般三个字】<br />* 性别列4【男女占1，但是列标题两个汉字】 限制1-255<br />*/<br />double width() default 10;<br /><br />/**<br />* 是否自动统计数据,如果是统计,true的话在最后追加一行统计,把所有数据求和<br />*/<br />boolean isStatistics() default false;<br /><br />/**<br />* 是否设置列宽自适应<br />*/<br />boolean autoSize() default false;<br /><br />}<br />最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 20:00:06.218 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 183
2020-05-23 20:00:06.219 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 20:00:06.423 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:00:06.423 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:00:06.424 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:00:06.425 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:00:06.427 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=8, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:00:06.733 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 310
2020-05-23 20:00:06.734 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":9,"totalPage":1},"msg":"操作成功！"}
2020-05-23 20:00:57.419 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 20:00:57.420 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:00:57.421 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:00:57.421 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 20:00:57.422 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=JVM内存调优参数, blogImage=null, blogContent=<p>-Xms<br />JVM启动时申请的初始Heap值，默认为操作系统物理内存的1/64但小于1G。默认当空余堆内存大于70%时，JVM会减小heap的大小到-Xms指定的大小，可通过-XX:MaxHeapFreeRation=来指定这个比列。Server端JVM最好将-Xms和-Xmx设为相同值，避免每次垃圾回收完成后JVM重新分配内存；开发测试机JVM可以保留默认值。</p>
<p>-Xmx<br />JVM可申请的最大Heap值，默认值为物理内存的1/4但小于1G，默认当空余堆内存小于40%时，JVM会增大Heap到-Xmx指定的大小，可通过-XX:MinHeapFreeRation=来指定这个比列。最佳设值应该视物理内存大小及计算机内其他内存开销而定。</p>
<p>-Xmn<br />Java Heap Young区大小。整个堆大小=年轻代大小 + 年老代大小 + 持久代大小(相对于HotSpot 类型的虚拟机来说)。持久代一般固定大小为64m，所以增大年轻代后，将会减小年老代大小。此值对系统性能影响较大，Sun官方推荐配置为整个堆的3/8。</p>
<p>程序新创建的对象都是从年轻代分配内存，年轻代由Eden Space和两块相同大小的SurvivorSpace(通常又称S0和S1或From和To)构成，可通过-Xmn参数来指定年轻代的大小，也可以通过-XX:SurvivorRation来调整Eden Space及SurvivorSpace的大小。</p>
<p>老年代用于存放经过多次新生代GC仍然存活的对象，例如缓存对象，新建的对象也有可能直接进入老年代，主要有两种情况：1、大对象，可通过启动参数设置-XX:PretenureSizeThreshold=1024(单位为字节，默认为0)来代表超过多大时就不在新生代分配，而是直接在老年代分配。2、大的数组对象，且数组中无引用外部对象。老年代所占的内存大小为-Xmx对应的值减去-Xmn对应的值。如果在堆中没有内存完成实例分配，并且堆也无法再扩展时，将会抛出OutOfMemoryError异常。</p>
<p>-Xss<br />Java每个线程的Stack大小。JDK5.0以后每个线程堆栈大小为1M，以前每个线程堆栈大小为256K。根据应用的线程所需内存大小进行调整。在相同物理内存下，减小这个值能生成更多的线程。但是操作系统对一个进程内的线程数还是有限制的，不能无限生成，经验值在3000~5000左右。(例如：-Xss1024K)</p>
<p>-XX:PermSize<br />持久代（方法区）的初始内存大小。（例如：-XX:PermSize=64m）</p>
<p>-XX:MaxPermSize<br />持久代（方法区）的最大内存大小。（例如：-XX:MaxPermSize=512m）</p>
<p>-XX:+UseSerialGC<br />串行（SerialGC）是jvm的默认GC方式，一般适用于小型应用和单处理器，算法比较简单，GC效率也较高，但可能会给应用带来停顿。</p>
<p>-XX:+UseParallelGC<br />并行（ParallelGC）是指多个线程并行执行GC，一般适用于多处理器系统中，可以提高GC的效率，但算法复杂，系统消耗较大。（配合使用：-XX:ParallelGCThreads=8，并行收集器的线程数，此值最好配置与处理器数目相等）</p>
<p>-XX:+UseParNewGC<br />设置年轻代为并行收集，JKD5.0以上，JVM会根据系统配置自行设置，所以无需设置此值。</p>
<p>-XX:+UseParallelOldGC<br />设置年老代为并行收集，JKD6.0出现的参数选项。</p>
<p>-XX:+UseConcMarkSweepGC<br />并发（ConcMarkSweepGC）是指GC运行时，对应用程序运行几乎没有影响（也会造成停顿，不过很小而已），GC和app两者的线程在并发执行，这样可以最大限度不影响app的运行。</p>
<p>-XX:+UseCMSCompactAtFullCollection<br />在Full GC的时候，对老年代进行压缩整理。因为CMS是不会移动内存的，因此非常容易产生内存碎片。因此增加这个参数就可以在FullGC后对内存进行压缩整理，消除内存碎片。当然这个操作也有一定缺点，就是会增加CPU开销与GC时间，所以可以通过-XX:CMSFullGCsBeforeCompaction=3 这个参数来控制多少次Full GC以后进行一次碎片整理。</p>
<p>-XX:+CMSInitiatingOccupancyFraction=80<br />代表老年代使用空间达到80%后，就进行Full GC。CMS收集器在进行垃圾收集时，和应用程序一起工作，所以，不能等到老年代几乎完全被填满了再进行收集，这样会影响并发的应用线程的空间使用，从而再次触发不必要的Full GC。</p>
<p>-XX:+MaxTenuringThreshold=10<br />垃圾的最大年龄，代表对象在Survivor区经过10次复制以后才进入老年代。如果设置为0，则年轻代对象不经过Survivor区，直接进入老年代。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 20:00:57.583 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 164
2020-05-23 20:00:57.583 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 20:00:57.775 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:00:57.776 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:00:57.776 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:00:57.776 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:00:57.777 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=9, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:00:58.383 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 608
2020-05-23 20:00:58.386 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功！"}
2020-05-23 20:01:41.749 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 20:01:41.750 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:01:41.750 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:01:41.750 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 20:01:41.751 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=垃圾回收算法, blogImage=null, blogContent=<p>标记清除算法<br />概念<br />该算法有两个阶段。</p>
<p>1. 标记阶段：找到所有可访问的对象，做个标记。</p>
<p>2. 清除阶段：遍历堆，把未被标记的对象回收</p>
<p>缺点：会产生碎片，不够连贯</p>
<p>应用场景<br />该算法一般应用于老年代,因为老年代的对象生命周期比较长。</p>
<p>优缺点<br />标记清除算法的优点和缺点</p>
<p>1. 优点</p>
<p>- 是可以解决循环引用的问题</p>
<p>- 必要时才回收(内存不足时)</p>
<p>2. 缺点：</p>
<p>- 回收时，应用需要挂起，也就是stop the world。</p>
<p>- 标记和清除的效率不高，尤其是要扫描的对象比较多的时候</p>
<p>- 会造成内存碎片(会导致明明有内存空间,但是由于不连续,申请稍微大一些的对象无法做到)</p>
<p>复制算法<br />概念<br />如果jvm使用了coping算法，一开始就会将可用内存分为两块，from域和to域， 每次只是使用from域，to域则空闲着。当from域内存不够了，开始执行GC操作，这个时候，会把from域存活的对象拷贝到to域,然后直接把from域进行内存清理。</p>
<p>应用场景<br />coping算法一般是使用在新生代中，因为新生代中的对象一般都是朝生夕死的，存活对象的数量并不多，这样使用coping算法进行拷贝时效率比较高。jvm将Heap 内存划分为新生代与老年代，又将新生代划分为Eden(伊甸园) 与2块Survivor Space(幸存者区) ,然后在Eden &ndash;&gt;Survivor Space 以及From Survivor Space 与To Survivor Space 之间实行Copying 算法。 不过jvm在应用coping算法时，并不是把内存按照1:1来划分的，这样太浪费内存空间了。一般的jvm都是8:1。也即是说,Eden区:From区:To区域的比例是</p>
<p>始终有90%的空间是可以用来创建对象的,而剩下的10%用来存放回收后存活的对象。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>1、当Eden区满的时候,会触发第一次young gc,把还活着的对象拷贝到Survivor From区；当Eden区再次触发young gc的时候,会扫描Eden区和From区域,对两个区域进行垃圾回收,经过这次回收后还存活的对象,则直接复制到To区域,并将Eden和From区域清空。</p>
<p>2、当后续Eden又发生young gc的时候,会对Eden和To区域进行垃圾回收,存活的对象复制到From区域,并将Eden和To区域清空。</p>
<p>3、可见部分对象会在From和To区域中复制来复制去,如此交换15次(由JVM参数MaxTenuringThreshold决定,这个参数默认是15),最终如果还是存活,就存入到老年代</p>
<p>注意:&nbsp;万一存活对象数量比较多，那么To域的内存可能不够存放，这个时候会借助老年代的空间。</p>
<p>优缺点<br />优点:在存活对象不多的情况下，性能高，能解决内存碎片和java垃圾回收算法之-标记清除 中导致的引用更新问题。</p>
<p>缺点:&nbsp;会造成一部分的内存浪费。不过可以根据实际情况，将内存块大小比例适当调整；如果存活对象的数量比较大，coping的性能会变得很差。</p>
<p>标记压缩算法<br />标记清除算法和标记压缩算法非常相同，但是标记压缩算法在标记清除算法之上解决内存碎片化</p>
<p>概念</p>
<p><br />&nbsp;</p>
<p>压缩算法简单介绍</p>
<p>任意顺序 : 即不考虑原先对象的排列顺序，也不考虑对象之间的引用关系，随意移动对象；</p>
<p>线性顺序 : 考虑对象的引用关系，例如a对象引用了b对象，则尽可能将a和b移动到一块；</p>
<p>滑动顺序 : 按照对象原来在堆中的顺序滑动到堆的一端。</p>
<p>优缺点<br />优点:解决内存碎片问题，缺点压缩阶段，由于移动了可用对象，需要去更新引用。</p>
<p>分代算法<br />概述<br />这种算法，根据对象的存活周期的不同将内存划分成几块，新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。可以用抓重点的思路来理解这个算法。</p>
<p>新生代对象朝生夕死,对象数量多，只要重点扫描这个区域，那么就可以大大提高垃圾收集的效率。另外老年代对象存储久，无需经常扫描老年代，避免扫描导致的开销。</p>
<p>新生代<br />在新生代，每次垃圾收集器都发现有大批对象死去，只有少量存活，采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；可以参看我之前写的java垃圾回收算法之-coping复制</p>
<p>老年代<br />而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须&ldquo;标记－清除-压缩&rdquo;算法进行回收。参看java垃圾回收算法之-标记_清除压缩</p>
<p>新创建的对象被分配在新生代，如果对象经过几次回收后仍然存活，那么就把这个对象划分到老年代。</p>
<p>老年代区存放Young区Survivor满后触发minor GC后仍然存活的对象，当Eden区满后会将存活的对象放入Survivor区域，如果Survivor区存不下这些对象，GC收集器就会将这些对象直接存放到Old区中，如果Survivor区中的对象足够老，也直接存放到Old区中。如果Old区满了，将会触发Full GC回收整个堆内存。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。<br /><br /></p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 20:01:41.903 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 154
2020-05-23 20:01:41.904 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 20:01:42.090 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:01:42.090 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:01:42.091 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:01:42.092 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:01:42.092 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=10, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:01:42.460 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 370
2020-05-23 20:01:42.461 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":11,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:03:40.833 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 20:03:40.840 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:03:40.841 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:03:40.841 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 20:03:40.842 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=代理设计模式, blogImage=null, blogContent=<p>概念<br />通过代理控制对象的访问,可以详细访问某个对象的方法，在这个方法调用处理，或调用后处理（类似于AOP）。</p>
<p>代理设计模式应用场景：AOP、权限控制、事务</p>
<p>常见代理的分类有：静态代理，动态代理（JDK动态代理，Cglib等）</p>
<p>注意：本文所指的&ldquo;代理&rdquo;为设计模式中的&ldquo;代理设计模式&rdquo;，跟正向、反向代理并非一个概念，不要混淆。</p>
<p>静态代理<br />由程序员创建或工具生成代理类的源码，再编译代理类。所谓静态也就是在程序运行前就已经存在代理类的字节码文件，代理类和委托类的关系在运行前就确定了。</p>
<p>public interface IUserDao {<br />void save();<br />}<br /><br />public class UserDao implements IUserDao {<br />public void save() {<br />System.out.println("已经保存数据...");<br />}<br />}<br /><br />/**<br />* 代理类<br />*/<br />public class UserDaoProxy implements IUserDao {<br />private IUserDao target;<br /><br />public UserDaoProxy(IUserDao iuserDao) {<br />this.target = iuserDao;<br />}<br /><br />public void save() {<br />System.out.println("开启事物...");<br />target.save();<br />System.out.println("关闭事物...");<br />}<br /><br />}<br />静态代理需要每个被代理类都有一个代理类，因此代码量较多，实际开发中非必须情况尽量少用。</p>
<p>动态代理<br />JDK动态代理<br />1)原理：是根据类加载器和接口创建代理类（此代理类是接口的实现类，所以必须使用接口 面向接口生成代理，位于java.lang.reflect包下）</p>
<p>2)实现方式：</p>
<p>1. 通过实现InvocationHandler接口创建自己的调用处理器 IvocationHandler handler = new InvocationHandlerImpl(&hellip;);</p>
<p>2. 通过为Proxy类指定ClassLoader对象和一组interface创建动态代理类Class clazz = Proxy.getProxyClass(classLoader,new Class[]{&hellip;});</p>
<p>3. 通过反射机制获取动态代理类的构造函数，其参数类型是调用处理器接口类型Constructor constructor = clazz.getConstructor(new Class[]{InvocationHandler.class});</p>
<p>4. 通过构造函数创建代理类实例，此时需将调用处理器对象作为参数被传入Interface Proxy = (Interface)constructor.newInstance(new Object[] (handler));</p>
<p>缺点：jdk动态代理，必须是面向接口，目标业务类必须实现接口</p>
<p>public class InvocationHandlerImpl implements InvocationHandler {<br /><br />/** 目标代理对象 */<br />private Object target;<br /><br />public InvocationHandlerImpl(Object target) {<br />this.target = target;<br />}<br /><br />public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<br />// 反射执行方法<br />Object invoke = method.invoke(target, args);<br />return invoke;<br />}<br />public static void main(String[] args) throws NoSuchMethodException, SecurityException, InstantiationException,<br />IllegalAccessException, IllegalArgumentException, InvocationTargetException {<br />// 被代理对象<br />IUserDao userDao = new UserDao();<br />InvocationHandlerImpl invocationHandlerImpl = new InvocationHandlerImpl(userDao);<br />ClassLoader loader = userDao.getClass().getClassLoader();<br />Class&lt;?&gt;[] interfaces = userDao.getClass().getInterfaces();<br />// 主要装载器、一组接口及调用处理动态代理实例<br />IUserDao newProxyInstance = (IUserDao) Proxy.newProxyInstance(loader, interfaces, invocationHandlerImpl);<br />newProxyInstance.save();<br />}<br />}<br /><br />Cglib动态代理<br />原理：利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。&nbsp;</p>
<p>使用cglib[Code Generation Library]实现动态代理，并不要求委托类必须实现接口，底层采用asm字节码生成框架生成代理类的字节码</p>
<p>引入依赖：</p>
<p>&lt;dependencies&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;org.apache.commons&lt;/groupId&gt;<br />&lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;<br />&lt;version&gt;3.8.1&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;dependency&gt;<br />&lt;groupId&gt;cglib&lt;/groupId&gt;<br />&lt;artifactId&gt;cglib&lt;/artifactId&gt;<br />&lt;version&gt;3.1&lt;/version&gt;<br />&lt;/dependency&gt;<br />&lt;/dependencies&gt;<br />创建代理：</p>
<p>public class CglibProxy implements MethodInterceptor {<br /><br />/** 代理对象 */<br />private Object target;<br /><br />public Object getInstance(Object target) {<br />// 固定代码，创建访问对象<br />this.target = target;<br />Enhancer enhancer = new Enhancer();<br />enhancer.setSuperclass(target.getClass());<br />enhancer.setCallback(this);<br />return enhancer.create();<br />}<br /><br />public Object intercept(Object o, Method method, Object[] args, MethodProxy methodProxy) throws Throwable {<br />Object invoke = methodProxy.invoke(target, args);<br />return invoke;<br />}<br /><br />public static void main(String[] args) {<br />CglibProxy cglibProxy = new CglibProxy();<br />UserDao userDao = (UserDao) cglibProxy.getInstance(new UserDao());<br />userDao.save();<br />}<br />}<br />Cglib和jdk动态代理的区别<br />java动态代理是利用反射机制生成一个实现代理接口的匿名类，在调用具体方法前调用InvokeHandler来处理。</p>
<p>而cglib动态代理是利用asm开源包，对代理对象类的class文件加载进来，通过修改其字节码生成子类来处理。</p>
<p>Spring中。</p>
<p>1、如果目标对象实现了接口，默认情况下会采用JDK的动态代理实现AOP</p>
<p>2、如果目标对象实现了接口，可以强制使用CGLIB实现AOP</p>
<p>3、如果目标对象没有实现了接口，必须采用CGLIB库，spring会自动在JDK动态代理和CGLIB之间转换</p>
<p>JDK动态代理只能对实现了接口的类生成代理，而不能针对类 。</p>
<p>CGLIB是针对类实现代理，主要是对指定的类生成一个子类，覆盖其中的方法 。</p>
<p>因为是继承，所以该类或方法最好不要声明成final ，final可以阻止继承和多态。</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/102690118</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 20:03:41.019 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 187
2020-05-23 20:03:41.020 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 20:03:41.237 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:03:41.238 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:03:41.238 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:03:41.239 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:03:41.240 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=11, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:03:41.542 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 305
2020-05-23 20:03:41.545 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:04:55.751 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/save
2020-05-23 20:04:55.752 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:04:55.753 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:04:55.753 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.save
2020-05-23 20:04:55.754 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Blog(blogId=, blogTitle=多线程中ThreadLocal的使用, blogImage=null, blogContent=<p>前言<br />多线程是Java的一个重要特性，多线程从某方面可以等价于多任务，当你有多个任务要处理时，多个任务一起做所消耗的时间肯定比任务串行起来做，所消耗的时间短。而对于多线程不熟悉的新手则容易踩到很多坑，最典型的则是变量问题。</p>
<p>概念介绍<br />下面先用简单粗俗的语言解释一下几个基本概念</p>
<p>线程安全：多线程访问时，采用了加锁机制，当一个线程访问该类的某个数据时，进行保护，其他线程不能进行访问直到该线程读取完，其他线程才可使用。不会出现数据不一致或者数据污染。典型的例子为StringBuffer类。</p>
<p>线程不安全：不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的数据是脏数据。典型的例子为StringBuilder类。Servlet和SpringMVC采用的是单例设计模式，因此也是线程不安全的。而aop中如果定义了成员变量，也是线程不安全的。</p>
<p>Java内存模型<br />参考我之前的文章Java内存模型介绍</p>
<p>结合Java内存模型的介绍可知，在单例模式下，多个线程操作同一个变量，会发生线程安全性问题简单来说就是一个变量name在线程A中命名为&ldquo;李铁蛋&rdquo;，而线程B将其命名为&ldquo;李蛋&rdquo;，此时线程A输出变量name，极有可能输出的是&ldquo;李蛋&rdquo;。因此，就需要使用ThreadLocal来给每个线程提供局部变量，解决线程安全问题。</p>
<p>示例<br />首先我们来看一下关于线程不安全的情况</p>
<p>public class test003 implements Runnable {<br /><br />private Res res;<br /><br />public test003(Res res) {<br />this.res = res;<br />}<br /><br />public void run() {<br />for (int i = 0; i &lt; 10; i++) {<br />System.out.println(Thread.currentThread().getName() + "," + res.getNumber());<br />try {<br />Thread.sleep(500);<br />} catch (InterruptedException e) {<br />e.printStackTrace();<br />}<br />}<br />}<br /><br />public static void main(String[] args) {<br />Res res = new Res();<br />for (int i = 0; i &lt; 4; i++) {<br />new Thread(new test003(res)).start();<br />}<br />}<br /><br />}<br /><br />class Res {<br />public Integer count = 0;<br /><br />public Integer getNumber() {<br />return ++count;<br />}<br /><br />}<br />程序中的res变量则为主内存中的变量，每个线程都会操作同一个res，获取到的也是同一个count，因此其中一次运行打印出来的结果如下</p>
<p>Thread-0,1<br />Thread-1,2<br />Thread-2,3<br />Thread-3,4<br />Thread-0,5<br />Thread-1,6<br />Thread-2,7<br />Thread-3,8<br />Thread-0,9<br />Thread-1,10<br />Thread-2,11<br />。。。。。<br />程序的本意为打印每个线程从1开始增长，而运行结果中，比如线程0，第一次为1，第二次为5，很明显不符合要求，我们将程序部分代码如下改造：</p>
<p>class Res {<br />public static ThreadLocal&lt;Integer&gt; threadLocal = new ThreadLocal&lt;Integer&gt;() {<br />@Override<br />protected Integer initialValue() {<br />return 0;<br />}<br />};<br /><br />// 这里其实可以使用JDK8的Lambda表达式简化代码<br />// public static ThreadLocal&lt;Integer&gt; threadLocal = ThreadLocal.withInitial(() -&gt; 0);<br /><br />public Integer getNumber() {<br />int count = threadLocal.get() + 1;<br />threadLocal.set(count);<br />return count;<br />}<br /><br />}<br />改造后的代码，使用ThreadLocal创建一个成员变量，泛型为Integer，表示这个成员变量为int类型。在getNumber方法中，执行的则是count++操作。threadLocal.get()方法的作用是获取当前线程threadLocal中的值，+1之后获取本次的count，并set回去。我们看一下输出结果。</p>
<p>Thread-0,1<br />Thread-2,1<br />Thread-3,1<br />Thread-1,1<br />Thread-0,2<br />Thread-2,2<br />Thread-3,2<br />Thread-1,2<br />Thread-1,3<br />Thread-0,3<br />Thread-2,3<br />Thread-3,3<br />。。。。<br />每个线程的结果都是从1开始增长。</p>
<p>总结<br />ThreadLocal的作用是给每个线程提供局部变量，而这个局部变量就是存储到工作内存中的。线程之间的局部变量互不影响，达到线程安全的目的。ThreadLocal的应用相当广泛，如SpringCloud在网关中获取当前的request，就是使用的ThreadLocal</p>
<p>部分代码如下：</p>
<p>public class RequestContext extends ConcurrentHashMap&lt;String, Object&gt; {<br /><br />// ThreadLocal存储RequestContext<br />protected static final ThreadLocal&lt;? extends RequestContext&gt; threadLocal = new ThreadLocal&lt;RequestContext&gt;() {<br />protected RequestContext initialValue() {<br />try {<br />return (RequestContext)RequestContext.contextClass.newInstance();<br />} catch (Throwable var2) {<br />throw new RuntimeException(var2);<br />}<br />}<br />};<br /><br />// 获取Request上下文<br />public static RequestContext getCurrentContext() {<br />if (testContext != null) {<br />return testContext;<br />} else {<br />RequestContext context = (RequestContext)threadLocal.get();<br />return context;<br />}<br />}<br /><br />// 获取当前线程的request<br />public HttpServletRequest getRequest() {<br />return (HttpServletRequest)this.get("request");<br />}<br /><br />}<br />SpringCloud的源码我还没开始看（这玩意源码太多了估计啃不动），现在在啃Mybatis源码，因此下面对此的分析只是推测，还希望大佬们不要打我。</p>
<p>Zuul在请求进入后，首先会获取到request，并将其存储在RequestContext中，使用threadLocal存储，可以保证每个线程获取到的request都是属于自己的。后续在程序的任意处，都可以使用 RequestContext.getCurrentContext().getRequest() 来获取当前请求的request对象。</p>
<p>错误使用<br />在web应用中，经常会有人把ThreadLocal作为每个线程的全局变量使用，这种用法是错误的。SpringBoot底层有线程池，对于每一个请求，都会从线程池中随机取出一个线程，因此即使是同一个登录的用户，每一次请求都有可能不是同一个线程，而从ThreadLocal中获取到的值自然也不一样。关于每次请求都不是同一线程的问题，可以自行打印请求的线程id进行证明，这里就不贴代码了。</p>
<p>ThreadLocal在web应用中的使用场景为，为每次请求提供一个全局的值，在这一次请求中，可以在任何地方取出来这个值进行操作。如：在aop中解析token获取登录中的用户信息，存放到ThreadLocal，本次请求需要用到登录用户的信息，就可以取出来。再如：开发者在aop中记录日志，代码全部写到环绕通知中就显得冗余，因此获取ip、参数等内容会写到前置通知中。而对于要存表的日志，参数在前置通知，返回值在后置通知，报错信息在环绕通知中，可能会想到把变量定义到最上面，这种写法也是错误的。在上面说过，aop是单例模式，因此这种写法存在线程安全性问题，在这里就也可以使用ThreadLocal存储日志信息，最后在后置通知中存表。<br /><br /></p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=8, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-05-23 20:04:56.164 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 413
2020-05-23 20:04:56.164 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"添加成功"}
2020-05-23 20:04:56.335 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:04:56.336 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:04:56.337 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:04:56.339 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:04:56.340 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:04:56.657 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 322
2020-05-23 20:04:56.658 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:06:28.472 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:06:28.487 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:06:28.489 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:06:28.489 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:06:28.490 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:06:28.869 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 397
2020-05-23 20:06:28.871 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:12:33.889 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:12:33.892 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:12:33.893 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:12:33.894 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:12:33.895 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:12:33.895 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 6
2020-05-23 20:12:33.897 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:12:35.428 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 20:12:35.429 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:12:35.430 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:12:35.431 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 20:12:35.431 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:12:35.431 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:12:35.432 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:12:35.441 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:12:35.441 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:12:35.442 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:12:35.626 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 198
2020-05-23 20:12:35.627 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 20:12:35.891 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 460
2020-05-23 20:12:35.892 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:14:26.111 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:14:26.120 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:14:26.120 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:14:26.121 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:14:26.122 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:14:26.123 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 12
2020-05-23 20:14:26.124 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:14:27.250 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 20:14:27.251 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:14:27.251 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:14:27.252 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:14:27.252 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:14:27.252 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:14:27.253 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 20:14:27.253 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:14:27.253 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:14:27.254 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:14:27.361 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 111
2020-05-23 20:14:27.364 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 20:14:27.850 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 599
2020-05-23 20:14:27.851 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:15:24.012 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:15:24.033 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:15:24.034 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:15:24.035 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:15:24.052 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:15:24.057 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 45
2020-05-23 20:15:24.067 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:15:24.742 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:15:24.743 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:15:24.745 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:15:24.745 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:15:24.746 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:15:25.060 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 318
2020-05-23 20:15:25.062 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:15:25.057 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 20:15:25.075 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:15:25.078 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:15:25.079 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 20:15:25.080 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:15:25.195 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 138
2020-05-23 20:15:25.196 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 20:15:59.347 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:15:59.348 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:15:59.348 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:15:59.349 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:15:59.351 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:15:59.352 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 5
2020-05-23 20:15:59.353 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:16:00.632 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:16:00.633 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:16:00.633 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:00.634 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:16:00.634 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:16:00.634 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 2
2020-05-23 20:16:00.635 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:16:01.359 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:16:01.360 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:16:01.361 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:01.362 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:16:01.362 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:16:01.377 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 20:16:01.378 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:16:01.378 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:01.379 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 20:16:01.379 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:16:01.575 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 198
2020-05-23 20:16:01.576 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 20:16:01.843 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 484
2020-05-23 20:16:01.844 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:16:08.309 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:16:08.310 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:16:08.310 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:08.311 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:16:08.311 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:16:08.755 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 446
2020-05-23 20:16:08.756 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164597538697216","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-23 12:01:42","typeName":"docker","updateTime":"2020-05-23 12:01:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165097050943488","blogRead":0,"blogTitle":"代理设计模式","createdTime":"2020-05-23 12:03:41","typeName":"docker","updateTime":"2020-05-23 12:03:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165411250450432","blogRead":0,"blogTitle":"多线程中ThreadLocal的使用","createdTime":"2020-05-23 12:04:56","typeName":"docker","updateTime":"2020-05-23 12:04:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:16:15.433 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:16:15.436 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:16:15.437 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:15.438 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:16:15.442 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1264164597538697216, blogTitle=垃圾回收算法, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:01:42, updateTime=2020-05-23 12:01:42), BlogVo(blogId=1264165097050943488, blogTitle=代理设计模式, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:03:41, updateTime=2020-05-23 12:03:41), BlogVo(blogId=1264165411250450432, blogTitle=多线程中ThreadLocal的使用, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:04:56, updateTime=2020-05-23 12:04:56)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:16:15.827 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 403
2020-05-23 20:16:15.829 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:16:21.459 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:16:21.460 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:16:21.461 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:16:21.461 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:16:21.462 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=2, pageSize=10, totalPage=2, totalCount=13, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:16:22.020 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 560
2020-05-23 20:16:22.020 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":2,"index":10,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164597538697216","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-23 12:01:42","typeName":"docker","updateTime":"2020-05-23 12:01:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165097050943488","blogRead":0,"blogTitle":"代理设计模式","createdTime":"2020-05-23 12:03:41","typeName":"docker","updateTime":"2020-05-23 12:03:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165411250450432","blogRead":0,"blogTitle":"多线程中ThreadLocal的使用","createdTime":"2020-05-23 12:04:56","typeName":"docker","updateTime":"2020-05-23 12:04:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:18:01.072 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/info
2020-05-23 20:18:01.075 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:18:01.075 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:18:01.077 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2020-05-23 20:18:01.078 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:18:01.079 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 7
2020-05-23 20:18:01.080 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"name":"稽哥","password":"","signature":"1213343","username":"admin"},"msg":"操作成功！"}
2020-05-23 20:18:01.962 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /type/getList
2020-05-23 20:18:01.966 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-05-23 20:18:01.967 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:18:01.967 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:18:01.967 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.TypeController.getList
2020-05-23 20:18:01.967 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:18:01.968 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-05-23 20:18:01.968 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:18:01.968 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:18:01.969 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:18:02.486 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 524
2020-05-23 20:18:02.487 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"typeBlogCount":0,"typeId":7,"typeName":"lINUX"},{"typeBlogCount":0,"typeId":8,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"python"},{"typeBlogCount":0,"typeId":11,"typeName":"redis"}],"msg":"操作成功！"}
2020-05-23 20:18:02.884 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 917
2020-05-23 20:18:02.885 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":2},"msg":"操作成功！"}
2020-05-23 20:18:19.523 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-05-23 20:18:19.526 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-05-23 20:18:19.526 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-05-23 20:18:19.526 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-05-23 20:18:19.528 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=1, totalCount=13, list=[BlogVo(blogId=1264158016633778176, blogTitle=程序员到底要不要重复造轮子？, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:35:33, updateTime=2020-05-23 11:35:33), BlogVo(blogId=1264158572613939200, blogTitle=Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=python, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:37:45, updateTime=2020-05-23 11:37:45), BlogVo(blogId=1264161428926574592, blogTitle=varchar字段长度最好是2的n次方-1, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:49:06, updateTime=2020-05-23 11:49:06), BlogVo(blogId=1264161956096061440, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:51:12, updateTime=2020-05-23 11:51:12), BlogVo(blogId=1264162449455263744, blogTitle=Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:53:10, updateTime=2020-05-23 11:53:10), BlogVo(blogId=1264162763432472576, blogTitle=String s = new String("123")究竟创建了几个对象, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:54:25, updateTime=2020-05-23 11:54:25), BlogVo(blogId=1264162982769405952, blogTitle=count(1)，count(*)，count(主键) 性能对比及辟谣, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=lINUX, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:55:17, updateTime=2020-05-23 11:55:17), BlogVo(blogId=1264163293454086144, blogTitle=Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 11:56:31, updateTime=2020-05-23 11:56:31), BlogVo(blogId=1264164196127027200, blogTitle=注解版poi操作工具, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:06, updateTime=2020-05-23 12:00:06), BlogVo(blogId=1264164411613589504, blogTitle=JVM内存调优参数, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=docker, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-23 12:00:58, updateTime=2020-05-23 12:00:58)], params={}, sortColumn=null, sortMethod=asc)]
2020-05-23 20:18:19.844 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 321
2020-05-23 20:18:19.845 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158016633778176","blogRead":0,"blogTitle":"程序员到底要不要重复造轮子？","createdTime":"2020-05-23 11:35:33","typeName":"python","updateTime":"2020-05-23 11:35:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264158572613939200","blogRead":0,"blogTitle":"Mybatis源码阅读（三）：结果集映射3.1 —— ResultSetBuilder与简单映射","createdTime":"2020-05-23 11:37:45","typeName":"python","updateTime":"2020-05-23 11:37:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161428926574592","blogRead":0,"blogTitle":"varchar字段长度最好是2的n次方-1","createdTime":"2020-05-23 11:49:06","typeName":"lINUX","updateTime":"2020-05-23 11:49:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264161956096061440","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:51:12","typeName":"lINUX","updateTime":"2020-05-23 11:51:12"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162449455263744","blogRead":0,"blogTitle":"Mybatis源码阅读（二）：动态节点解析2.2 —— SqlSourceBuilder与三种SqlSource","createdTime":"2020-05-23 11:53:10","typeName":"lINUX","updateTime":"2020-05-23 11:53:10"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162763432472576","blogRead":0,"blogTitle":"String s = new String(\"123\")究竟创建了几个对象","createdTime":"2020-05-23 11:54:25","typeName":"lINUX","updateTime":"2020-05-23 11:54:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264162982769405952","blogRead":0,"blogTitle":"count(1)，count(*)，count(主键) 性能对比及辟谣","createdTime":"2020-05-23 11:55:17","typeName":"lINUX","updateTime":"2020-05-23 11:55:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264163293454086144","blogRead":0,"blogTitle":"Mybatis源码阅读（一）：Mybatis初始化1.3 —— 解析sql片段和sql节点","createdTime":"2020-05-23 11:56:31","typeName":"docker","updateTime":"2020-05-23 11:56:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164196127027200","blogRead":0,"blogTitle":"注解版poi操作工具","createdTime":"2020-05-23 12:00:06","typeName":"docker","updateTime":"2020-05-23 12:00:06"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164411613589504","blogRead":0,"blogTitle":"JVM内存调优参数","createdTime":"2020-05-23 12:00:58","typeName":"docker","updateTime":"2020-05-23 12:00:58"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264164597538697216","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-23 12:01:42","typeName":"docker","updateTime":"2020-05-23 12:01:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165097050943488","blogRead":0,"blogTitle":"代理设计模式","createdTime":"2020-05-23 12:03:41","typeName":"docker","updateTime":"2020-05-23 12:03:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264165411250450432","blogRead":0,"blogTitle":"多线程中ThreadLocal的使用","createdTime":"2020-05-23 12:04:56","typeName":"docker","updateTime":"2020-05-23 12:04:56"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":13,"totalPage":1},"msg":"操作成功！"}
