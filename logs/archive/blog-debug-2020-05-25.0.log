2020-05-25 06:35:03.324 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 06:37:02.986 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 06:37:03.082 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 06:37:03.249 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 06:37:03.665 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 06:37:03.678 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 783(Long), {"code":20000,"data":{"token":"38C5BDE695B4AD271963837079D06102"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 06:37:03.789 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 06:37:04.136 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 06:37:04.137 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 06:37:04.271 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 06:37:05.233 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 06:37:05.238 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 06:37:05.365 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 06:37:05.443 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 06:37:05.447 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 253(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 06:37:05.549 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 06:38:35.556 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 06:38:35.556 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 06:38:35.624 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 7
2020-05-25 06:38:35.626 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 06:38:35.627 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 06:38:35.672 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 06:38:35.847 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 06:38:35.851 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 531(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":7,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 06:38:35.964 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 06:49:58.308 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 06:49:58.313 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264357690636476416(String)
2020-05-25 06:49:58.507 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 06:49:58.587 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 06:49:58.598 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264357690636476416(String), [1264357690636476416](String), 1(Integer), null, POST(String), 316(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>标记清除算法<br />概念<br />该算法有两个阶段。</p>\n<p>1. 标记阶段：找到所有可访问的对象，做个标记。</p>\n<p>2. 清除阶段：遍历堆，把未被标记的对象回收</p>\n<p>缺点：会产生碎片，不够连贯</p>\n<p>应用场景<br />该算法一般应用于老年代,因为老年代的对象生命周期比较长。</p>\n<p>优缺点<br />标记清除算法的优点和缺点</p>\n<p>1. 优点</p>\n<p>- 是可以解决循环引用的问题</p>\n<p>- 必要时才回收(内存不足时)</p>\n<p>2. 缺点：</p>\n<p>- 回收时，应用需要挂起，也就是stop the world。</p>\n<p>- 标记和清除的效率不高，尤其是要扫描的对象比较多的时候</p>\n<p>- 会造成内存碎片(会导致明明有内存空间,但是由于不连续,申请稍微大一些的对象无法做到)</p>\n<p>复制算法<br />概念<br />如果jvm使用了coping算法，一开始就会将可用内存分为两块，from域和to域， 每次只是使用from域，to域则空闲着。当from域内存不够了，开始执行GC操作，这个时候，会把from域存活的对象拷贝到to域,然后直接把from域进行内存清理。</p>\n<p>应用场景<br />coping算法一般是使用在新生代中，因为新生代中的对象一般都是朝生夕死的，存活对象的数量并不多，这样使用coping算法进行拷贝时效率比较高。jvm将Heap 内存划分为新生代与老年代，又将新生代划分为Eden(伊甸园) 与2块Survivor Space(幸存者区) ,然后在Eden &ndash;&gt;Survivor Space 以及From Survivor Space 与To Survivor Space 之间实行Copying 算法。 不过jvm在应用coping算法时，并不是把内存按照1:1来划分的，这样太浪费内存空间了。一般的jvm都是8:1。也即是说,Eden区:From区:To区域的比例是</p>\n<p>始终有90%的空间是可以用来创建对象的,而剩下的10%用来存放回收后存活的对象。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>1、当Eden区满的时候,会触发第一次young gc,把还活着的对象拷贝到Survivor From区；当Eden区再次触发young gc的时候,会扫描Eden区和From区域,对两个区域进行垃圾回收,经过这次回收后还存活的对象,则直接复制到To区域,并将Eden和From区域清空。</p>\n<p>2、当后续Eden又发生young gc的时候,会对Eden和To区域进行垃圾回收,存活的对象复制到From区域,并将Eden和To区域清空。</p>\n<p>3、可见部分对象会在From和To区域中复制来复制去,如此交换15次(由JVM参数MaxTenuringThreshold决定,这个参数默认是15),最终如果还是存活,就存入到老年代</p>\n<p>注意:&nbsp;万一存活对象数量比较多，那么To域的内存可能不够存放，这个时候会借助老年代的空间。</p>\n<p>优缺点<br />优点:在存活对象不多的情况下，性能高，能解决内存碎片和java垃圾回收算法之-标记清除 中导致的引用更新问题。</p>\n<p>缺点:&nbsp;会造成一部分的内存浪费。不过可以根据实际情况，将内存块大小比例适当调整；如果存活对象的数量比较大，coping的性能会变得很差。</p>\n<p>标记压缩算法<br />标记清除算法和标记压缩算法非常相同，但是标记压缩算法在标记清除算法之上解决内存碎片化</p>\n<p>概念</p>\n<p><br />&nbsp;</p>\n<p>压缩算法简单介绍</p>\n<p>任意顺序 : 即不考虑原先对象的排列顺序，也不考虑对象之间的引用关系，随意移动对象；</p>\n<p>线性顺序 : 考虑对象的引用关系，例如a对象引用了b对象，则尽可能将a和b移动到一块；</p>\n<p>滑动顺序 : 按照对象原来在堆中的顺序滑动到堆的一端。</p>\n<p>优缺点<br />优点:解决内存碎片问题，缺点压缩阶段，由于移动了可用对象，需要去更新引用。</p>\n<p>分代算法<br />概述<br />这种算法，根据对象的存活周期的不同将内存划分成几块，新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。可以用抓重点的思路来理解这个算法。</p>\n<p>新生代对象朝生夕死,对象数量多，只要重点扫描这个区域，那么就可以大大提高垃圾收集的效率。另外老年代对象存储久，无需经常扫描老年代，避免扫描导致的开销。</p>\n<p>新生代<br />在新生代，每次垃圾收集器都发现有大批对象死去，只有少量存活，采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；可以参看我之前写的java垃圾回收算法之-coping复制</p>\n<p>老年代<br />而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须&ldquo;标记－清除-压缩&rdquo;算法进行回收。参看java垃圾回收算法之-标记_清除压缩</p>\n<p>新创建的对象被分配在新生代，如果对象经过几次回收后仍然存活，那么就把这个对象划分到老年代。</p>\n<p>老年代区存放Young区Survivor满后触发minor GC后仍然存活的对象，当Eden区满后会将存活的对象放入Survivor区域，如果Survivor区存不下这些对象，GC收集器就会将这些对象直接存放到Old区中，如果Survivor区中的对象足够老，也直接存放到Old区中。如果Old区满了，将会触发Full GC回收整个堆内存。</p>\n<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>","blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","blogType":1,"createdTime":"2020-05-24 00:49:00","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 06:49:58.705 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:06:36.805 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:06:36.911 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 325(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:06:37.045 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:14:53.416 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:14:53.422 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:14:53.529 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:16:32.931 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:16:32.934 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:16:33.027 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:16:45.021 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:16:45.025 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:16:45.124 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:16:53.536 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:16:53.541 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:16:53.639 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:18:33.449 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:18:33.499 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:18:33.792 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:18:33.954 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:18:33.997 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:18:34.100 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:18:34.752 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:18:34.828 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:18:35.806 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:18:35.909 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:18:35.913 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 1520(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:18:36.010 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:16.769 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:16.786 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 27(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:17.055 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:17.289 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:45:17.289 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:45:17.416 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:45:17.572 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:17.574 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 204(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:17.657 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:32.054 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:32.162 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:32.253 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:32.467 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:45:32.469 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:45:32.523 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:45:32.629 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:32.633 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 155(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:32.736 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:42.170 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:42.172 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:42.262 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:42.500 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:45:42.501 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:45:42.563 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:45:42.638 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:42.640 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 190(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:42.734 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:45:55.939 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 07:45:55.954 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:45:56.029 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 7
2020-05-25 07:45:56.030 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 07:45:56.031 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 07:45:56.076 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 07:45:56.251 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:45:56.252 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 516(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":7,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:45:56.345 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:46:25.199 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 07:46:25.200 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:46:26.315 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:46:26.317 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:46:26.416 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:46:27.280 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:46:27.280 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:46:27.379 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:46:28.036 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:46:28.037 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:46:28.091 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:46:28.152 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:46:28.154 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:46:28.246 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:46:29.124 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 07:46:29.125 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:46:29.313 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:46:29.314 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:46:29.419 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:48:39.594 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:48:39.603 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:48:39.757 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:48:40.235 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 07:48:40.236 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:48:40.433 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:48:40.435 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:48:40.482 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:48:40.483 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:48:40.531 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:48:40.572 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:48:40.677 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:48:40.678 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 151(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:48:40.780 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:49:34.044 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:49:34.046 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:49:34.138 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:49:34.594 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:49:34.595 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:49:34.604 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 07:49:34.605 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:49:34.645 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:49:34.706 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:49:34.707 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:49:34.801 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:49:34.813 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:49:34.815 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:49:34.914 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:54:40.173 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:54:40.182 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 29(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:54:40.554 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:54:40.942 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 07:54:40.944 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 07:54:40.987 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 07:54:40.990 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 07:54:40.992 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 07:54:41.047 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:54:41.048 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:54:41.143 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 07:54:41.297 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 07:54:41.298 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 07:54:41.383 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:03:11.201 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:03:11.209 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 39(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:03:11.383 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:03:12.004 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:03:12.005 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:03:12.058 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:03:12.070 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:03:12.072 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:03:12.148 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 08:03:12.158 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:03:12.158 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:03:12.167 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:03:12.170 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 242(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:03:12.210 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:03:12.260 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:03:12.400 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:03:12.402 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 501(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:03:12.511 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:05:10.189 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:05:10.196 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:05:10.250 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 08:05:10.252 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:05:10.254 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:05:10.301 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:05:10.563 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:05:10.565 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 649(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:05:10.665 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:11:21.631 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:11:21.638 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 55(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:11:21.733 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:11:22.236 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:11:22.238 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:11:22.291 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:11:22.353 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:11:22.354 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 176(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:11:22.720 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:12:23.434 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:12:23.435 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:12:23.485 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 08:12:23.486 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:12:23.487 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:12:23.534 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:12:23.689 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:12:23.691 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 317(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:12:23.792 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:12:35.371 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:12:35.372 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:12:35.502 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:12:36.053 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:12:36.054 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:12:36.080 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:12:36.081 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:12:36.105 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:12:36.130 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 08:12:36.132 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:12:36.133 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:12:36.164 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:12:36.166 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 117(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:12:36.184 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:12:36.265 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:12:36.345 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:12:36.346 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 319(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:12:36.447 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:14:17.580 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:14:17.586 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:14:17.752 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:14:18.148 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:14:18.149 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:14:18.198 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:14:18.213 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:14:18.214 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:14:18.253 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:14:18.254 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:14:18.276 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:14:18.277 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:14:18.278 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:14:18.327 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:14:18.365 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:14:20.743 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:14:20.745 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 312(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:14:20.843 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:17:51.792 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:17:51.793 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:17:51.842 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:17:51.843 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:17:51.844 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:17:51.891 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:17:52.035 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:17:52.037 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 327(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:17:52.128 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:22:26.137 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:22:26.138 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:22:26.293 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:22:26.295 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:22:26.295 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:22:26.386 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:22:26.542 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:22:26.543 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 570(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:22:26.654 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:23:17.190 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:23:17.196 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:23:17.502 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:23:17.504 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:23:17.504 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:23:17.549 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:23:17.701 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:23:17.703 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 862(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:23:17.794 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:26:31.355 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:26:31.358 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 10(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:26:31.487 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:26:32.125 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:26:32.127 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:26:32.133 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:26:32.134 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:26:32.176 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:26:32.181 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:26:32.183 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:26:32.184 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:26:32.235 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:26:32.235 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:26:32.236 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 128(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:26:32.333 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:26:32.426 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:26:32.428 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 342(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:26:32.520 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:28:12.954 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:28:12.955 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:28:13.047 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:28:13.471 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:28:13.472 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:28:13.527 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:28:13.592 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:28:13.594 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:28:13.688 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:28:13.836 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:28:13.838 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:28:13.889 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:28:13.917 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:28:13.918 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:28:13.969 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:28:14.120 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:28:14.132 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 338(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:28:14.223 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:29:07.921 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:29:07.922 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:29:08.157 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:29:08.511 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:29:08.512 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:29:08.535 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:29:08.537 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:29:08.560 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:29:08.584 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:29:08.585 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:29:08.587 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:29:08.614 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:29:08.616 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:29:08.638 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:29:08.712 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:29:08.810 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:29:08.812 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 316(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:29:08.905 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:30:05.358 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:30:05.361 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:30:05.455 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:05.491 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:30:05.494 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:30:05.760 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:06.071 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:30:06.072 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 937(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:30:06.373 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:30:19.791 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:30:19.794 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:30:19.994 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:19.995 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:30:19.996 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:30:20.041 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:20.192 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:30:20.193 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 532(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:30:20.285 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:30:28.807 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:30:28.809 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:30:28.907 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:30:29.243 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:30:29.244 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:30:29.590 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:30:29.606 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:30:29.607 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:30:29.644 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:30:29.645 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 403(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:30:29.656 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:29.658 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:30:29.659 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:30:29.705 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:30:29.736 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:30:29.843 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:30:29.845 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 293(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:30:30.194 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:24.672 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:24.678 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 33(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:24.775 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:25.171 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:34:25.172 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:34:25.222 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:34:25.236 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:34:25.237 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:25.274 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:25.275 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:25.292 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:25.293 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:25.294 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:25.351 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:25.393 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:25.900 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:25.902 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 706(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:25.996 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:30.105 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 order by created_time asc limit ?, ? 
2020-05-25 08:34:30.115 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:30.161 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:30.161 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:30.161 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:30.211 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:30.373 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:30.375 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null)], params={}, sortColumn=created_time, sortMethod=asc)](String), 1(Integer), null, POST(String), 316(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:30.468 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:31.591 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 order by created_time desc limit ?, ? 
2020-05-25 08:34:31.591 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:31.641 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:31.641 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:31.671 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:31.721 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:32.231 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:32.231 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 333(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:32.331 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:35.790 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 order by update_time desc limit ?, ? 
2020-05-25 08:34:35.800 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:35.840 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:35.840 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:35.850 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:35.890 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:36.030 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:36.040 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 280(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:36.130 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:38.541 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:34:38.541 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:38.590 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:38.590 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:38.590 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:38.640 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:38.800 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:38.800 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 281(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:38.900 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:34:44.331 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 order by update_time desc limit ?, ? 
2020-05-25 08:34:44.331 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:34:44.411 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:34:44.421 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:34:44.421 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:34:44.481 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:34:44.741 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:34:44.741 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null)], params={}, sortColumn=update_time, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 440(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"}],"pageSize":10,"params":{},"sortColumn":"update_time","sortMethod":"desc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:34:44.851 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:04.173 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:04.182 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 43(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:38:04.279 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:04.738 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:38:04.739 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:38:04.789 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:38:04.791 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:38:04.792 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:38:04.836 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:38:04.988 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:04.989 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 306(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","enable":1,"updateTime":"2020-05-25 00:34:23"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:38:04.995 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:38:04.996 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:38:05.041 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:38:05.086 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:05.100 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:05.102 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:38:05.202 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:24.964 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 08:38:24.966 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 08:38:25.019 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 08:38:25.098 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:25.101 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/3(String), [3](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 312(Long), {"code":20000,"data":{"aboutContent":"24354656","aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-05-25 00:34:23","updateTime":"2020-05-25 00:34:23","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:38:25.202 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:30.608 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.deleteById.debug:159 -==>  Preparing: update bl_about set deleted=1 where about_id=? 
2020-05-25 08:38:30.610 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.deleteById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 08:38:30.721 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.deleteById.debug:159 -<==    Updates: 1
2020-05-25 08:38:30.785 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:30.787 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/delete/3(String), [3](String), 1(Integer), null, DELETE(String), 293(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-05-25 08:38:30.884 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:38:31.372 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:38:31.372 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:38:31.416 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:38:31.426 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:38:31.426 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:38:31.476 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:38:31.636 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:38:31.636 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:14:16, version=null, enable=1, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:34:13, version=null, enable=1, deleted=null), About(aboutId=3, aboutTitle=测试3, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:23, updateTime=2020-05-25 00:34:23, version=null, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 321(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":1,"updateTime":"2020-05-25 00:14:16"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":1,"updateTime":"2020-05-25 00:34:13"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:38:31.735 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:40:12.835 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:40:12.837 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:40:12.930 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:40:13.308 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:40:13.309 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:40:13.345 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:40:13.346 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:40:13.355 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:40:13.393 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:40:13.394 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:40:13.395 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:40:13.425 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:40:13.427 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 129(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:40:13.440 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:40:13.517 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:40:13.616 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:40:13.616 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 340(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:40:13.706 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:43:24.094 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:43:24.101 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 53(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:43:24.199 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:43:24.913 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:43:24.915 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:43:24.964 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:43:24.967 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:43:24.968 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:43:25.275 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:43:25.278 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:43:25.279 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:43:25.325 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:43:25.380 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:43:25.381 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 206(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:43:25.458 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:43:25.460 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 561(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:43:25.475 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:43:25.554 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:43:28.456 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 08:43:28.459 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 08:43:28.509 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 08:43:28.573 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:43:28.576 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, POST(String), 142(Long), {"code":20000,"data":{"aboutContent":"12344","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 00:40:00","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:43:28.668 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:04.617 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:04.620 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 10(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:04.723 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:05.318 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:45:05.320 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:45:05.349 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:45:05.351 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:45:05.367 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:45:05.399 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:45:05.403 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:45:05.405 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:45:05.425 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:05.426 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:05.453 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:45:05.521 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:05.603 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:05.605 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 304(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:05.703 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:56.561 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:56.563 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:56.656 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:57.130 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:45:57.133 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:45:57.179 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:45:57.237 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:57.238 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:57.523 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:45:57.524 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:45:57.569 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:45:57.570 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:45:57.571 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:45:57.589 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:45:57.616 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:45:58.024 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:45:58.025 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 322(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:45:58.217 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:46:01.062 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 08:46:01.064 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 08:46:01.110 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 08:46:01.179 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:46:01.181 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 125(Long), {"code":20000,"data":{"aboutContent":"12344","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 00:40:00","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:46:01.276 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:47:02.597 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:47:02.600 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:47:02.695 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:47:03.213 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:47:03.214 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:47:03.270 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:47:03.271 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:47:03.272 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:47:03.317 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:47:03.472 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:47:03.472 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 295(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:47:03.475 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:47:03.477 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:47:03.524 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:47:03.562 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:47:03.582 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:47:03.583 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:47:03.676 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:49:25.327 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title,about_content) values( ?,? ) 
2020-05-25 08:49:25.329 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: null, <p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>(String)
2020-05-25 08:49:25.745 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:49:25.747 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=null, aboutContent=<p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:49:25.935 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:49:53.006 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title,about_content) values( ?,? ) 
2020-05-25 08:49:53.006 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 关于稽哥(String), <p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>(String)
2020-05-25 08:49:53.176 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:49:53.176 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=关于稽哥, aboutContent=<p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:49:53.266 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:51:44.822 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title,about_content) values( ?,? ) 
2020-05-25 08:51:44.824 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 关于稽哥(String), <p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>(String)
2020-05-25 08:51:45.000 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:51:45.002 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=关于稽哥, aboutContent=<p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:51:45.093 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:02.132 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:54:02.134 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:54:02.273 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:02.718 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:54:02.719 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:54:02.770 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:54:02.781 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:54:02.783 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:54:02.831 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 08:54:02.832 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:54:02.833 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:54:02.834 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:54:02.834 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 117(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:54:02.879 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:54:02.935 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:03.027 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:54:03.029 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 301(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:54:03.373 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:30.233 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.save.debug:159 -==>  Preparing: insert into bl_about(about_title,about_content) values( ?,? ) 
2020-05-25 08:54:30.243 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.save.debug:159 -==> Parameters: 关于稽哥(String), <p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>(String)
2020-05-25 08:54:30.423 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:30.513 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:54:30.513 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/save(String), [About(aboutId=null, aboutTitle=关于稽哥, aboutContent=<p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>, aboutRead=null, createdTime=null, updateTime=null, version=null, enable=null, deleted=null)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 326(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-05-25 08:54:30.603 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:54:30.801 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:54:30.804 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:54:30.852 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:54:30.854 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:54:30.855 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:54:30.901 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:54:31.063 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:54:31.065 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:40:00, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:39:48, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 303(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:54:31.157 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:57:36.449 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:57:36.451 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:57:36.550 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:57:37.346 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 08:57:37.348 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 08:57:37.400 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 08:57:37.401 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 08:57:37.402 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 08:57:37.457 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 08:57:37.592 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 08:57:37.593 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 08:57:37.605 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:57:37.606 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 311(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 00:40:00"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:57:37.642 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 08:57:37.700 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 08:57:37.702 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 08:57:37.704 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 08:57:37.799 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:00:58.335 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:00:58.335 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 09:00:58.387 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:00:58.495 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:00:58.495 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 132(Long), {"code":20000,"data":{"aboutContent":"12344","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 00:40:00","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:00:58.585 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:01:24.182 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:01:24.182 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 09:01:24.279 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:01:24.333 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:01:24.333 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 228(Long), {"code":20000,"data":{"aboutContent":"12344","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 00:40:00","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:01:24.433 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:01:47.472 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateById.debug:159 -==>  Preparing: update bl_about set version=version+1 ,about_title = ? ,about_content = ? where about_id = ? and version = ? 
2020-05-25 09:01:47.472 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateById.debug:159 -==> Parameters: 修改后的测试(String), <p>12344鸡哥6666</p>(String), 1(Integer), 1(Integer)
2020-05-25 09:01:47.581 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateById.debug:159 -<==    Updates: 1
2020-05-25 09:01:47.638 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:01:47.638 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/update(String), [About(aboutId=1, aboutTitle=修改后的测试, aboutContent=<p>12344鸡哥6666</p>, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:40:00, version=1, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 180(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 09:01:47.728 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:01:48.249 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:01:48.250 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:01:48.305 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:01:48.309 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:01:48.313 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:01:48.366 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:01:48.516 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:01:48.526 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 00:40:00, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:39:48, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=关于稽哥, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:54:33, updateTime=2020-05-25 00:54:33, version=null, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 330(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:01:48.621 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:01:54.492 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:01:54.493 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 09:01:54.588 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:01:54.696 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:01:54.696 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), null, POST(String), 272(Long), {"code":20000,"data":{"aboutContent":"<p>12344鸡哥6666</p>","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 01:01:50","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:01:54.796 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:08:43.058 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 09:08:43.059 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:08:43.154 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 7
2020-05-25 09:08:43.157 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 09:08:43.158 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:08:43.216 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:08:43.365 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:08:43.365 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 360(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":7,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:08:43.465 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:08:47.961 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:08:47.962 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264357690636476416(String)
2020-05-25 09:08:48.055 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:08:48.108 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:08:48.110 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264357690636476416(String), [1264357690636476416](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 147(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>标记清除算法<br />概念<br />该算法有两个阶段。</p>\n<p>1. 标记阶段：找到所有可访问的对象，做个标记。</p>\n<p>2. 清除阶段：遍历堆，把未被标记的对象回收</p>\n<p>缺点：会产生碎片，不够连贯</p>\n<p>应用场景<br />该算法一般应用于老年代,因为老年代的对象生命周期比较长。</p>\n<p>优缺点<br />标记清除算法的优点和缺点</p>\n<p>1. 优点</p>\n<p>- 是可以解决循环引用的问题</p>\n<p>- 必要时才回收(内存不足时)</p>\n<p>2. 缺点：</p>\n<p>- 回收时，应用需要挂起，也就是stop the world。</p>\n<p>- 标记和清除的效率不高，尤其是要扫描的对象比较多的时候</p>\n<p>- 会造成内存碎片(会导致明明有内存空间,但是由于不连续,申请稍微大一些的对象无法做到)</p>\n<p>复制算法<br />概念<br />如果jvm使用了coping算法，一开始就会将可用内存分为两块，from域和to域， 每次只是使用from域，to域则空闲着。当from域内存不够了，开始执行GC操作，这个时候，会把from域存活的对象拷贝到to域,然后直接把from域进行内存清理。</p>\n<p>应用场景<br />coping算法一般是使用在新生代中，因为新生代中的对象一般都是朝生夕死的，存活对象的数量并不多，这样使用coping算法进行拷贝时效率比较高。jvm将Heap 内存划分为新生代与老年代，又将新生代划分为Eden(伊甸园) 与2块Survivor Space(幸存者区) ,然后在Eden &ndash;&gt;Survivor Space 以及From Survivor Space 与To Survivor Space 之间实行Copying 算法。 不过jvm在应用coping算法时，并不是把内存按照1:1来划分的，这样太浪费内存空间了。一般的jvm都是8:1。也即是说,Eden区:From区:To区域的比例是</p>\n<p>始终有90%的空间是可以用来创建对象的,而剩下的10%用来存放回收后存活的对象。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>1、当Eden区满的时候,会触发第一次young gc,把还活着的对象拷贝到Survivor From区；当Eden区再次触发young gc的时候,会扫描Eden区和From区域,对两个区域进行垃圾回收,经过这次回收后还存活的对象,则直接复制到To区域,并将Eden和From区域清空。</p>\n<p>2、当后续Eden又发生young gc的时候,会对Eden和To区域进行垃圾回收,存活的对象复制到From区域,并将Eden和To区域清空。</p>\n<p>3、可见部分对象会在From和To区域中复制来复制去,如此交换15次(由JVM参数MaxTenuringThreshold决定,这个参数默认是15),最终如果还是存活,就存入到老年代</p>\n<p>注意:&nbsp;万一存活对象数量比较多，那么To域的内存可能不够存放，这个时候会借助老年代的空间。</p>\n<p>优缺点<br />优点:在存活对象不多的情况下，性能高，能解决内存碎片和java垃圾回收算法之-标记清除 中导致的引用更新问题。</p>\n<p>缺点:&nbsp;会造成一部分的内存浪费。不过可以根据实际情况，将内存块大小比例适当调整；如果存活对象的数量比较大，coping的性能会变得很差。</p>\n<p>标记压缩算法<br />标记清除算法和标记压缩算法非常相同，但是标记压缩算法在标记清除算法之上解决内存碎片化</p>\n<p>概念</p>\n<p><br />&nbsp;</p>\n<p>压缩算法简单介绍</p>\n<p>任意顺序 : 即不考虑原先对象的排列顺序，也不考虑对象之间的引用关系，随意移动对象；</p>\n<p>线性顺序 : 考虑对象的引用关系，例如a对象引用了b对象，则尽可能将a和b移动到一块；</p>\n<p>滑动顺序 : 按照对象原来在堆中的顺序滑动到堆的一端。</p>\n<p>优缺点<br />优点:解决内存碎片问题，缺点压缩阶段，由于移动了可用对象，需要去更新引用。</p>\n<p>分代算法<br />概述<br />这种算法，根据对象的存活周期的不同将内存划分成几块，新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。可以用抓重点的思路来理解这个算法。</p>\n<p>新生代对象朝生夕死,对象数量多，只要重点扫描这个区域，那么就可以大大提高垃圾收集的效率。另外老年代对象存储久，无需经常扫描老年代，避免扫描导致的开销。</p>\n<p>新生代<br />在新生代，每次垃圾收集器都发现有大批对象死去，只有少量存活，采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；可以参看我之前写的java垃圾回收算法之-coping复制</p>\n<p>老年代<br />而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须&ldquo;标记－清除-压缩&rdquo;算法进行回收。参看java垃圾回收算法之-标记_清除压缩</p>\n<p>新创建的对象被分配在新生代，如果对象经过几次回收后仍然存活，那么就把这个对象划分到老年代。</p>\n<p>老年代区存放Young区Survivor满后触发minor GC后仍然存活的对象，当Eden区满后会将存活的对象放入Survivor区域，如果Survivor区存不下这些对象，GC收集器就会将这些对象直接存放到Old区中，如果Survivor区中的对象足够老，也直接存放到Old区中。如果Old区满了，将会触发Full GC回收整个堆内存。</p>\n<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>","blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","blogType":1,"createdTime":"2020-05-24 00:49:00","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:08:48.205 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:09:25.618 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:09:25.620 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264357690636476416(String)
2020-05-25 09:09:25.723 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:09:25.790 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:09:25.792 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264357690636476416(String), [1264357690636476416](String), 1(Integer), null, POST(String), 180(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>标记清除算法<br />概念<br />该算法有两个阶段。</p>\n<p>1. 标记阶段：找到所有可访问的对象，做个标记。</p>\n<p>2. 清除阶段：遍历堆，把未被标记的对象回收</p>\n<p>缺点：会产生碎片，不够连贯</p>\n<p>应用场景<br />该算法一般应用于老年代,因为老年代的对象生命周期比较长。</p>\n<p>优缺点<br />标记清除算法的优点和缺点</p>\n<p>1. 优点</p>\n<p>- 是可以解决循环引用的问题</p>\n<p>- 必要时才回收(内存不足时)</p>\n<p>2. 缺点：</p>\n<p>- 回收时，应用需要挂起，也就是stop the world。</p>\n<p>- 标记和清除的效率不高，尤其是要扫描的对象比较多的时候</p>\n<p>- 会造成内存碎片(会导致明明有内存空间,但是由于不连续,申请稍微大一些的对象无法做到)</p>\n<p>复制算法<br />概念<br />如果jvm使用了coping算法，一开始就会将可用内存分为两块，from域和to域， 每次只是使用from域，to域则空闲着。当from域内存不够了，开始执行GC操作，这个时候，会把from域存活的对象拷贝到to域,然后直接把from域进行内存清理。</p>\n<p>应用场景<br />coping算法一般是使用在新生代中，因为新生代中的对象一般都是朝生夕死的，存活对象的数量并不多，这样使用coping算法进行拷贝时效率比较高。jvm将Heap 内存划分为新生代与老年代，又将新生代划分为Eden(伊甸园) 与2块Survivor Space(幸存者区) ,然后在Eden &ndash;&gt;Survivor Space 以及From Survivor Space 与To Survivor Space 之间实行Copying 算法。 不过jvm在应用coping算法时，并不是把内存按照1:1来划分的，这样太浪费内存空间了。一般的jvm都是8:1。也即是说,Eden区:From区:To区域的比例是</p>\n<p>始终有90%的空间是可以用来创建对象的,而剩下的10%用来存放回收后存活的对象。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>1、当Eden区满的时候,会触发第一次young gc,把还活着的对象拷贝到Survivor From区；当Eden区再次触发young gc的时候,会扫描Eden区和From区域,对两个区域进行垃圾回收,经过这次回收后还存活的对象,则直接复制到To区域,并将Eden和From区域清空。</p>\n<p>2、当后续Eden又发生young gc的时候,会对Eden和To区域进行垃圾回收,存活的对象复制到From区域,并将Eden和To区域清空。</p>\n<p>3、可见部分对象会在From和To区域中复制来复制去,如此交换15次(由JVM参数MaxTenuringThreshold决定,这个参数默认是15),最终如果还是存活,就存入到老年代</p>\n<p>注意:&nbsp;万一存活对象数量比较多，那么To域的内存可能不够存放，这个时候会借助老年代的空间。</p>\n<p>优缺点<br />优点:在存活对象不多的情况下，性能高，能解决内存碎片和java垃圾回收算法之-标记清除 中导致的引用更新问题。</p>\n<p>缺点:&nbsp;会造成一部分的内存浪费。不过可以根据实际情况，将内存块大小比例适当调整；如果存活对象的数量比较大，coping的性能会变得很差。</p>\n<p>标记压缩算法<br />标记清除算法和标记压缩算法非常相同，但是标记压缩算法在标记清除算法之上解决内存碎片化</p>\n<p>概念</p>\n<p><br />&nbsp;</p>\n<p>压缩算法简单介绍</p>\n<p>任意顺序 : 即不考虑原先对象的排列顺序，也不考虑对象之间的引用关系，随意移动对象；</p>\n<p>线性顺序 : 考虑对象的引用关系，例如a对象引用了b对象，则尽可能将a和b移动到一块；</p>\n<p>滑动顺序 : 按照对象原来在堆中的顺序滑动到堆的一端。</p>\n<p>优缺点<br />优点:解决内存碎片问题，缺点压缩阶段，由于移动了可用对象，需要去更新引用。</p>\n<p>分代算法<br />概述<br />这种算法，根据对象的存活周期的不同将内存划分成几块，新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。可以用抓重点的思路来理解这个算法。</p>\n<p>新生代对象朝生夕死,对象数量多，只要重点扫描这个区域，那么就可以大大提高垃圾收集的效率。另外老年代对象存储久，无需经常扫描老年代，避免扫描导致的开销。</p>\n<p>新生代<br />在新生代，每次垃圾收集器都发现有大批对象死去，只有少量存活，采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；可以参看我之前写的java垃圾回收算法之-coping复制</p>\n<p>老年代<br />而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须&ldquo;标记－清除-压缩&rdquo;算法进行回收。参看java垃圾回收算法之-标记_清除压缩</p>\n<p>新创建的对象被分配在新生代，如果对象经过几次回收后仍然存活，那么就把这个对象划分到老年代。</p>\n<p>老年代区存放Young区Survivor满后触发minor GC后仍然存活的对象，当Eden区满后会将存活的对象放入Survivor区域，如果Survivor区存不下这些对象，GC收集器就会将这些对象直接存放到Old区中，如果Survivor区中的对象足够老，也直接存放到Old区中。如果Old区满了，将会触发Full GC回收整个堆内存。</p>\n<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>","blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","blogType":1,"createdTime":"2020-05-24 00:49:00","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:09:25.884 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:10:07.943 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:10:07.946 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264357690636476416(String)
2020-05-25 09:10:08.039 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:10:08.097 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:10:08.099 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264357690636476416(String), [1264357690636476416](String), 1(Integer), null, POST(String), 170(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>标记清除算法<br />概念<br />该算法有两个阶段。</p>\n<p>1. 标记阶段：找到所有可访问的对象，做个标记。</p>\n<p>2. 清除阶段：遍历堆，把未被标记的对象回收</p>\n<p>缺点：会产生碎片，不够连贯</p>\n<p>应用场景<br />该算法一般应用于老年代,因为老年代的对象生命周期比较长。</p>\n<p>优缺点<br />标记清除算法的优点和缺点</p>\n<p>1. 优点</p>\n<p>- 是可以解决循环引用的问题</p>\n<p>- 必要时才回收(内存不足时)</p>\n<p>2. 缺点：</p>\n<p>- 回收时，应用需要挂起，也就是stop the world。</p>\n<p>- 标记和清除的效率不高，尤其是要扫描的对象比较多的时候</p>\n<p>- 会造成内存碎片(会导致明明有内存空间,但是由于不连续,申请稍微大一些的对象无法做到)</p>\n<p>复制算法<br />概念<br />如果jvm使用了coping算法，一开始就会将可用内存分为两块，from域和to域， 每次只是使用from域，to域则空闲着。当from域内存不够了，开始执行GC操作，这个时候，会把from域存活的对象拷贝到to域,然后直接把from域进行内存清理。</p>\n<p>应用场景<br />coping算法一般是使用在新生代中，因为新生代中的对象一般都是朝生夕死的，存活对象的数量并不多，这样使用coping算法进行拷贝时效率比较高。jvm将Heap 内存划分为新生代与老年代，又将新生代划分为Eden(伊甸园) 与2块Survivor Space(幸存者区) ,然后在Eden &ndash;&gt;Survivor Space 以及From Survivor Space 与To Survivor Space 之间实行Copying 算法。 不过jvm在应用coping算法时，并不是把内存按照1:1来划分的，这样太浪费内存空间了。一般的jvm都是8:1。也即是说,Eden区:From区:To区域的比例是</p>\n<p>始终有90%的空间是可以用来创建对象的,而剩下的10%用来存放回收后存活的对象。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>1、当Eden区满的时候,会触发第一次young gc,把还活着的对象拷贝到Survivor From区；当Eden区再次触发young gc的时候,会扫描Eden区和From区域,对两个区域进行垃圾回收,经过这次回收后还存活的对象,则直接复制到To区域,并将Eden和From区域清空。</p>\n<p>2、当后续Eden又发生young gc的时候,会对Eden和To区域进行垃圾回收,存活的对象复制到From区域,并将Eden和To区域清空。</p>\n<p>3、可见部分对象会在From和To区域中复制来复制去,如此交换15次(由JVM参数MaxTenuringThreshold决定,这个参数默认是15),最终如果还是存活,就存入到老年代</p>\n<p>注意:&nbsp;万一存活对象数量比较多，那么To域的内存可能不够存放，这个时候会借助老年代的空间。</p>\n<p>优缺点<br />优点:在存活对象不多的情况下，性能高，能解决内存碎片和java垃圾回收算法之-标记清除 中导致的引用更新问题。</p>\n<p>缺点:&nbsp;会造成一部分的内存浪费。不过可以根据实际情况，将内存块大小比例适当调整；如果存活对象的数量比较大，coping的性能会变得很差。</p>\n<p>标记压缩算法<br />标记清除算法和标记压缩算法非常相同，但是标记压缩算法在标记清除算法之上解决内存碎片化</p>\n<p>概念</p>\n<p><br />&nbsp;</p>\n<p>压缩算法简单介绍</p>\n<p>任意顺序 : 即不考虑原先对象的排列顺序，也不考虑对象之间的引用关系，随意移动对象；</p>\n<p>线性顺序 : 考虑对象的引用关系，例如a对象引用了b对象，则尽可能将a和b移动到一块；</p>\n<p>滑动顺序 : 按照对象原来在堆中的顺序滑动到堆的一端。</p>\n<p>优缺点<br />优点:解决内存碎片问题，缺点压缩阶段，由于移动了可用对象，需要去更新引用。</p>\n<p>分代算法<br />概述<br />这种算法，根据对象的存活周期的不同将内存划分成几块，新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。可以用抓重点的思路来理解这个算法。</p>\n<p>新生代对象朝生夕死,对象数量多，只要重点扫描这个区域，那么就可以大大提高垃圾收集的效率。另外老年代对象存储久，无需经常扫描老年代，避免扫描导致的开销。</p>\n<p>新生代<br />在新生代，每次垃圾收集器都发现有大批对象死去，只有少量存活，采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；可以参看我之前写的java垃圾回收算法之-coping复制</p>\n<p>老年代<br />而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须&ldquo;标记－清除-压缩&rdquo;算法进行回收。参看java垃圾回收算法之-标记_清除压缩</p>\n<p>新创建的对象被分配在新生代，如果对象经过几次回收后仍然存活，那么就把这个对象划分到老年代。</p>\n<p>老年代区存放Young区Survivor满后触发minor GC后仍然存活的对象，当Eden区满后会将存活的对象放入Survivor区域，如果Survivor区存不下这些对象，GC收集器就会将这些对象直接存放到Old区中，如果Survivor区中的对象足够老，也直接存放到Old区中。如果Old区满了，将会触发Full GC回收整个堆内存。</p>\n<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>","blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","blogType":1,"createdTime":"2020-05-24 00:49:00","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:10:08.196 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:12:20.479 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:12:20.479 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365258452664320(String)
2020-05-25 09:12:20.559 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:12:20.609 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:12:20.619 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264365258452664320(String), [1264365258452664320](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), POST(String), 249(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>前言<br />今天在水群的过程中看到有位群员谈论到这个话题，是他找工作过程中某家公司的面试题（到底是哪家公司才会出这种没营养的题目刁难别人），有点兴趣，就开始写了。</p>\n<p>开搞<br />想了一下，其实就是题目怪了一点，难度其实并不高。这个题目让我想起了前两年看到的题目，只给你加法，怎么计算加减乘除（都说了到底是哪家公司才会出这种没营养的题目）。相比起来，这题好歹是考了计算机中的加法器，而本文主题中谈论的题目则真的是毫无营养。</p>\n<p>思路其实很明显，位运算，这类题目一般都是要用位运算的。这里需要使用到无符号右移。</p>\n<p>首先，既然不允许直接比较，那我就相减嘛，a-b结果是0就是相等，结果是负数就是a小，结果是正数那就是a大。</p>\n<p>当然这里是不能直接比较结果的正负的， 这样依然不符合提议，怎么办呢。</p>\n<p>一切的运算在计算机中都是二进制，数字也是用二进制表示的，而二进制表示数字的时候，最高位是代表符号位，1是负数，0是正数，传统的int最高32位。因此我们只需要判断第32位的结果是0还是1就能判断谁大谁小。直接判断第32位肯定不现实，这里就需要使用到无符号右移运算符&ldquo;&gt;&gt;&gt;&rdquo;。举个简单的例子，下面这串二进制只需要无符号右移31位，就可以得到最高位的值</p>\n<p>1000 0010 1101 0100 1101 0001 0010 0011<br />无符号右移31位后<br />0000 0000 0000 0000 0000 0000 0000 0001<br />结果显而易见，最高位降到了最低位，其余位全部变成了0，因此，只要结果是负数，那么进行 &gt;&gt;&gt;31 之后的结果转为十进制就是1，否则为0。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/105409625</p>","blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","blogType":1,"createdTime":"2020-05-24 01:19:04","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:12:20.709 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:12:27.398 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:12:27.400 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264363719424188416(String)
2020-05-25 09:12:27.491 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:12:27.544 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:12:27.545 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264363719424188416(String), [1264363719424188416](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 177(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>首先明确原码、反码、补码的概念</p>\n<p>计算机系统中，数值一律用补码来表示：因为补码可以使符号位和数值位统一处理，同时可以使减法按照加法来处理。</p>\n<p>对补码做简单介绍：数值编码分为原码，反码，补码，符号位均为0正1负。</p>\n<p>原码 -&gt; 补码： 数值位取反加1</p>\n<p>补码 -&gt; 原码： 对该补码的数值位继续 取反加1</p>\n<p>补码 的绝对值（称为真值）：正数的真值就是本身，负数的真值是各位（包括符号位）取反加1（即变成原码并把符号位取反）.</p>\n<p>&nbsp;</p>\n<p>加法：<br />将一个整数用二进制表示，其加法运算就是：相异或（^）时，本位为1，进位为0；同为1时本位为0，进位为1；同为0时，本位进位均为0.</p>\n<p>所以，不计进位的和为sum = a^b，进位就是c&nbsp;= a&amp;b,(与sum相加时先左移一位，因为这是进位）。完成加法直到进位为0.</p>\n<p>public static void main(String[] args) {<br />add(11, 12);<br />}<br /><br />private static int add(Integer a, Integer b) {<br /><br />Integer sum = 0;<br />while (b != 0) {<br />//a与b无进位相加<br />sum = a ^ b;<br />b = (a &amp; b) &lt;&lt; 1;<br />a = sum;<br />}<br />return sum;<br />}<br /><br />运算过程<br />a = 11 = 1011<br />b = 12 = 1100<br /><br />1. sum = a ^ b = 1011 ^ 1100 = 00111<br />2. b = (a &amp; b) &lt;&lt; 1 = ( 1011 &amp; 1100 ) &lt;&lt; 1 = 10000<br />3. a = sum = 00111<br />4. b != 0<br />5. sum = a ^ b = 00111 ^ 10000 = 10111<br />6. b = (a &amp; b) &lt;&lt; 1 = ( 00111 &amp; 10000 ) &lt;&lt; 1 = 000000<br />7. a = sum = 10111<br />8. b == 0 break;<br />9. sum = 10111 = 23<br />sum = a ^ b 应该很好理解，1 + 1 =0 ； 1 + 0 = 1 ； 0 + 0 = 0;</p>\n<p>比较难理解的是 b = (a &amp; b) &lt;&lt; 1 ； a&amp;b之后得到的就是进位情况，1011 &amp; 1100 =》 1000 即 a+b 在最高为产生了进位，由于是进位给前一位，所以还需要左移一位。（看不懂就自己写两道题）</p>\n<p>&nbsp;</p>\n<p>减法：<br />a-b&nbsp; = a+(-b) ，所以我们要先对b取相反数，再相加。求相反数就需要先将各位取反后+1；</p>\n<p>5 -&gt;&nbsp;0....0101&nbsp; -取反-&gt;&nbsp;1.....1010 -+1-&gt;&nbsp;1....1011 -&gt;-5</p>\n<p>取反后再用加法加起来即可。</p>\n<p>/**<br />* 求相反数：将各位取反加一<br />*/<br />private static int negative(int num) <br />{<br />return add(~num, 1);<br />}<br />/**<br />* 减法<br />*/<br />private static int Minus(int a, int b) {<br />return add(a, negative(b));<br />}<br />&nbsp;</p>\n<p>乘法：<br />乘法：原理上还是通过加法计算。将b个a相加，注意下面实际的代码。</p>\n<p>//乘法<br />private static int multi(int a, int b) {<br />//将乘数和被乘数都取绝对值　<br />int multiplicand = a &lt; 0 ? add(~a, 1) : a;<br />int multiplier = b &lt; 0 ? add(~b, 1) : b;<br /><br />int res = 0;<br />// 判断multiplier 任何数*0=0<br />while (multiplier != 0) {<br />//判断 multiplier 是不是 奇数<br />if ((multiplier &amp; 1) != 0) {<br />// 如果是奇数 则加上一次multiplicand本身<br />res = add(res, multiplicand);<br />}<br />// multiplicand * 2<br />multiplicand &lt;&lt;= 1;<br />// multiplier / 2<br />multiplier &gt;&gt;&gt;= 1;<br />}<br />//计算乘积的符号　　<br />if ((a ^ b) &lt; 0) {<br />res = add(~res, 1);<br />}<br />return res;<br />}<br />debug跑两遍就能理解精髓，就是当 multiplier 是偶数时，则每次让 multiplicand * 2 直到 multiplier / 2 = 0时。当b时奇数是，先加上单独的那个 multiplicand，再重复 multiplier 为偶数的步骤。</p>\n<p>我们举个例子</p>\n<p>&nbsp;</p>\n<p>multiplicand=10， multiplier = 5 答案自然是50 。</p>\n<p>我们来看看核心步骤</p>\n<p>&nbsp;multiplier 是奇数&nbsp;则先加上当前的 multiplicand，res = 10；<br />&nbsp;multiplicand &lt;&lt; 1 = 20;&nbsp;multiplier &gt;&gt;&gt; 1 = 2; (这里应该看出了一些感觉了)<br />&nbsp;multiplier 是偶数 if为false，则 multiplicand &lt;&lt; 1&nbsp;= 40;&nbsp; multiplier&gt;&gt;&gt;1 = 1;&nbsp;<br />&nbsp;multiplier 是奇数 res + multiplicand&nbsp; = 50; multiplicand &lt;&lt; 1 = 80 ;&nbsp;multiplier&gt;&gt;&gt;1 = 0;<br />&nbsp;循环结束 res = 50；<br />&nbsp;</p>\n<p>正数除法：<br />计算机是一个二元的世界，所有的int型数据都可以用[2^0, 2^1,...,2^31]这样一组基来表示（int型最高31位）。</p>\n<p>不难想到用除数的2^31,2^30,...,2^2,2^1,2^0倍尝试去减被除数，如果减得动，则把相应的倍数加到商中；如果减不动，则依次尝试更小的倍数。这样就可以快速逼近最终的结果。</p>\n<p>private static int divide(int a,int b) {<br />// 先取被除数和除数的绝对值<br />int dividend = a &gt; 0 ? a : add(~a, 1);<br />int divisor = b &gt; 0 ? a : add(~b, 1);<br />int quotient = 0;// 商<br />int remainder = 0;// 余数<br />for(int i = 31; i &gt;= 0; i--) {<br />// 比较dividend是否大于divisor的(1&lt;&lt;i)次方，不要将dividend与(divisor&lt;&lt;i)比较，<br />// 而是用(dividend&gt;&gt;i)与divisor比较，<br />// 效果一样，但是可以避免因(divisor&lt;&lt;i)操作可能导致的溢出，<br />// 如果溢出则会可能dividend本身小于divisor，但是溢出导致dividend大于divisor<br />if((dividend &gt;&gt; i) &gt;= divisor) {<br />quotient = add(quotient, 1 &lt;&lt; i);<br />dividend = minus(dividend, divisor &lt;&lt; i);<br />}<br />}<br />// 确定商的符号<br />if((a ^ b) &lt; 0){<br />// 如果除数和被除数异号，则商为负数<br />quotient = add(~quotient, 1);<br />}<br />// 确定余数符号<br />remainder = b &gt; 0 ? dividend : add(~dividend, 1);<br />System.out.println(\"余数：\"+ remainder);<br />// 返回商<br />return quotient;<br />}<br />这个应该很好理解。</p>\n<p>&nbsp;<br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「大誌」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/weixin_42236404/article/details/100590592</p>","blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","blogType":1,"createdTime":"2020-05-24 01:12:57","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:12:27.641 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:12:38.114 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:12:38.114 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264365631460507648(String)
2020-05-25 09:12:38.294 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:12:38.354 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:12:38.354 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264365631460507648(String), [1264365631460507648](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 237(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>前言<br />最近对App开发比较感兴趣，因原生学习起来成本可能较大，就把目光转向了大前端的跨端开发技术。说到跨端开发，那么选择空间就是Flutter、RN、uniapp这几个了。</p>\n<p>flutter最近比较热闹，毕竟是谷歌出品。但我们不是炒作热点的媒体，也不是忽悠你交学费的培训机构，我们作为实际的跨平台开发者，冷静的分析下这个东东。</p>\n<p>flutter是Google为Fuchsia操作系统设计的应用开发方式。</p>\n<p>Fuchsia OS要兼容廉价物联网设备，要求对硬件的消耗降低，并且为了避免与oracle的java打官司，Fuchsia 使用了dart语言+flutter界面库的方式。</p>\n<p>从设计上来看，这套方案的性能确实够高。dart虽然属于大前端范畴，但dart是和java一样的强类型语言，这让dart虚拟机可以做很多优化，性能方面超出了js。</p>\n<p>dart曾经与typescript竞争，谁才是更好的js？但不幸输给了typescript，chrome也放弃了内置dart虚拟机的计划。</p>\n<p>不过dart团队没有解散，几年后，他们借助flutter，再次出现在公众面前。</p>\n<p>性能分析和写法的对比<br />flutter作为界面库（注意它只是界面库，dart语言是另一个项目），它唯一要干的事情就是渲染界面。不像HTML5，flutter界面库连视频、定位等都没有，就是一个纯排版引擎，绘制文字、按钮、图片等常用界面控件。</p>\n<p>这个排版引擎的特点是简单、高性能。</p>\n<p>在3大主流渲染引擎里，webview、react native/weex、flutter，复杂度依次降低，渲染性能依次上升。（uni-app是双渲染引擎，webview和weex都内置了，随便开发者使用切换）</p>\n<p>所以我们要清楚，提升性能是有代价的，你究竟想要灵活丰富的css3，还是想要固定flex模式排版，抑或是最简单但高性能的flutter排版？开发便利性和运行性能不可兼得。</p>\n<p>同时我们要明白，性能的差别，并不是因为Google的chrome团队、Android团队的技术比同公司的flutter团队差。而是flutter提供的布局写法是被限制过的，解析快，所以渲染快。</p>\n<p>但通过这种方式提升性能的代价，就是布局复杂的界面时，flutter的代码嵌套的让人崩溃。</p>\n<p>我们先举个例子，同样的界面，用HTML和flutter如何实现：</p>\n<p>&lt;div class=\"greybox\"&gt; <br />&lt;div class=redbox&gt; <br />smaple text <br />&lt;/div&gt; <br />&lt;/div&gt; <br /><br />.greybox { <br />display: flex; <br />align-items: center; <br />justify-content: center; <br />background-color: #e0e0e0; /* grey 300 */ <br />width: 320px; <br />height: 240px; <br />font: 18px <br />} <br />.redbox { <br />background-color: #ef5350; /* red 400 */ <br />padding: 16px; <br />color: #ffffff <br />} <br />var container = new Container( // grey box <br />child: new Center( <br />child: new Container( // red box <br />child: new Text( <br />\"smaple text\", <br />style: new TextStyle( <br />color: Colors.white, <br />fontSize: 18.0, <br />), <br />), <br />decoration: new BoxDecoration( <br />color: Colors.red[400], <br />), <br />padding: new EdgeInsets.all(16.0), <br />), <br />), <br />width: 320.0, <br />height: 240.0, <br />color: Colors.grey[300], <br />); <br />可以看出，从代码的写法来说，flutter没有tag和样式的说法，更没有选择器，从头到尾只有dart语言，它的界面控件是用dart代码new出来的，每个控件的样式，是在new的时候设置的json参数。</p>\n<p>如果我们要嵌套布局，就要不停的在dart里写child，同时在dart里给child们设样式参数。上面的代码，只是嵌套了1层，实际开发中，dom要嵌套好多层，想象那样的代码。。。所以大家都诟病dart是&ldquo;嵌套地狱&rdquo;。</p>\n<p>或者，你可以这么理解，这是一个只有js，没有html和css的浏览器。你需要用js createElement来创建元素，用js的style方法给每个element设style，反正就是不能写html和css代码。前端都已经发展到各种mvc等视图逻辑分离的架构了，也有了vue组件这种组件化模式方便用各种轮子快速完成界面。你是否能适应dart这种低效的界面开发模式？从开发模式来讲，这确实是一种倒退。</p>\n<p>浏览器的html提供了tag和样式分离的写法，还有各种各样的选择器，但其实这也是有代价的。它导致webview初始化时要同时先启动webkit排版引擎来解析这些编写随性的html、css，同时还要启动一个js引擎比如v8或jscore来解析里面的js。</p>\n<p>而dart就很简单，只启动一个dart引擎，解析严格的dart语法，它不会去操心有些标签未闭合要如何容错，不会判断宽度320后面是px还是rem或者是动态计算百分比。</p>\n<p>对比这2个引擎初始化时要干的事，差别简直太大了。</p>\n<p>所以从解析效率上，flutter肯定比webview要高。但从编码灵活性上，flutter写的代码，嗯，难看而低效！</p>\n<p>flutter使用的也是flex布局思想，这是一个强嵌套布局模型，比web常规排版引擎的嵌套更多。当界面复杂时，flutter的代码要嵌套几十层，每层的元素的json样式都和元素一起混写在dart代码里，让人崩溃。</p>\n<p>有人提出是否可以通过一种预编译的dsl来简化写法，让flutter的开发不这么痛苦。</p>\n<p>但这个难度太大了，从严格转换为松散是简单的，从松散转换为严格几乎是不可能的。</p>\n<p>什么意思呢？比如flutter代码转换web代码，是很简单的，flutter已经自带了这个功能。但是想反过来，那可难了。</p>\n<p>类似的还有，把typescript转为js是容易的，反之，不是绝对不可行，但会复杂到你宁愿去重写一套typescript代码。</p>\n<p>flutter的性能高，除了简单严格，还有一个特点，就是逻辑层与视图层统一，运行在同一套dart虚拟机下。</p>\n<p>我们知道rn和weex，也是原生渲染的，它们的性能高于webview。但同为原生渲染的，怎么会慢于flutter呢？其实不是原生渲染慢，而是js和原生通信慢。</p>\n<p>rn和weex都采用了独立的js引擎（iOS是jscore，Android是v8，最新版rn开始在Android上搞自己的js引擎），从js与dart的比较上，性能稍逊一筹。但这不是主要问题，主要问题是，rn、weex的js引擎和原生渲染层是两个运行环境。</p>\n<p>当js引擎联网获取到数据后，通知原生视图层更新界面时，有一个跨环境的通信折损。同样，当用户在屏幕上操作原生视图层时，要给js引擎发送通知，也会产生这个通信折损。</p>\n<p>不过这种性能差别，在大多数场景中，用户是感受不到的。比较影响的场景，是跟手式的js响应操作绘制帧动画。</p>\n<p>这方面，weex有个值得称赞的技术是BindingX，它可以预定义规则，让用户界面在原生层交互时通过预定义规则直接响应，而无需传递给js层。在需要短时间内来回通信的场景时，可以使用BindingX这类解决方案。它的性能和灵活性比rn更强了一些。</p>\n<p>说回来flutter，它只有一个dart引擎，没有来回通信产生的性能问题。不过任何事情都是有利有弊的，flutter在普通的界面绘制上效率虽然高，但一旦涉及原生的界面，反而会遇到更多问题。</p>\n<p>前面已经说过，flutter只是一个基础排版引擎，缺少很多能力，当我们需要在flutter界面上内嵌一个原生的视频播放扩展控件时（flutter没有视频播放能力），或者原生的高德地图sdk，那么在拖动视频进度时、拖动地图时，flutter一样会产生原生和dart之间的通信，造成性能损耗。</p>\n<p>事实上，由于flutter是在一个类canvas环境绘制的，想把一个原生控件嵌入flutter的布局里某些元素之间去排版，还不是一件容易做到的事情，坑很多。</p>\n<p>每个人都想要一个像css3那样灵活写法的布局引擎，他们给react native和weex提需求，给flutter提需求。殊不知，让这些产品团队实现了css3时，他们的性能优势已经不再了，他们相当于又实现了一遍webview。这种无意义的需求，他们是不会受理了。</p>\n<p>性能好，有个度，客观地讲，rn/weex调用原生渲染的性能，和flutter的渲染性能，在用户体验上并没有明显区别，甚至在很多场景下，和webview渲染的小程序也没有明显区别。</p>\n<p>也简单说说webview渲染小程序，为什么性能高，核心是预载。点击一个新页面时，webview是提前创建好的，不会走复杂的webkit、v8的初始化流程，连开发者的js代码，也是预载好的。所以点击新页面时，它的渲染速度和原生应用没什么差别。当然也有个坏处，就是启动慢。微信里启动小程序速度看着还行，其实是微信在启动小程序之前，就已经提前初始化了小程序运行环境。</p>\n<p>即便是排版引擎，ui库好用吗？<br />不管是rn还是flutter，有一个设计，很不中国化。它们在iOS和Android平台上，使用2套ui库。</p>\n<p>比如flutter，在iOS上写一个button，要用CupertinoButton，是iOS风格的控件，在Android上则要用RaisedButton，是Material风格的控件。</p>\n<p>rn也是如此，它的官方说法是：learn once，write anywhere。它都不敢说：write once，run anywhere。因为它确实要求开发者写2套代码。</p>\n<p>中国的开发者可没有这种习惯，中国的每个开发者，为了避免用户换手机后不会用自己的app，都会使用中性的设计。</p>\n<p>就连微信Android版，底部的tab也是仿iOS而不是Material风格（Material风格是把底tab放在顶部的，并且左右滑动，微信曾经有这样一个临时版本，因为被用户吐槽，很快就下掉了）。</p>\n<p>这种中外差异怎么造成的？</p>\n<p>国外Android手机，其手机主界面就是强烈的Material风格。用户在Android主界面习惯的风格和使用方式，如果启动一个App后不是这样，会导致用户不会用了。</p>\n<p>Google也一再给Android开发者强调，App必须使用Material风格。这其实也是一个防止用户切换脱离Android的策略设计。</p>\n<p>所以国外开发者的App，Android上都会遵循Material风格，当然，这种Material风格的App是上不了Apple的Appstore的。</p>\n<p>这就导致他们默认就是要写2套ui的，所以rn和flutter都是iOS、Android各自1套ui控件。</p>\n<p>但在中国，我们的国产Android Rom，根本不是Material风格，很多rom以仿iOS体验为卖点。</p>\n<p>所以中国的App，全都是贴近iOS的中性风格，中国的用户换了手机，不管是手机os本身，还是App的使用，都不会造成切换障碍。</p>\n<p>rn和flutter这种&ldquo;跨平台&rdquo;排版引擎，其跨平台性，对于中国开发者而言，又打了折扣。</p>\n<p>其实类似小程序那样的ui风格，是能够良好的跨iOS和Android的体验的，不管用什么手机，打开小程序都不会觉得有问题。</p>\n<p>uni-app默认也是这种通用ui风格。uni-app的开发者只需要写一套界面ui，就可以适应不同手机的用户，真正的 write once，run anywhere。</p>\n<p>动态性<br />webview、rn/weex，都有一个特点，可以远程动态载入js代码，可以更新本地的js代码。前端开发者认为动态性是天经地义的，但其实flutter并不支持。</p>\n<p>flutter是有编译优化概念的，如果它提供动态性支持，会影响它的性能。</p>\n<p>业内有些开发者，改造了flutter，用一个独立的v8/jscore来加载动态js代码，去操作flutter布局引擎的渲染。好像还有些人在追捧这样的方案，简直是闲得蛋疼。</p>\n<p>flutter本来没有跨环境通信的问题，结果又弄了一个js引擎进来搞出了通信问题，造成性能下降，还把包体积增加了很大，还不如直接用rn/weex。</p>\n<p>除了flutter，rn/weex/uni-app都可以动态热更新。</p>\n<p>跨平台排版引擎和跨平台应用开发引擎的区别<br />有些人说他们的App用rn/weex、flutter。但是具体用它们做了什么呢？</p>\n<p>是整个App用了它们，还是某个页面用了它们？</p>\n<p>一个页面跨平台，和一个应用跨平台，是完全不同的2个概念。</p>\n<p>webview、rn/weex、flutter全部是渲染引擎，webview因为HTML5的发展，还算是多了一些能力比如位置服务、多媒体等。而rn/weex、flutter真的只是一个纯粹的排版引擎，没有任何原生能力。</p>\n<p>如果一个原生应用里，某个不涉及原生能力的界面想跨平台，那么这几个引擎都可以，并且flutter的性能最高。所以能看到一些公司尝试把App中的个别原生交互较少页面使用flutter实现。</p>\n<p>但如果一个完整的应用，想用跨平台工具开发，那就不是排版引擎的范畴了，它需要应用开发引擎。</p>\n<p>什么是跨平台应用开发引擎？不但排版部分要跨平台，开发API也要跨平台。</p>\n<p>应用开发离不开os或三方sdk的能力调用，如果是单纯的排版引擎，一旦涉及os能力和sdk调用，就必须iOS、Android的工程师配合，编写不同的原生代码整合在一起。这就不跨平台了。</p>\n<p>Airbnb曾是React Native 框架的倡导者和开发者代表。但他们于2019年正式发公告，弃用了react native。</p>\n<p>原因是什么？</p>\n<p>很简单，react native并不能提升Airbnb的开发效率，反而降低了他们的效率。</p>\n<p>&ldquo;本来我们可以只维护Android和iOS两套代码，但现在我们要维护三套（指多了一套react native的js代码），这让我们很疲惫&rdquo; &ndash; aribnb</p>\n<p>开发者选用跨平台开发引擎，本来是为了提高效率、降低成本。Airbnb正是在实践了几年后，发现rn根本无法实现他选用跨平台引擎的初衷时，无奈放弃了rn，用原生开发重写。</p>\n<p>要想真的提升开发效率，降低开发成本，那么跨平台开发引擎，需要提供一个完整的应用开发平台，包含所有常用的应用开发能力的跨平台。在不常用的部分，提供插件市场以及免原生介入的插件使用方式。</p>\n<p>在react native、flutter的社区，也有不少三方提供的原生插件，但是连Airbnb这样的国外开发者对此都不满意。更何况对于很多中国开发者常用的场景，其对应的插件的质量、跨端性都难以商用。</p>\n<p>更麻烦的是如果你不会原生开发，就没法把这些插件与你的前端代码集成起来。</p>\n<p>uni-app，它的设计目标不是跨平台排版引擎，而是跨平台应用开发引擎。</p>\n<p>所以uni-app的排版部分，可以选择小程序强化webview引擎和weex引擎，可根据自己的需求切换。而能力层面，uni-app提供了htmlplus API、Native.js、插件市场，解决了原生能力js化的问题。</p>\n<p>uni-app让开发者真的不用懂原生开发就能做出完整的跨平台应用。遇到极个别的需求，开发者也可以去插件市场找人订做一个原生插件，自己仍然使用js来集成，仍然可以云端直接打包。</p>\n<p>技术学习成本和难度<br />rn，要求开发者学习react，要求精通flex布局，要求原生开发协作。</p>\n<p>flutter，要求开发者学习dart，了解dart和flutter的API、要求精通flex布局，要求原生开发协作。</p>\n<p>weex已经内嵌到uni-app中，就不单独提了。</p>\n<p>uni-app，要求开发者学习vue，了解小程序。</p>\n<p>很明显uni-app的学习成本太低了，它没有附加专有技术，全部使用公共技术。</p>\n<p>学习成本和难度，直接意味着：开发成本、招聘成本、上线速度、上线风险。</p>\n<p>另外，dart究竟值不值得学，是一个大问题。</p>\n<p>Google的天才工程师也发明了go语言，它确实有很多理论优势，但实际上市场的主流，仍然是c和c++。</p>\n<p>生态<br />任何开发引擎，都离不开生态。</p>\n<p>对于国外的开发者，rn、flutter的生态肯定比uni-app好，比如facebook登陆分享、Google地图等。</p>\n<p>但对于国内的开发者，那是反过来的，中国开发者需要的全端推送（UniPush集成了iOS、华为、小米、OPPO等众多原厂推送）、各种国内登陆、支付、分享SDK、各种国内地图、各种ui库、以及Echart图表等，都是在uni-app体系里，这方面生态可比rn、flutter丰富多了。</p>\n<p>其他端的跨端性<br />flutter和rn，都是支持web技术的。但都是仅限于普通界面排版，涉及定位、摄像头、相册什么的，是要单独写代码的。</p>\n<p>另外flutter的H5版，嗯，作为中国开发者，你不会想要一个如此浓郁的Material风格的H5版的。。。</p>\n<p>更何况这个Material ui库大的很，编译出来的H5版要十几M的体积。</p>\n<p>uni-app的H5端是包含完善的能力引擎的，丰富能力都可以直接跨端使用，风格也是跨端风格。uni-app的H5引擎体积只有1百K，gzip后只剩下30k（不含vue、vue rooter），比其他工具的引擎体积要小的多。</p>\n<p>另外，中国离不开小程序，rn、flutter官方都不会支持小程序，由于架构差异太大，国内三方也做不到把rn代码良好的编译为小程序代码。uni-app则可以一套代码，同时编译为iOS、Android、H5、微信小程序、支付宝小程序、百度小程序、头条小程序、QQ小程序。</p>\n<p>结论<br />每种技术的诞生，有其背后公司的目的。</p>\n<p>但凡没有明确公司战略的技术，除非是特别简单的技术，否则很难商用，因为为了商用要投入公司非常多资源。</p>\n<p>flutter诞生的目的，是为了Fuchsia OS，是为了在下一个互联网大潮，即万物互联的物联网年代，提供一个类似Android在移动互联网位置的垄断性操作系统。</p>\n<p>因为Google已经很明确不会在下一个时代使用Android+java的路线了。</p>\n<p>至于在Android上去java化，那是Kotlin的使命，与flutter无关。</p>\n<p>跨iOS和Android平台开发，这不是Google的战略目标。</p>\n<p>但万物互联何时到来？Fuchsia OS何时流行？这在现实中是一个问号，在Google内部，也只是战略储备项目。</p>\n<p>一个语言的流行，不是一件简单的事情，不是有优点，就会流行，它需要天时地利人和。</p>\n<p>6年前我们就知道dart比js更好，dart不应该消亡，但想成为主流技术，太难太难了。</p>\n<p>同样我们也知道go比c++更好，但go还是起不来。</p>\n<p>想靠flutter驱动dart流行是不现实的，甚至是反过来的。跨iOS、Android开发在国外不是主流市场，这点价值造就不出一个这么难建的生态。</p>\n<p>所以dart能否流行，是要打一个大大的问号的，它可能会像go语言一样，叫好不叫座。</p>\n<p>写了这么多，最后总结下flutter与uni-app的比较：</p>\n<p>flutter的相对优势：<br />性能好一丢丢。比rn有优势，但比拥有bindingx的weex/uni-app，在实际开发中没有很明显的差距。<br />flutter的相对劣势：<br />需要原生协作，维护3套代码，无法有效降低开发成本，提升开发效率<br />嵌套地狱，代码难看难维护<br />不支持热更新<br />目前质量和成熟度很低，github上的issue有5k+，很容易掉坑里<br />原生可视控件融合不好，比如webview、video、map<br />ui库不适合国情<br />学习成本高<br />dart未来扑朔迷离<br />再总结下rn和uni-app的比较</p>\n<p>rn的相对优势：<br />rn的坑虽然比weex的少，但uni-app已经填了weex的很多坑。这方面差别不大。<br />rn的生态虽然比weex丰富。但uni-app是反过来的，uni-app的国内应用生态丰富度超过了rn。<br />rn的app冷启动比uni-app快。这个问题uni-app已经内部改进完毕，下个版本发布就能解决。<br />rn是纯单页的，嵌入原生App比较灵活。而uni-app是应用整体的概念，如果要内嵌入其他原生应用的话，要求原生应用内嵌uni-app应用整体进来<br />rn的相对劣势：<br />需要原生协作，维护3套代码，无法有效降低开发成本，提升开发效率<br />不支持小程序，发布到h5也无法直接发<br />ui库不适合国情，learn once，write anywhere<br />学习成本高，用人成本高，不利于开发商降低开发成本<br />rn是纯单页应用，如果一个应用的页面很多，用rn写会很崩溃，变量污染和干扰严重。而weex/uni-app支持多页面，页面之间上下文隔离，写页面较多的大型应用更合适<br />另外react在中国的市场占有率远不如vue。这也是中国与国外不同的特色情况。</p>","blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","blogType":2,"createdTime":"2020-05-24 01:20:33","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:12:38.454 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:38.455 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:38.455 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7d6d2565](String), 0(Integer), com.github.tobato.fastdfs.exception.FdfsConnectException: 无法获取服务端连接资源：can't create connection to/39.97.183.122:23000
	at com.jg.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.jg.blog.controller.UploadController.uploadImage(UploadController.java:30)
	at com.jg.blog.controller.UploadController$$FastClassBySpringCGLIB$$4070d907.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UploadController$$EnhancerBySpringCGLIB$$3b9eab0f.uploadImage(<generated>)
Caused by: java.net.SocketTimeoutException: connect timed out
(String), POST(String), 0(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 09:14:38.555 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:48.922 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:48.932 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@65ff09e3](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 390(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 09:14:49.022 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:53.718 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:53.719 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1264726600279891968(String), 新生代与老年代(String), http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg(String), <p>Java 中的堆是 JVM 所管理的最大的一块内存空间，主要用于存放各种类的实例对象。</p>
<p>在 Java 中，堆被划分成两个不同的区域：新生代 ( Young )、老年代 ( Old )。其中新生代 ( Young ) 又被划分为三个区域：Eden、From Survivor、To Survivor。</p>
<p>这样划分的目的是为了使 JVM 能够更好的管理堆内存中的对象，包括内存的分配以及回收。</p>
<p>堆的内存模型大致为：</p>
<p><img src="https://img-blog.csdnimg.cn/20191117211513826.png" /></p>
<p>默认的，新生代 ( Young ) 与老年代 ( Old ) 的比例的值为&nbsp;1:2&nbsp;( 该值可以通过参数 &ndash;XX:NewRatio 来指定 )，即：新生代 ( Young ) = 1/3 的堆空间大小。老年代 ( Old ) = 2/3 的堆空间大小。其中，新生代 ( Young ) 被细分为 Eden 和 两个 Survivor 区域，这两个 Survivor 区域分别被命名为 from 和 to，以示区分。</p>
<p>默认的，Edem : from : to = 8 : 1 : 1&nbsp;( 可以通过参数 &ndash;XX:SurvivorRatio 来设定 )，即： Eden = 8/10 的新生代空间大小，from = to = 1/10 的新生代空间大小。</p>
<p>&nbsp;</p>
<p>根据垃圾回收机制的不同，Java堆有可能拥有不同的结构，最为常见的就是将整个Java堆分为</p>
<p>新生代和老年代。其中新生带存放新生的对象或者年龄不大的对象，老年代则存放老年对象。</p>
<p>新生代分为den区、s0区、s1区，s0和s1也被称为from和to区域，他们是两块大小相等并且可以互相角色的空间。</p>
<p>绝大多数情况下，对象首先分配在eden区，在新生代回收后，如果对象还存活，则进入s0或s1区，之后每经过一次</p>
<p>新生代回收，如果对象存活则它的年龄就加1，对象达到一定的年龄后（默认15），则进入老年代。</p>
<p>&nbsp;</p>
<p>新生代：存放刚出生不久的对象</p>
<p>老年代：存放比较活跃、经常被引用的对象</p>
<p>垃圾回收机制在新生代比较频繁</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/103113563</p>(String), 1(Integer), null, null
2020-05-25 09:14:53.812 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:53.869 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:53.871 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=, blogTitle=新生代与老年代, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg, blogContent=<p>Java 中的堆是 JVM 所管理的最大的一块内存空间，主要用于存放各种类的实例对象。</p>
<p>在 Java 中，堆被划分成两个不同的区域：新生代 ( Young )、老年代 ( Old )。其中新生代 ( Young ) 又被划分为三个区域：Eden、From Survivor、To Survivor。</p>
<p>这样划分的目的是为了使 JVM 能够更好的管理堆内存中的对象，包括内存的分配以及回收。</p>
<p>堆的内存模型大致为：</p>
<p><img src="https://img-blog.csdnimg.cn/20191117211513826.png" /></p>
<p>默认的，新生代 ( Young ) 与老年代 ( Old ) 的比例的值为&nbsp;1:2&nbsp;( 该值可以通过参数 &ndash;XX:NewRatio 来指定 )，即：新生代 ( Young ) = 1/3 的堆空间大小。老年代 ( Old ) = 2/3 的堆空间大小。其中，新生代 ( Young ) 被细分为 Eden 和 两个 Survivor 区域，这两个 Survivor 区域分别被命名为 from 和 to，以示区分。</p>
<p>默认的，Edem : from : to = 8 : 1 : 1&nbsp;( 可以通过参数 &ndash;XX:SurvivorRatio 来设定 )，即： Eden = 8/10 的新生代空间大小，from = to = 1/10 的新生代空间大小。</p>
<p>&nbsp;</p>
<p>根据垃圾回收机制的不同，Java堆有可能拥有不同的结构，最为常见的就是将整个Java堆分为</p>
<p>新生代和老年代。其中新生带存放新生的对象或者年龄不大的对象，老年代则存放老年对象。</p>
<p>新生代分为den区、s0区、s1区，s0和s1也被称为from和to区域，他们是两块大小相等并且可以互相角色的空间。</p>
<p>绝大多数情况下，对象首先分配在eden区，在新生代回收后，如果对象还存活，则进入s0或s1区，之后每经过一次</p>
<p>新生代回收，如果对象存活则它的年龄就加1，对象达到一定的年龄后（默认15），则进入老年代。</p>
<p>&nbsp;</p>
<p>新生代：存放刚出生不久的对象</p>
<p>老年代：存放比较活跃、经常被引用的对象</p>
<p>垃圾回收机制在新生代比较频繁</p>
<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>
<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/103113563</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=1, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 174(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-05-25 09:14:53.962 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:54.446 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 09:14:54.447 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:14:54.501 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 09:14:54.502 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 09:14:54.502 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:14:54.552 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:14:54.711 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:54.714 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=7, list=[BlogVo(blogId=1264357690636476416, blogTitle=垃圾回收算法, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:49:00, updateTime=2020-05-24 12:52:13), BlogVo(blogId=1264358056178458624, blogTitle=Mybatis源码阅读（五 ）：接口层——SqlSession, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:50:27, updateTime=2020-05-24 12:56:45), BlogVo(blogId=1264358089300877312, blogTitle=Mybatis源码阅读（五 ）：接口层——SqlSession, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:50:35, updateTime=2020-05-24 00:50:35), BlogVo(blogId=1264358511910559744, blogTitle=Java只使用位运算实现加减乘除, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:52:15, updateTime=2020-05-24 00:52:15), BlogVo(blogId=1264363719424188416, blogTitle=java进阶篇：用位运算实现加、减、乘、除, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:12:57, updateTime=2020-05-24 01:12:57), BlogVo(blogId=1264365258452664320, blogTitle=不使用比较运算符如何比较两个数的大小, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:19:04, updateTime=2020-05-24 01:19:04), BlogVo(blogId=1264365631460507648, blogTitle=Flutter、ReactNative、uniapp对比, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:20:33, updateTime=2020-05-24 01:20:33)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 300(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:14:54.810 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:14:59.627 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 09:14:59.629 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264726600279891968(String)
2020-05-25 09:14:59.679 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:14:59.742 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:14:59.744 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264726600279891968(String), [1264726600279891968](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 132(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>Java 中的堆是 JVM 所管理的最大的一块内存空间，主要用于存放各种类的实例对象。</p>\n<p>在 Java 中，堆被划分成两个不同的区域：新生代 ( Young )、老年代 ( Old )。其中新生代 ( Young ) 又被划分为三个区域：Eden、From Survivor、To Survivor。</p>\n<p>这样划分的目的是为了使 JVM 能够更好的管理堆内存中的对象，包括内存的分配以及回收。</p>\n<p>堆的内存模型大致为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20191117211513826.png\" /></p>\n<p>默认的，新生代 ( Young ) 与老年代 ( Old ) 的比例的值为&nbsp;1:2&nbsp;( 该值可以通过参数 &ndash;XX:NewRatio 来指定 )，即：新生代 ( Young ) = 1/3 的堆空间大小。老年代 ( Old ) = 2/3 的堆空间大小。其中，新生代 ( Young ) 被细分为 Eden 和 两个 Survivor 区域，这两个 Survivor 区域分别被命名为 from 和 to，以示区分。</p>\n<p>默认的，Edem : from : to = 8 : 1 : 1&nbsp;( 可以通过参数 &ndash;XX:SurvivorRatio 来设定 )，即： Eden = 8/10 的新生代空间大小，from = to = 1/10 的新生代空间大小。</p>\n<p>&nbsp;</p>\n<p>根据垃圾回收机制的不同，Java堆有可能拥有不同的结构，最为常见的就是将整个Java堆分为</p>\n<p>新生代和老年代。其中新生带存放新生的对象或者年龄不大的对象，老年代则存放老年对象。</p>\n<p>新生代分为den区、s0区、s1区，s0和s1也被称为from和to区域，他们是两块大小相等并且可以互相角色的空间。</p>\n<p>绝大多数情况下，对象首先分配在eden区，在新生代回收后，如果对象还存活，则进入s0或s1区，之后每经过一次</p>\n<p>新生代回收，如果对象存活则它的年龄就加1，对象达到一定的年龄后（默认15），则进入老年代。</p>\n<p>&nbsp;</p>\n<p>新生代：存放刚出生不久的对象</p>\n<p>老年代：存放比较活跃、经常被引用的对象</p>\n<p>垃圾回收机制在新生代比较频繁</p>\n<p>最后宣传一下技术交流群，如果你觉得该博客对你有帮助，不放动动手指加一下交流群。</p>\n<p><br />&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />版权声明：本文为CSDN博主「齐天大头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br />原文链接：https://blog.csdn.net/qq_36403693/article/details/103113563</p>","blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","blogType":1,"createdTime":"2020-05-25 01:14:56","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:14:59.838 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:15:59.178 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:15:59.180 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:15:59.226 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:15:59.228 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:15:59.229 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:15:59.277 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:15:59.441 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:15:59.441 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 296(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:15:59.528 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:16:02.230 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:16:02.230 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 09:16:02.278 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:16:02.333 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:16:02.334 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/2(String), [2](String), 1(Integer), null, POST(String), 104(Long), {"code":20000,"data":{"aboutContent":"123244","aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","updateTime":"2020-05-25 00:39:48","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:16:02.426 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:16:07.465 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:16:07.468 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-05-25 09:16:07.579 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:16:07.642 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:16:07.642 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/4(String), [4](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), POST(String), 347(Long), {"code":20000,"data":{"aboutContent":"<p>手作，是为複刻古人的情懷。 &mdash;&mdash;知其白<br /><br />古人是讲究的，什么时节，喝什么酒，哪一天酿下的酒，哪一天又开启。那般优雅，最是撩人。<br /><br />而现在，在这个功利横行、效率横行的世界，很多东西都已遗落。<br /><br />2013年的秋天，心里有了这样的一个念头，更重要的是，那个念头没有一闪而过。<br />我们抱着这样的信念，不断的继续向上，努力达到巅峰。<br />我们迷恋的不仅仅是手工制作，更多的是想要复刻古人的情怀。<br /><br />所以我们将酒壶重新设计，将包装将运输都用心去考虑，将每一个细节都追求极致，为的是客户拿到手上时的那一刻心情。<br /><br />在这里每一件事物都渗透着我们对这个世界的理解。<br />除却这些，还有的是一颗不断探索和雕琢的心！</p>","aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","updateTime":"2020-05-25 00:54:33","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:16:07.738 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:16:14.941 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:16:14.943 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 09:16:14.991 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:16:15.088 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:16:15.089 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 125(Long), {"code":20000,"data":{"aboutContent":"<p>12344鸡哥6666</p>","aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","updateTime":"2020-05-25 01:01:50","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:16:15.183 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:17:39.512 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:17:39.514 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:17:39.565 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:17:39.566 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:17:39.567 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:17:39.615 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:17:39.765 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:17:39.766 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 314(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:17:39.868 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:19:01.390 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:19:01.391 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:19:01.440 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:19:01.441 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:19:01.442 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:19:01.491 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:19:01.699 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:19:01.701 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsConnectException: 无法获取服务端连接资源：can't create connection to/39.97.183.122:23000
	at com.jg.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.jg.blog.controller.UploadController.uploadImage(UploadController.java:30)
	at com.jg.blog.controller.UploadController$$FastClassBySpringCGLIB$$4070d907.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UploadController$$EnhancerBySpringCGLIB$$3b9eab0f.uploadImage(<generated>)
Caused by: java.net.SocketTimeoutException: connect timed out
(String), POST(String), 305(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:19:01.822 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:19:30.338 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:19:30.352 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:19:30.405 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:19:30.407 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:19:30.408 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:19:30.454 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:19:30.598 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:19:30.599 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 384(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:19:30.707 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:19:34.223 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:19:34.224 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:19:34.316 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:19:34.708 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:19:34.709 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:19:34.723 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:19:34.724 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:19:34.757 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:19:34.794 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:19:34.796 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:19:34.797 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:19:34.811 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:19:34.813 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 144(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:19:34.842 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:19:34.909 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:19:35.035 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:19:35.037 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 337(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:19:35.129 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:21:45.795 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:21:45.797 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:21:46.259 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:21:46.602 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:21:46.603 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:21:46.651 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:21:46.659 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:21:46.661 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:21:46.705 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:21:46.709 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:21:46.711 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:21:46.728 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:21:46.706 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), GET(String), 127(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:21:46.779 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:21:46.828 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:21:46.919 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:21:46.920 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 341(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:21:47.010 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:25:59.658 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:25:59.658 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), GET(String), 11(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:25:59.755 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:00.038 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:26:00.039 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:26:00.093 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:26:00.173 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:26:00.173 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), GET(String), 118(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:26:00.267 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:50.696 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:26:50.698 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), com.github.tobato.fastdfs.exception.FdfsConnectException: 无法获取服务端连接资源：can't create connection to/39.97.183.122:23000
	at com.jg.blog.utils.UploadService.uploadImage(UploadService.java:44)
	at com.jg.blog.controller.UploadController.uploadImage(UploadController.java:30)
	at com.jg.blog.controller.UploadController$$FastClassBySpringCGLIB$$4070d907.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.UploadController$$EnhancerBySpringCGLIB$$3b9eab0f.uploadImage(<generated>)
Caused by: java.net.SocketTimeoutException: connect timed out
(String), GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:26:50.793 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:51.188 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:26:51.189 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:26:51.234 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:26:51.291 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:26:51.292 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 196(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:26:51.387 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:53.579 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:26:53.581 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:26:53.632 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:26:53.637 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:26:53.639 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:26:53.691 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:26:53.865 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:26:53.872 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 317(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:26:53.972 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:56.440 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 09:26:56.441 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:26:56.494 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 09:26:56.496 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 09:26:56.497 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:26:56.546 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:26:56.690 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:26:56.691 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 300(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:26:56.789 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:26:59.966 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:26:59.969 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:27:00.017 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:27:00.018 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:27:00.019 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:27:00.065 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:27:00.216 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:00.217 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 393(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:00.318 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:27:03.958 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable=1 and deleted=0 limit 1 
2020-05-25 09:27:03.958 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 09:27:04.009 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 09:27:04.181 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:04.182 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enabled/1(String), [1](String), 0(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:04.277 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:27:38.877 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:38.880 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:38.980 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:27:39.410 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:27:39.411 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:27:39.465 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:27:39.522 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:39.524 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:39.615 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:27:39.769 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:27:39.769 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:27:40.076 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:27:40.076 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:27:40.076 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:27:40.116 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:27:40.261 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:40.261 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLException: Field 'about_id' doesn't have a default value
; Field 'about_id' doesn't have a default value; nested exception is java.sql.SQLException: Field 'about_id' doesn't have a default value
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLException: Field 'about_id' doesn't have a default value
(String), POST(String), 554(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:40.468 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:27:45.393 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable=1 and deleted=0 limit 1 
2020-05-25 09:27:45.394 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 09:27:45.446 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 09:27:45.597 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:27:45.598 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enabled/2(String), [2](String), 0(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:27:45.696 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:30:08.174 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable=1 and deleted=0 limit 1 
2020-05-25 09:30:08.176 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 09:30:08.223 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 09:30:08.746 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:30:08.748 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enabled/1(String), [1](String), 0(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:30:08.832 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:32:04.291 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:32:04.293 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:32:04.390 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:32:04.698 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:32:04.699 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:32:04.747 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:32:04.761 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:32:04.763 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:32:04.814 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:32:04.817 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:32:04.819 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:32:04.822 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:32:04.824 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:32:04.865 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:32:04.916 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:32:05.024 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:32:05.026 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 322(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:32:05.118 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:06.380 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:33:06.382 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:33:06.433 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:33:06.435 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:33:06.436 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:33:06.483 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:33:06.643 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:06.647 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 322(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:06.744 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:10.654 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:10.655 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:10.752 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:11.251 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:33:11.252 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:33:11.300 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:33:11.301 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:33:11.302 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:33:11.349 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:33:11.503 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:11.504 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), POST(String), 301(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:11.573 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:33:11.574 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:33:11.614 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:11.620 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:33:11.684 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:11.685 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 128(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:11.777 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:14.416 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable=1 and deleted=0 limit 1 
2020-05-25 09:33:14.417 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 09:33:14.467 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 1
2020-05-25 09:33:14.618 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:14.620 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enabled/1(String), [1](String), 0(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:14.712 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:33:33.442 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:33:33.444 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:33:33.501 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:33:33.502 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:33:33.503 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:33:33.549 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:33:33.701 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:33:33.702 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), POST(String), 314(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 00:54:33"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:33:33.810 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:34:53.994 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:34:53.996 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-05-25 09:34:54.042 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:34:54.044 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version=version+1, enable=? where about_id=? and version=? 
2020-05-25 09:34:54.045 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 0(Integer), 4(Integer), 1(Integer)
2020-05-25 09:34:54.138 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-05-25 09:34:54.282 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:34:54.284 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/disabled/4(String), [4](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 377(Long), {"code":20000,"msg":"未启用"}(String), 127.0.0.1(String)
2020-05-25 09:34:54.375 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:34:54.818 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:34:54.819 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:34:54.865 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:34:54.868 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:34:54.869 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:34:54.914 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:34:55.083 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:34:55.088 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 01:01:50, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:39:48, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=关于稽哥, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:54:33, updateTime=2020-05-25 00:54:33, version=null, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 287(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":0,"updateTime":"2020-05-25 01:34:57"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:34:55.186 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:35:22.010 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:35:22.013 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:35:22.108 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:35:22.496 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 09:35:22.497 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 09:35:22.532 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:35:22.534 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:35:22.545 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 09:35:22.579 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:35:22.580 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:35:22.580 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:35:22.599 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:35:22.601 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":0,"typeId":1,"typeName":"java"},{"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:35:22.624 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:35:22.703 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:35:22.785 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:35:22.787 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
### The error may involve com.jg.blog.mapper.AboutMapper.getByPage-Inline
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
	at com.jg.blog.service.impl.AboutServiceImpl.getByPage(AboutServiceImpl.java:91)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.getByPage(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.getByPage(<generated>)
	at com.jg.blog.controller.AboutController.getByPage(AboutController.java:120)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.getByPage(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'field list'
(String), POST(String), 295(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":0,"updateTime":"2020-05-25 01:34:57"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:35:22.880 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:35:26.843 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable=1 and deleted=0 limit 1 
2020-05-25 09:35:26.844 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2020-05-25 09:35:26.947 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -<==      Total: 0
2020-05-25 09:35:26.949 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where about_id = ? and deleted = 0 
2020-05-25 09:35:26.951 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getById.debug:159 -==> Parameters: 4(Integer)
2020-05-25 09:35:27.004 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.getById.debug:159 -<==      Total: 1
2020-05-25 09:35:27.006 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -==>  Preparing: update bl_about set version=version+1, enable=? where about_id=? and version=? 
2020-05-25 09:35:27.007 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -==> Parameters: 1(Integer), 4(Integer), 2(Integer)
2020-05-25 09:35:27.089 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AboutMapper.updateEnable.debug:159 -<==    Updates: 1
2020-05-25 09:35:27.245 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:35:27.255 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/enabled/4(String), [4](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), PUT(String), 597(Long), {"code":20000,"msg":"已启用"}(String), 127.0.0.1(String)
2020-05-25 09:35:27.351 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:35:27.578 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:35:27.579 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:35:27.625 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:35:27.627 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:35:27.628 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:35:27.675 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:35:27.836 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:35:27.838 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[About(aboutId=1, aboutTitle=修改后的测试, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:14:16, updateTime=2020-05-25 01:01:50, version=null, enable=0, deleted=null), About(aboutId=2, aboutTitle=测试2, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:34:13, updateTime=2020-05-25 00:39:48, version=null, enable=0, deleted=null), About(aboutId=4, aboutTitle=关于稽哥, aboutContent=null, aboutRead=0, createdTime=2020-05-25 00:54:33, updateTime=2020-05-25 01:34:57, version=null, enable=0, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
### The error may involve com.jg.blog.mapper.AboutMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
; Column 'about_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
	at com.jg.blog.service.impl.AboutServiceImpl.save(AboutServiceImpl.java:32)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.save(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.save(<generated>)
	at com.jg.blog.controller.AboutController.save(AboutController.java:36)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'about_title' cannot be null
(String), POST(String), 370(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 01:35:29"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:35:27.932 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:37:50.093 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 09:37:50.093 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:37:50.202 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 09:37:50.202 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 09:37:50.202 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:37:50.253 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:37:50.441 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:37:50.444 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 554(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:37:50.536 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:38:00.368 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted=0 limit ?, ? 
2020-05-25 09:38:00.368 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:38:00.418 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-05-25 09:38:00.418 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-05-25 09:38:00.418 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:38:00.468 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:38:00.619 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:38:00.619 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), POST(String), 678(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"修改后的测试","createdTime":"2020-05-25 00:14:16","enable":0,"updateTime":"2020-05-25 01:01:50"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-05-25 00:34:13","enable":0,"updateTime":"2020-05-25 00:39:48"},{"aboutId":4,"aboutRead":0,"aboutTitle":"关于稽哥","createdTime":"2020-05-25 00:54:33","enable":1,"updateTime":"2020-05-25 01:35:29"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:38:00.717 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:38:02.290 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 09:38:02.291 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 09:38:02.347 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 09:38:02.352 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 09:38:02.358 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 09:38:02.407 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 09:38:02.907 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:38:02.968 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), POST(String), 325(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:38:03.068 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 09:38:15.218 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-05-25 09:38:15.221 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 09:38:15.268 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 6
2020-05-25 09:38:15.325 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 09:38:15.397 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), com.jg.blog.exception.BlogException: 当前已存在启用中的关于我的
	at com.jg.blog.service.impl.AboutServiceImpl.enabledById(AboutServiceImpl.java:70)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$abf814cb.enabledById(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$1a96acd7.enabledById(<generated>)
	at com.jg.blog.controller.AboutController.enabled(AboutController.java:89)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$96c712b7.enabled(<generated>)
(String), GET(String), 179(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":0,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":0,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 09:38:15.484 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:26:06.266 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 10:27:06.811 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 10:27:06.913 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 10:27:07.027 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 10:27:07.222 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:07.235 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 311(Long), {"code":20000,"data":{"token":"12A07F63982DEC46DF479274D843CBE5"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:07.326 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:07.511 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:07.514 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:07.605 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:08.318 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-05-25 10:27:08.319 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 10:27:08.320 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 10:27:08.321 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 10:27:08.375 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 6
2020-05-25 10:27:08.376 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 10:27:08.436 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:08.437 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 132(Long), {"code":20000,"data":[{"typeBlogCount":7,"typeId":1,"typeName":"java"},{"typeBlogCount":2,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:08.438 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:08.440 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":7,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:08.540 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:08.541 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:20.013 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:20.015 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:20.113 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:20.496 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-05-25 10:27:20.497 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 10:27:20.503 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 10:27:20.505 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 10:27:20.551 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 6
2020-05-25 10:27:20.559 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 10:27:20.608 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:20.610 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":7,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:20.615 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:20.617 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":[{"typeBlogCount":7,"typeId":1,"typeName":"java"},{"typeBlogCount":2,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:20.710 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:20.718 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:55.338 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 10:27:55.340 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 10:27:55.400 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 10:27:55.400 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 10:27:55.400 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 10:27:55.450 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 10:27:55.629 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:55.631 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 418(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"java","updateTime":"2020-05-24 12:56:45"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:55.730 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:27:58.413 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 10:27:58.413 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264358056178458624(String)
2020-05-25 10:27:58.537 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 10:27:58.604 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:27:58.608 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/get/1264358056178458624(String), [1264358056178458624](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>展开<br />SqlSession<br />SqlSession是Mybatis的核心接口之一，对外提供常用的数据库操作api。mybatis提供了两个SqlSession的实现，其中最常用的是DefaultSqlSession。</p>\n<p>SqlSession的代码如下</p>\n<p>/**<br />* 接口层，也是开发人员使用mybatis去操作sql所使用的主要的接口<br />*<br />* @author Clinton Begin<br />*/<br />public interface SqlSession extends Closeable {<br /><br />/**<br />* 查询sql单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement sql<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement);<br /><br />/**<br />* 指定sql并传入实参去查单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement, Object parameter);<br /><br />/**<br />* 执行sql查询多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement sql<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement);<br /><br />/**<br />* 指定sql并传入实参去查多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter);<br /><br />/**<br />* 使用预编译的sql，指定传入的实参以及结果集范围<br />* 查询指定范围的所有数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 执行sql，返回map对象<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, String mapKey);<br /><br />/**<br />* 指定sql和实参，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey);<br /><br />/**<br />* 指定sql、实参、范围，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 将查询结果通过此处的ResultHandler对象封装成对应的对象<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement<br />* using a {@code ResultHandler}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement key and parameter<br />* using a {@code ResultHandler} and {@code RowBounds}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler);<br /><br />/**<br />* 执行insert<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement);<br /><br />/**<br />* Execute an insert statement with the given parameter object. Any generated<br />* autoincrement values or selectKey entries will modify the given parameter<br />* object properties. Only the number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement, Object parameter);<br /><br />/**<br />* 执行update<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement);<br /><br />/**<br />* Execute an update statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement, Object parameter);<br /><br />/**<br />* 执行delete<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement);<br /><br />/**<br />* Execute a delete statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement, Object parameter);<br /><br />/**<br />* 提交事务<br />*/<br />void commit();<br /><br />/**<br />* Flushes batch statements and commits database connection.<br />*<br />* @param force forces connection commit<br />*/<br />void commit(boolean force);<br /><br />/**<br />* 回滚事务<br />*/<br />void rollback();<br /><br />/**<br />* Discards pending batch statements and rolls database connection back.<br />* Note that database connection will not be rolled back if no updates/deletes/inserts were called.<br />*<br />* @param force forces connection rollback<br />*/<br />void rollback(boolean force);<br /><br />/**<br />* 将请求刷新到数据库<br />*<br />* @return BatchResult list of updated records<br />* @since 3.0.6<br />*/<br />List&lt;BatchResult&gt; flushStatements();<br /><br />/**<br />* 关闭SqlSession<br />*/<br />@Override<br />void close();<br /><br />/**<br />* 清空 缓存<br />*/<br />void clearCache();<br /><br />/**<br />* Retrieves current configuration.<br />*<br />* @return Configuration<br />*/<br />Configuration getConfiguration();<br /><br />/**<br />* 使用type获取对应的Mapper<br />*<br />* @param &lt;T&gt; the mapper type<br />* @param type Mapper interface class<br />* @return a mapper bound to this SqlSession<br />*/<br />&lt;T&gt; T getMapper(Class&lt;T&gt; type);<br /><br />/**<br />* 获取该SqlSession对应的数据库连接<br />*<br />* @return Connection<br />*/<br />Connection getConnection();<br />}<br />DefaultSqlSession<br />在mybatis单独使用的时候，DefaultSqlSession是最常使用的SqlSession实现。DefaultSqlSession核心字段如下，其中已经过多介绍的类将不再注释。</p>\n<p><br />private final Configuration configuration;<br />private final Executor executor;<br /><br />/**<br />* 是否自动提交事务<br />*/<br />private final boolean autoCommit;<br /><br />/**<br />* 当前缓存是否有脏数据<br />*/<br />private boolean dirty;<br />DefaultSqlSession中使用到了策略模式（不知道策略模式的请看我以前的帖子）。DefaultSqlSession扮演了上下文，只是通过executor字段的不同，而选择不同的Executor去操作数据库。</p>\n<p>DefaultSqlSession为每种SQL操作都提供了大量的重载，对于不同的参数都提供了一个重载方法， 便于开发者去调用。这里只贴出核心的方法，对于重载方法将不进行介绍。</p>\n<p>* 根据sql和实参查询一条数据<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @param &lt;T&gt;<br />* @return<br />*/<br />@Override<br />public &lt;T&gt; T selectOne(String statement, Object parameter) {<br />// 调用selectList查询多条<br />List&lt;T&gt; list = this.selectList(statement, parameter);<br />// 如果查询到的数据长度1是或者0就正常，否则抛出异常<br />if (list.size() == 1) {<br />return list.get(0);<br />} else if (list.size() &gt; 1) {<br />// 这里的异常信息是不是很熟悉呢<br />throw new TooManyResultsException(\"Expected one result (or null) to be returned by selectOne(), but found: \" + list.size());<br />} else {<br />return null;<br />}<br />}<br /><br />/**<br />* 查询结果封装成map返回<br />* 阅读源码发现，这里的selectMap貌似并不是将结果集按照属性映射成map<br />* 而是把map当做list去使用。<br />* 查询出多条数据，使用不同的key去封装到map<br />* 这里的V应该是这一条数据映射的对象，或者是Map&lt;String, Object&gt;<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @param &lt;K&gt;<br />* @param &lt;V&gt;<br />* @return<br />*/<br />@Override<br />public &lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {<br />// 查询列表<br />final List&lt;? extends V&gt; list = selectList(statement, parameter, rowBounds);<br />// 创建Map返回集处理器<br />final DefaultMapResultHandler&lt;K, V&gt; mapResultHandler = new DefaultMapResultHandler&lt;&gt;(mapKey,<br />configuration.getObjectFactory(), configuration.getObjectWrapperFactory(), configuration.getReflectorFactory());<br />final DefaultResultContext&lt;V&gt; context = new DefaultResultContext&lt;&gt;();<br />for (V o : list) {<br />// 暂存一下当前结果对象<br />context.nextResultObject(o);<br />// 处理上下文中的结果对象<br />mapResultHandler.handleResult(context);<br />}<br />// 将map返回回去<br />return mapResultHandler.getMappedResults();<br />}<br /><br />/**<br />* 根据传入的sql、实参、查询范围去查询一个列表<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @param &lt;E&gt;<br />* @return<br />*/<br />@Override<br />public &lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.query(ms, wrapCollection(parameter), rowBounds, Executor.NO_RESULT_HANDLER);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error querying database. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 根据sql、实参、范围查询<br />* 将查询结果交给指定的ResultHandler去处理<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />@Override<br />public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />executor.query(ms, wrapCollection(parameter), rowBounds, handler);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error querying database. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public int update(String statement, Object parameter) {<br />try {<br />dirty = true;<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.update(ms, wrapCollection(parameter));<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error updating database. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void commit(boolean force) {<br />try {<br />// 提交事务。提交之后将dirty设为false<br />// 此时的缓存中视为没有脏数据<br />executor.commit(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error committing transaction. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void rollback(boolean force) {<br />try {<br />executor.rollback(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error rolling back transaction. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public List&lt;BatchResult&gt; flushStatements() {<br />try {<br />return executor.flushStatements();<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error flushing statements. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />代码比较简单，就不做过多的介绍。</p>\n<p>DefaultSqlSessionFactory<br />DefaultSqlSessionFactory是一个工厂类，提供了两种创建DefaultSqlSession的方式，一种是通过数据源创建SqlSession，一种是通过用户传入的数据库连接对象来创建SqlSession。另外代码里有大量的openSession都是用于创建SqlSession对象的，但是其实现都是基于这两种方式，因此这里只把两种创建SqlSession的方式的代码贴出来，如下。</p>\n<p>/**<br />* 通过数据源去创建SqlSession<br />* @param execType<br />* @param level<br />* @param autoCommit<br />* @return<br />*/<br />private SqlSession openSessionFromDataSource(ExecutorType execType, TransactionIsolationLevel level, boolean autoCommit) {<br />Transaction tx = null;<br />try {<br />// 获取environment。这个是mybatis中配置的环境<br />final Environment environment = configuration.getEnvironment();<br />// 根据环境去获取TransactionFactory对象<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />// 创建Transaction对象<br />tx = transactionFactory.newTransaction(environment.getDataSource(), level, autoCommit);<br />// 创建Executor对象<br />final Executor executor = configuration.newExecutor(tx, execType);<br />// 创建DefaultSqlSession<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />closeTransaction(tx);<br />// may have fetched a connection so lets call close()<br />throw ExceptionFactory.wrapException(\"Error opening session. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 通过用户提供的Connection对象去创建<br />* @param execType<br />* @param connection<br />* @return<br />*/<br />private SqlSession openSessionFromConnection(ExecutorType execType, Connection connection) {<br />try {<br />boolean autoCommit;<br />try {<br />autoCommit = connection.getAutoCommit();<br />} catch (SQLException e) {<br />// Failover to true, as most poor drivers<br />// or databases won't support transactions<br />autoCommit = true;<br />}<br />final Environment environment = configuration.getEnvironment();<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />final Transaction tx = transactionFactory.newTransaction(connection);<br />final Executor executor = configuration.newExecutor(tx, execType);<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException(\"Error opening session. Cause: \" + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />SqlSessionManager<br />SqlSessionManager同时实现了SqlSession接口和SQLSessionFactory接口，因此它拥有操作数据库的能力以及创建SqlSession的功能。</p>\n<p>SQLSessionManager核心字段如下</p>\n<p>private final SqlSessionFactory sqlSessionFactory;<br /><br />/**<br />* localSqlSession中记录的SqlSession对象的代理对象<br />*/<br />private final SqlSession sqlSessionProxy;<br /><br />/**<br />* 记录当前线程的SqlSession对象<br />*/<br />private final ThreadLocal&lt;SqlSession&gt; localSqlSession = new ThreadLocal&lt;&gt;();<br />其中ThreadLocal的作用往往是作为当前线程的上下文，可以为当前线程提供全局变量。对ThreadLocal不了解的朋友也请查看我以前的文章。</p>\n<p>SqlSessionManager提供了两种模式。一种是同一线程每次通过SqlSessionManager对象访问数据库时，都会创建一个DefaultSqlSession对象完成数据库操作，另一种则是使用localSqlSession绑定当前线程的SqlSession，在当前线程中循环使用同一个SqlSession。后者使用往往居多，这也是大家经常说的&ldquo;SqlSession与线程绑定 ，每个请求都会创建SqlSession&rdquo;的原因。</p>\n<p>sqlSessionProxy是一个代理对象，在SqlSessionmanager的构造方法中使用JDK的动态代理创建完成，代码如下。</p>\n<p>private SqlSessionManager(SqlSessionFactory sqlSessionFactory) {<br />this.sqlSessionFactory = sqlSessionFactory;<br />// 使用动态代理去创建 SqlSession<br />this.sqlSessionProxy = (SqlSession) Proxy.newProxyInstance(<br />SqlSessionFactory.class.getClassLoader(),<br />new Class[]{SqlSession.class},<br />new SqlSessionInterceptor());<br />}<br />SqlSessionManager中实现的SqlSession 接口方法，都是直接调用sqlSessionProxy字段记录的SqlSession代理对象的方法实现的。在创建该代理对象时使用到的SqlSessionInterceptor是SqlSessionManager的内部类，代码如下。</p>\n<p>private class SqlSessionInterceptor implements InvocationHandler {<br />public SqlSessionInterceptor() {<br />// Prevent Synthetic Access<br />}<br /><br />@Override<br />public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<br />// 获取当前线程的SqlSession<br />final SqlSession sqlSession = SqlSessionManager.this.localSqlSession.get();<br />if (sqlSession != null) {<br />try {<br />// SqlSession不为空就调用真正的SqlSession去完成数据库的操作<br />return method.invoke(sqlSession, args);<br />} catch (Throwable t) {<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />} else {<br />try (SqlSession autoSqlSession = openSession()) {<br />// 如果当前线程的SqlSession为空，就创建新的SqlSession对象<br />try {<br />// 使用创建的SqlSession对象完成数据库操作<br />final Object result = method.invoke(autoSqlSession, args);<br />// 提交事务<br />autoSqlSession.commit();<br />return result;<br />} catch (Throwable t) {<br />autoSqlSession.rollback();<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />}<br />}<br />}<br />}<br />总结<br />SqlSession是单体mybatis使用最多的一个接口，可能我们在整合SSM之后就看不到这个接口了，但是其底层实现的时候也是会创建SqlSession的，虽然这个比较简单，但是也是相当重要的一个模块。</p>","blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","blogType":1,"createdTime":"2020-05-24 00:50:27","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:27:58.715 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:28:06.744 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2020-05-25 10:28:06.744 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1264358056178458624(String)
2020-05-25 10:28:06.854 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2020-05-25 10:28:06.874 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-05-25 10:28:06.874 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: Mybatis源码阅读（五 ）：接口层——SqlSession(String), http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png(String), <p>展开<br />SqlSession<br />SqlSession是Mybatis的核心接口之一，对外提供常用的数据库操作api。mybatis提供了两个SqlSession的实现，其中最常用的是DefaultSqlSession。</p>
<p>SqlSession的代码如下</p>
<p>/**<br />* 接口层，也是开发人员使用mybatis去操作sql所使用的主要的接口<br />*<br />* @author Clinton Begin<br />*/<br />public interface SqlSession extends Closeable {<br /><br />/**<br />* 查询sql单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement sql<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement);<br /><br />/**<br />* 指定sql并传入实参去查单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement, Object parameter);<br /><br />/**<br />* 执行sql查询多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement sql<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement);<br /><br />/**<br />* 指定sql并传入实参去查多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter);<br /><br />/**<br />* 使用预编译的sql，指定传入的实参以及结果集范围<br />* 查询指定范围的所有数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 执行sql，返回map对象<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, String mapKey);<br /><br />/**<br />* 指定sql和实参，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey);<br /><br />/**<br />* 指定sql、实参、范围，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 将查询结果通过此处的ResultHandler对象封装成对应的对象<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement<br />* using a {@code ResultHandler}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement key and parameter<br />* using a {@code ResultHandler} and {@code RowBounds}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler);<br /><br />/**<br />* 执行insert<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement);<br /><br />/**<br />* Execute an insert statement with the given parameter object. Any generated<br />* autoincrement values or selectKey entries will modify the given parameter<br />* object properties. Only the number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement, Object parameter);<br /><br />/**<br />* 执行update<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement);<br /><br />/**<br />* Execute an update statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement, Object parameter);<br /><br />/**<br />* 执行delete<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement);<br /><br />/**<br />* Execute a delete statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement, Object parameter);<br /><br />/**<br />* 提交事务<br />*/<br />void commit();<br /><br />/**<br />* Flushes batch statements and commits database connection.<br />*<br />* @param force forces connection commit<br />*/<br />void commit(boolean force);<br /><br />/**<br />* 回滚事务<br />*/<br />void rollback();<br /><br />/**<br />* Discards pending batch statements and rolls database connection back.<br />* Note that database connection will not be rolled back if no updates/deletes/inserts were called.<br />*<br />* @param force forces connection rollback<br />*/<br />void rollback(boolean force);<br /><br />/**<br />* 将请求刷新到数据库<br />*<br />* @return BatchResult list of updated records<br />* @since 3.0.6<br />*/<br />List&lt;BatchResult&gt; flushStatements();<br /><br />/**<br />* 关闭SqlSession<br />*/<br />@Override<br />void close();<br /><br />/**<br />* 清空 缓存<br />*/<br />void clearCache();<br /><br />/**<br />* Retrieves current configuration.<br />*<br />* @return Configuration<br />*/<br />Configuration getConfiguration();<br /><br />/**<br />* 使用type获取对应的Mapper<br />*<br />* @param &lt;T&gt; the mapper type<br />* @param type Mapper interface class<br />* @return a mapper bound to this SqlSession<br />*/<br />&lt;T&gt; T getMapper(Class&lt;T&gt; type);<br /><br />/**<br />* 获取该SqlSession对应的数据库连接<br />*<br />* @return Connection<br />*/<br />Connection getConnection();<br />}<br />DefaultSqlSession<br />在mybatis单独使用的时候，DefaultSqlSession是最常使用的SqlSession实现。DefaultSqlSession核心字段如下，其中已经过多介绍的类将不再注释。</p>
<p><br />private final Configuration configuration;<br />private final Executor executor;<br /><br />/**<br />* 是否自动提交事务<br />*/<br />private final boolean autoCommit;<br /><br />/**<br />* 当前缓存是否有脏数据<br />*/<br />private boolean dirty;<br />DefaultSqlSession中使用到了策略模式（不知道策略模式的请看我以前的帖子）。DefaultSqlSession扮演了上下文，只是通过executor字段的不同，而选择不同的Executor去操作数据库。</p>
<p>DefaultSqlSession为每种SQL操作都提供了大量的重载，对于不同的参数都提供了一个重载方法， 便于开发者去调用。这里只贴出核心的方法，对于重载方法将不进行介绍。</p>
<p>* 根据sql和实参查询一条数据<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @param &lt;T&gt;<br />* @return<br />*/<br />@Override<br />public &lt;T&gt; T selectOne(String statement, Object parameter) {<br />// 调用selectList查询多条<br />List&lt;T&gt; list = this.selectList(statement, parameter);<br />// 如果查询到的数据长度1是或者0就正常，否则抛出异常<br />if (list.size() == 1) {<br />return list.get(0);<br />} else if (list.size() &gt; 1) {<br />// 这里的异常信息是不是很熟悉呢<br />throw new TooManyResultsException("Expected one result (or null) to be returned by selectOne(), but found: " + list.size());<br />} else {<br />return null;<br />}<br />}<br /><br />/**<br />* 查询结果封装成map返回<br />* 阅读源码发现，这里的selectMap貌似并不是将结果集按照属性映射成map<br />* 而是把map当做list去使用。<br />* 查询出多条数据，使用不同的key去封装到map<br />* 这里的V应该是这一条数据映射的对象，或者是Map&lt;String, Object&gt;<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @param &lt;K&gt;<br />* @param &lt;V&gt;<br />* @return<br />*/<br />@Override<br />public &lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {<br />// 查询列表<br />final List&lt;? extends V&gt; list = selectList(statement, parameter, rowBounds);<br />// 创建Map返回集处理器<br />final DefaultMapResultHandler&lt;K, V&gt; mapResultHandler = new DefaultMapResultHandler&lt;&gt;(mapKey,<br />configuration.getObjectFactory(), configuration.getObjectWrapperFactory(), configuration.getReflectorFactory());<br />final DefaultResultContext&lt;V&gt; context = new DefaultResultContext&lt;&gt;();<br />for (V o : list) {<br />// 暂存一下当前结果对象<br />context.nextResultObject(o);<br />// 处理上下文中的结果对象<br />mapResultHandler.handleResult(context);<br />}<br />// 将map返回回去<br />return mapResultHandler.getMappedResults();<br />}<br /><br />/**<br />* 根据传入的sql、实参、查询范围去查询一个列表<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @param &lt;E&gt;<br />* @return<br />*/<br />@Override<br />public &lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.query(ms, wrapCollection(parameter), rowBounds, Executor.NO_RESULT_HANDLER);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error querying database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 根据sql、实参、范围查询<br />* 将查询结果交给指定的ResultHandler去处理<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />@Override<br />public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />executor.query(ms, wrapCollection(parameter), rowBounds, handler);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error querying database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public int update(String statement, Object parameter) {<br />try {<br />dirty = true;<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.update(ms, wrapCollection(parameter));<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error updating database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void commit(boolean force) {<br />try {<br />// 提交事务。提交之后将dirty设为false<br />// 此时的缓存中视为没有脏数据<br />executor.commit(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error committing transaction. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void rollback(boolean force) {<br />try {<br />executor.rollback(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error rolling back transaction. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public List&lt;BatchResult&gt; flushStatements() {<br />try {<br />return executor.flushStatements();<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error flushing statements. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />代码比较简单，就不做过多的介绍。</p>
<p>DefaultSqlSessionFactory<br />DefaultSqlSessionFactory是一个工厂类，提供了两种创建DefaultSqlSession的方式，一种是通过数据源创建SqlSession，一种是通过用户传入的数据库连接对象来创建SqlSession。另外代码里有大量的openSession都是用于创建SqlSession对象的，但是其实现都是基于这两种方式，因此这里只把两种创建SqlSession的方式的代码贴出来，如下。</p>
<p>/**<br />* 通过数据源去创建SqlSession<br />* @param execType<br />* @param level<br />* @param autoCommit<br />* @return<br />*/<br />private SqlSession openSessionFromDataSource(ExecutorType execType, TransactionIsolationLevel level, boolean autoCommit) {<br />Transaction tx = null;<br />try {<br />// 获取environment。这个是mybatis中配置的环境<br />final Environment environment = configuration.getEnvironment();<br />// 根据环境去获取TransactionFactory对象<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />// 创建Transaction对象<br />tx = transactionFactory.newTransaction(environment.getDataSource(), level, autoCommit);<br />// 创建Executor对象<br />final Executor executor = configuration.newExecutor(tx, execType);<br />// 创建DefaultSqlSession<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />closeTransaction(tx);<br />// may have fetched a connection so lets call close()<br />throw ExceptionFactory.wrapException("Error opening session. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 通过用户提供的Connection对象去创建<br />* @param execType<br />* @param connection<br />* @return<br />*/<br />private SqlSession openSessionFromConnection(ExecutorType execType, Connection connection) {<br />try {<br />boolean autoCommit;<br />try {<br />autoCommit = connection.getAutoCommit();<br />} catch (SQLException e) {<br />// Failover to true, as most poor drivers<br />// or databases won't support transactions<br />autoCommit = true;<br />}<br />final Environment environment = configuration.getEnvironment();<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />final Transaction tx = transactionFactory.newTransaction(connection);<br />final Executor executor = configuration.newExecutor(tx, execType);<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error opening session. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />SqlSessionManager<br />SqlSessionManager同时实现了SqlSession接口和SQLSessionFactory接口，因此它拥有操作数据库的能力以及创建SqlSession的功能。</p>
<p>SQLSessionManager核心字段如下</p>
<p>private final SqlSessionFactory sqlSessionFactory;<br /><br />/**<br />* localSqlSession中记录的SqlSession对象的代理对象<br />*/<br />private final SqlSession sqlSessionProxy;<br /><br />/**<br />* 记录当前线程的SqlSession对象<br />*/<br />private final ThreadLocal&lt;SqlSession&gt; localSqlSession = new ThreadLocal&lt;&gt;();<br />其中ThreadLocal的作用往往是作为当前线程的上下文，可以为当前线程提供全局变量。对ThreadLocal不了解的朋友也请查看我以前的文章。</p>
<p>SqlSessionManager提供了两种模式。一种是同一线程每次通过SqlSessionManager对象访问数据库时，都会创建一个DefaultSqlSession对象完成数据库操作，另一种则是使用localSqlSession绑定当前线程的SqlSession，在当前线程中循环使用同一个SqlSession。后者使用往往居多，这也是大家经常说的&ldquo;SqlSession与线程绑定 ，每个请求都会创建SqlSession&rdquo;的原因。</p>
<p>sqlSessionProxy是一个代理对象，在SqlSessionmanager的构造方法中使用JDK的动态代理创建完成，代码如下。</p>
<p>private SqlSessionManager(SqlSessionFactory sqlSessionFactory) {<br />this.sqlSessionFactory = sqlSessionFactory;<br />// 使用动态代理去创建 SqlSession<br />this.sqlSessionProxy = (SqlSession) Proxy.newProxyInstance(<br />SqlSessionFactory.class.getClassLoader(),<br />new Class[]{SqlSession.class},<br />new SqlSessionInterceptor());<br />}<br />SqlSessionManager中实现的SqlSession 接口方法，都是直接调用sqlSessionProxy字段记录的SqlSession代理对象的方法实现的。在创建该代理对象时使用到的SqlSessionInterceptor是SqlSessionManager的内部类，代码如下。</p>
<p>private class SqlSessionInterceptor implements InvocationHandler {<br />public SqlSessionInterceptor() {<br />// Prevent Synthetic Access<br />}<br /><br />@Override<br />public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<br />// 获取当前线程的SqlSession<br />final SqlSession sqlSession = SqlSessionManager.this.localSqlSession.get();<br />if (sqlSession != null) {<br />try {<br />// SqlSession不为空就调用真正的SqlSession去完成数据库的操作<br />return method.invoke(sqlSession, args);<br />} catch (Throwable t) {<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />} else {<br />try (SqlSession autoSqlSession = openSession()) {<br />// 如果当前线程的SqlSession为空，就创建新的SqlSession对象<br />try {<br />// 使用创建的SqlSession对象完成数据库操作<br />final Object result = method.invoke(autoSqlSession, args);<br />// 提交事务<br />autoSqlSession.commit();<br />return result;<br />} catch (Throwable t) {<br />autoSqlSession.rollback();<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />}<br />}<br />}<br />}<br />总结<br />SqlSession是单体mybatis使用最多的一个接口，可能我们在整合SSM之后就看不到这个接口了，但是其底层实现的时候也是会创建SqlSession的，虽然这个比较简单，但是也是相当重要的一个模块。</p>(String), 0(Integer), 0(Integer), 0(Integer), 2(Integer), 0(Integer), 1264358056178458624(String), 2(Integer)
2020-05-25 10:28:06.974 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2020-05-25 10:28:06.974 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 10:28:06.974 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 10:28:07.024 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 10:28:07.024 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-05-25 10:28:07.024 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: java(String), 6(Integer), 1(Integer), 1(Integer)
2020-05-25 10:28:07.114 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-05-25 10:28:07.114 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2020-05-25 10:28:07.114 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-05-25 10:28:07.164 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2020-05-25 10:28:07.164 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ? where type_id = ? 
2020-05-25 10:28:07.174 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: linux(String), 3(Integer), 1(Integer), 2(Integer)
2020-05-25 10:28:07.254 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-05-25 10:28:07.404 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:28:07.414 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1264358056178458624, blogTitle=Mybatis源码阅读（五 ）：接口层——SqlSession, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png, blogContent=<p>展开<br />SqlSession<br />SqlSession是Mybatis的核心接口之一，对外提供常用的数据库操作api。mybatis提供了两个SqlSession的实现，其中最常用的是DefaultSqlSession。</p>
<p>SqlSession的代码如下</p>
<p>/**<br />* 接口层，也是开发人员使用mybatis去操作sql所使用的主要的接口<br />*<br />* @author Clinton Begin<br />*/<br />public interface SqlSession extends Closeable {<br /><br />/**<br />* 查询sql单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement sql<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement);<br /><br />/**<br />* 指定sql并传入实参去查单条数据<br />*<br />* @param &lt;T&gt; 返回的数据类型<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @return Mapped object<br />*/<br />&lt;T&gt; T selectOne(String statement, Object parameter);<br /><br />/**<br />* 执行sql查询多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement sql<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement);<br /><br />/**<br />* 指定sql并传入实参去查多条数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter);<br /><br />/**<br />* 使用预编译的sql，指定传入的实参以及结果集范围<br />* 查询指定范围的所有数据<br />*<br />* @param &lt;E&gt; 返回的数据类型<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @return List of mapped object<br />*/<br />&lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 执行sql，返回map对象<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, String mapKey);<br /><br />/**<br />* 指定sql和实参，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey);<br /><br />/**<br />* 指定sql、实参、范围，返回map<br />*<br />* @param &lt;K&gt; the returned Map keys type<br />* @param &lt;V&gt; the returned Map values type<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Map containing key pair data.<br />*/<br />&lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter);<br /><br />/**<br />* A Cursor offers the same results as a List, except it fetches data lazily using an Iterator.<br />*<br />* @param &lt;T&gt; the returned cursor element type.<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param rowBounds Bounds to limit object retrieval<br />* @return Cursor of mapped objects<br />*/<br />&lt;T&gt; Cursor&lt;T&gt; selectCursor(String statement, Object parameter, RowBounds rowBounds);<br /><br />/**<br />* 将查询结果通过此处的ResultHandler对象封装成对应的对象<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement<br />* using a {@code ResultHandler}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, ResultHandler handler);<br /><br />/**<br />* Retrieve a single row mapped from the statement key and parameter<br />* using a {@code ResultHandler} and {@code RowBounds}.<br />*<br />* @param statement Unique identifier matching the statement to use.<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler);<br /><br />/**<br />* 执行insert<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement);<br /><br />/**<br />* Execute an insert statement with the given parameter object. Any generated<br />* autoincrement values or selectKey entries will modify the given parameter<br />* object properties. Only the number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the insert.<br />*/<br />int insert(String statement, Object parameter);<br /><br />/**<br />* 执行update<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement);<br /><br />/**<br />* Execute an update statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the update.<br />*/<br />int update(String statement, Object parameter);<br /><br />/**<br />* 执行delete<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement);<br /><br />/**<br />* Execute a delete statement. The number of rows affected will be returned.<br />*<br />* @param statement Unique identifier matching the statement to execute.<br />* @param parameter A parameter object to pass to the statement.<br />* @return int The number of rows affected by the delete.<br />*/<br />int delete(String statement, Object parameter);<br /><br />/**<br />* 提交事务<br />*/<br />void commit();<br /><br />/**<br />* Flushes batch statements and commits database connection.<br />*<br />* @param force forces connection commit<br />*/<br />void commit(boolean force);<br /><br />/**<br />* 回滚事务<br />*/<br />void rollback();<br /><br />/**<br />* Discards pending batch statements and rolls database connection back.<br />* Note that database connection will not be rolled back if no updates/deletes/inserts were called.<br />*<br />* @param force forces connection rollback<br />*/<br />void rollback(boolean force);<br /><br />/**<br />* 将请求刷新到数据库<br />*<br />* @return BatchResult list of updated records<br />* @since 3.0.6<br />*/<br />List&lt;BatchResult&gt; flushStatements();<br /><br />/**<br />* 关闭SqlSession<br />*/<br />@Override<br />void close();<br /><br />/**<br />* 清空 缓存<br />*/<br />void clearCache();<br /><br />/**<br />* Retrieves current configuration.<br />*<br />* @return Configuration<br />*/<br />Configuration getConfiguration();<br /><br />/**<br />* 使用type获取对应的Mapper<br />*<br />* @param &lt;T&gt; the mapper type<br />* @param type Mapper interface class<br />* @return a mapper bound to this SqlSession<br />*/<br />&lt;T&gt; T getMapper(Class&lt;T&gt; type);<br /><br />/**<br />* 获取该SqlSession对应的数据库连接<br />*<br />* @return Connection<br />*/<br />Connection getConnection();<br />}<br />DefaultSqlSession<br />在mybatis单独使用的时候，DefaultSqlSession是最常使用的SqlSession实现。DefaultSqlSession核心字段如下，其中已经过多介绍的类将不再注释。</p>
<p><br />private final Configuration configuration;<br />private final Executor executor;<br /><br />/**<br />* 是否自动提交事务<br />*/<br />private final boolean autoCommit;<br /><br />/**<br />* 当前缓存是否有脏数据<br />*/<br />private boolean dirty;<br />DefaultSqlSession中使用到了策略模式（不知道策略模式的请看我以前的帖子）。DefaultSqlSession扮演了上下文，只是通过executor字段的不同，而选择不同的Executor去操作数据库。</p>
<p>DefaultSqlSession为每种SQL操作都提供了大量的重载，对于不同的参数都提供了一个重载方法， 便于开发者去调用。这里只贴出核心的方法，对于重载方法将不进行介绍。</p>
<p>* 根据sql和实参查询一条数据<br />* @param statement 预编译的带有?的sql<br />* @param parameter 用户传入的实参，与前面sql绑定<br />* @param &lt;T&gt;<br />* @return<br />*/<br />@Override<br />public &lt;T&gt; T selectOne(String statement, Object parameter) {<br />// 调用selectList查询多条<br />List&lt;T&gt; list = this.selectList(statement, parameter);<br />// 如果查询到的数据长度1是或者0就正常，否则抛出异常<br />if (list.size() == 1) {<br />return list.get(0);<br />} else if (list.size() &gt; 1) {<br />// 这里的异常信息是不是很熟悉呢<br />throw new TooManyResultsException("Expected one result (or null) to be returned by selectOne(), but found: " + list.size());<br />} else {<br />return null;<br />}<br />}<br /><br />/**<br />* 查询结果封装成map返回<br />* 阅读源码发现，这里的selectMap貌似并不是将结果集按照属性映射成map<br />* 而是把map当做list去使用。<br />* 查询出多条数据，使用不同的key去封装到map<br />* 这里的V应该是这一条数据映射的对象，或者是Map&lt;String, Object&gt;<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter A parameter object to pass to the statement.<br />* @param mapKey The property to use as key for each value in the list.<br />* @param rowBounds Bounds to limit object retrieval<br />* @param &lt;K&gt;<br />* @param &lt;V&gt;<br />* @return<br />*/<br />@Override<br />public &lt;K, V&gt; Map&lt;K, V&gt; selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {<br />// 查询列表<br />final List&lt;? extends V&gt; list = selectList(statement, parameter, rowBounds);<br />// 创建Map返回集处理器<br />final DefaultMapResultHandler&lt;K, V&gt; mapResultHandler = new DefaultMapResultHandler&lt;&gt;(mapKey,<br />configuration.getObjectFactory(), configuration.getObjectWrapperFactory(), configuration.getReflectorFactory());<br />final DefaultResultContext&lt;V&gt; context = new DefaultResultContext&lt;&gt;();<br />for (V o : list) {<br />// 暂存一下当前结果对象<br />context.nextResultObject(o);<br />// 处理上下文中的结果对象<br />mapResultHandler.handleResult(context);<br />}<br />// 将map返回回去<br />return mapResultHandler.getMappedResults();<br />}<br /><br />/**<br />* 根据传入的sql、实参、查询范围去查询一个列表<br />* @param statement 预编译的带有问号的sql<br />* @param parameter 用户传入的实参，与前面的sql绑定<br />* @param rowBounds 指定查询范围<br />* @param &lt;E&gt;<br />* @return<br />*/<br />@Override<br />public &lt;E&gt; List&lt;E&gt; selectList(String statement, Object parameter, RowBounds rowBounds) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.query(ms, wrapCollection(parameter), rowBounds, Executor.NO_RESULT_HANDLER);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error querying database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 根据sql、实参、范围查询<br />* 将查询结果交给指定的ResultHandler去处理<br />* @param statement Unique identifier matching the statement to use.<br />* @param parameter<br />* @param rowBounds RowBound instance to limit the query results<br />* @param handler ResultHandler that will handle each retrieved row<br />*/<br />@Override<br />public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {<br />try {<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />executor.query(ms, wrapCollection(parameter), rowBounds, handler);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error querying database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public int update(String statement, Object parameter) {<br />try {<br />dirty = true;<br />MappedStatement ms = configuration.getMappedStatement(statement);<br />return executor.update(ms, wrapCollection(parameter));<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error updating database. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void commit(boolean force) {<br />try {<br />// 提交事务。提交之后将dirty设为false<br />// 此时的缓存中视为没有脏数据<br />executor.commit(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error committing transaction. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public void rollback(boolean force) {<br />try {<br />executor.rollback(isCommitOrRollbackRequired(force));<br />dirty = false;<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error rolling back transaction. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />@Override<br />public List&lt;BatchResult&gt; flushStatements() {<br />try {<br />return executor.flushStatements();<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error flushing statements. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />代码比较简单，就不做过多的介绍。</p>
<p>DefaultSqlSessionFactory<br />DefaultSqlSessionFactory是一个工厂类，提供了两种创建DefaultSqlSession的方式，一种是通过数据源创建SqlSession，一种是通过用户传入的数据库连接对象来创建SqlSession。另外代码里有大量的openSession都是用于创建SqlSession对象的，但是其实现都是基于这两种方式，因此这里只把两种创建SqlSession的方式的代码贴出来，如下。</p>
<p>/**<br />* 通过数据源去创建SqlSession<br />* @param execType<br />* @param level<br />* @param autoCommit<br />* @return<br />*/<br />private SqlSession openSessionFromDataSource(ExecutorType execType, TransactionIsolationLevel level, boolean autoCommit) {<br />Transaction tx = null;<br />try {<br />// 获取environment。这个是mybatis中配置的环境<br />final Environment environment = configuration.getEnvironment();<br />// 根据环境去获取TransactionFactory对象<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />// 创建Transaction对象<br />tx = transactionFactory.newTransaction(environment.getDataSource(), level, autoCommit);<br />// 创建Executor对象<br />final Executor executor = configuration.newExecutor(tx, execType);<br />// 创建DefaultSqlSession<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />closeTransaction(tx);<br />// may have fetched a connection so lets call close()<br />throw ExceptionFactory.wrapException("Error opening session. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br /><br />/**<br />* 通过用户提供的Connection对象去创建<br />* @param execType<br />* @param connection<br />* @return<br />*/<br />private SqlSession openSessionFromConnection(ExecutorType execType, Connection connection) {<br />try {<br />boolean autoCommit;<br />try {<br />autoCommit = connection.getAutoCommit();<br />} catch (SQLException e) {<br />// Failover to true, as most poor drivers<br />// or databases won't support transactions<br />autoCommit = true;<br />}<br />final Environment environment = configuration.getEnvironment();<br />final TransactionFactory transactionFactory = getTransactionFactoryFromEnvironment(environment);<br />final Transaction tx = transactionFactory.newTransaction(connection);<br />final Executor executor = configuration.newExecutor(tx, execType);<br />return new DefaultSqlSession(configuration, executor, autoCommit);<br />} catch (Exception e) {<br />throw ExceptionFactory.wrapException("Error opening session. Cause: " + e, e);<br />} finally {<br />ErrorContext.instance().reset();<br />}<br />}<br />SqlSessionManager<br />SqlSessionManager同时实现了SqlSession接口和SQLSessionFactory接口，因此它拥有操作数据库的能力以及创建SqlSession的功能。</p>
<p>SQLSessionManager核心字段如下</p>
<p>private final SqlSessionFactory sqlSessionFactory;<br /><br />/**<br />* localSqlSession中记录的SqlSession对象的代理对象<br />*/<br />private final SqlSession sqlSessionProxy;<br /><br />/**<br />* 记录当前线程的SqlSession对象<br />*/<br />private final ThreadLocal&lt;SqlSession&gt; localSqlSession = new ThreadLocal&lt;&gt;();<br />其中ThreadLocal的作用往往是作为当前线程的上下文，可以为当前线程提供全局变量。对ThreadLocal不了解的朋友也请查看我以前的文章。</p>
<p>SqlSessionManager提供了两种模式。一种是同一线程每次通过SqlSessionManager对象访问数据库时，都会创建一个DefaultSqlSession对象完成数据库操作，另一种则是使用localSqlSession绑定当前线程的SqlSession，在当前线程中循环使用同一个SqlSession。后者使用往往居多，这也是大家经常说的&ldquo;SqlSession与线程绑定 ，每个请求都会创建SqlSession&rdquo;的原因。</p>
<p>sqlSessionProxy是一个代理对象，在SqlSessionmanager的构造方法中使用JDK的动态代理创建完成，代码如下。</p>
<p>private SqlSessionManager(SqlSessionFactory sqlSessionFactory) {<br />this.sqlSessionFactory = sqlSessionFactory;<br />// 使用动态代理去创建 SqlSession<br />this.sqlSessionProxy = (SqlSession) Proxy.newProxyInstance(<br />SqlSessionFactory.class.getClassLoader(),<br />new Class[]{SqlSession.class},<br />new SqlSessionInterceptor());<br />}<br />SqlSessionManager中实现的SqlSession 接口方法，都是直接调用sqlSessionProxy字段记录的SqlSession代理对象的方法实现的。在创建该代理对象时使用到的SqlSessionInterceptor是SqlSessionManager的内部类，代码如下。</p>
<p>private class SqlSessionInterceptor implements InvocationHandler {<br />public SqlSessionInterceptor() {<br />// Prevent Synthetic Access<br />}<br /><br />@Override<br />public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {<br />// 获取当前线程的SqlSession<br />final SqlSession sqlSession = SqlSessionManager.this.localSqlSession.get();<br />if (sqlSession != null) {<br />try {<br />// SqlSession不为空就调用真正的SqlSession去完成数据库的操作<br />return method.invoke(sqlSession, args);<br />} catch (Throwable t) {<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />} else {<br />try (SqlSession autoSqlSession = openSession()) {<br />// 如果当前线程的SqlSession为空，就创建新的SqlSession对象<br />try {<br />// 使用创建的SqlSession对象完成数据库操作<br />final Object result = method.invoke(autoSqlSession, args);<br />// 提交事务<br />autoSqlSession.commit();<br />return result;<br />} catch (Throwable t) {<br />autoSqlSession.rollback();<br />throw ExceptionUtil.unwrapThrowable(t);<br />}<br />}<br />}<br />}<br />}<br />总结<br />SqlSession是单体mybatis使用最多的一个接口，可能我们在整合SSM之后就看不到这个接口了，但是其底层实现的时候也是会创建SqlSession的，虽然这个比较简单，但是也是相当重要的一个模块。</p>, blogGoods=0, blogRead=0, blogCollection=0, blogType=2, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-05-24 00:50:27, updateTime=null, version=2, deleted=null)](String), 1(Integer), null, PUT(String), 710(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 10:28:07.514 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:28:07.725 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image,blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2020-05-25 10:28:07.729 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 10:28:07.780 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 8
2020-05-25 10:28:07.782 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2020-05-25 10:28:07.783 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 10:28:07.830 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 10:28:07.976 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:28:07.979 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=8, list=[BlogVo(blogId=1264357690636476416, blogTitle=垃圾回收算法, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:49:00, updateTime=2020-05-24 12:52:13), BlogVo(blogId=1264358056178458624, blogTitle=Mybatis源码阅读（五 ）：接口层——SqlSession, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:50:27, updateTime=2020-05-24 12:56:45), BlogVo(blogId=1264358089300877312, blogTitle=Mybatis源码阅读（五 ）：接口层——SqlSession, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:50:35, updateTime=2020-05-24 00:50:35), BlogVo(blogId=1264358511910559744, blogTitle=Java只使用位运算实现加减乘除, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 00:52:15, updateTime=2020-05-24 00:52:15), BlogVo(blogId=1264363719424188416, blogTitle=java进阶篇：用位运算实现加、减、乘、除, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:12:57, updateTime=2020-05-24 01:12:57), BlogVo(blogId=1264365258452664320, blogTitle=不使用比较运算符如何比较两个数的大小, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:19:04, updateTime=2020-05-24 01:19:04), BlogVo(blogId=1264365631460507648, blogTitle=Flutter、ReactNative、uniapp对比, blogImage=null, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=linux, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-24 01:20:33, updateTime=2020-05-24 01:20:33), BlogVo(blogId=1264726600279891968, blogTitle=新生代与老年代, blogImage=http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg, blogContent=null, blogGoods=0, blogRead=0, blogCollection=0, typeName=java, blogSource=null, blogRemark=null, blogComment=0, createdTime=2020-05-25 01:14:56, updateTime=2020-05-25 01:14:56)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 293(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:28:08.071 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 10:28:10.249 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2020-05-25 10:28:10.251 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-05-25 10:28:10.306 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 6
2020-05-25 10:28:10.375 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 10:28:10.378 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 128(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":6,"typeId":1,"typeName":"java"},{"enable":1,"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"enable":1,"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"enable":1,"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 10:28:10.469 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:26:56.132 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 12:26:56.278 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 12:26:56.361 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 12:26:56.703 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:26:56.706 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 13726(Long), {"code":20000,"data":{"token":"094B9811ECA5452317F273254602F60E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:26:56.800 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:05.720 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 12:27:05.724 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 12:27:05.808 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 12:27:05.882 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:05.884 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 5034(Long), {"code":20000,"data":{"token":"094B9811ECA5452317F273254602F60E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:06.004 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:18.088 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 12:27:18.089 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 12:27:18.172 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 12:27:18.241 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:18.242 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"token":"094B9811ECA5452317F273254602F60E"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:18.342 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:18.576 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:18.688 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:18.781 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:19.347 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:27:19.375 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:27:19.447 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:27:19.513 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:19.524 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 175(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:19.615 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:36.043 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:36.047 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:36.140 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:27:36.522 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:27:36.523 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:27:36.571 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:27:36.629 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:27:36.630 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:27:36.726 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:11.421 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:11.430 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:11.525 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:11.777 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:47:11.779 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:47:12.195 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:47:12.253 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:12.254 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 481(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:12.344 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:47.925 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:47.926 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.020 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:47:48.268 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:47:48.269 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:47:48.582 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:47:48.652 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:47:48.657 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 378(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:47:48.752 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:50:28.523 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:50:28.526 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:50:28.620 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:50:28.900 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:50:28.902 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:50:28.955 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:50:29.009 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:50:29.011 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:50:29.107 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:55:45.392 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:55:45.396 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:55:45.487 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:55:45.723 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:55:45.724 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:55:45.778 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:55:45.832 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:55:45.833 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:55:45.926 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:58:53.460 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 12:58:53.468 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 12:58:53.553 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 12:58:53.636 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:58:53.639 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 453(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:58:53.745 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:58:58.274 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:58:58.276 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:58:58.369 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:58:58.652 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 12:58:58.654 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 12:58:58.701 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 12:58:58.758 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:58:58.759 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:58:58.852 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 12:58:58.936 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 12:58:58.938 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 12:58:58.990 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 12:58:59.414 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 12:58:59.415 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 137(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 12:58:59.508 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:23:20.649 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 14:23:20.653 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 14:23:20.722 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 14:23:20.786 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:23:20.789 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 1842(Long), {"code":20000,"data":{"token":"FC63F4EC607B6E8A6F83F76C94D230EC"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:23:20.885 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:23:21.397 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:23:21.400 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 36(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:23:21.499 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:23:21.915 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:23:21.917 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:23:21.970 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:23:22.031 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:23:22.033 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:23:22.126 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:23:22.202 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:23:22.203 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:23:22.250 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:23:22.304 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:23:22.306 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:23:22.395 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:24:02.551 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:24:02.555 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:24:02.653 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:24:05.079 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:24:05.082 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:24:05.128 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:24:05.185 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:24:05.187 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:24:05.235 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:24:05.290 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:24:05.291 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 2261(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:24:05.381 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:24:05.435 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:24:05.438 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 2372(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:24:05.532 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:24:52.790 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:24:52.791 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:24:52.838 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:24:52.887 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:24:52.889 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:24:53.019 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:25:25.554 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:25:25.555 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:25:25.604 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:25:25.671 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:25:25.671 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:25:25.762 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:25:47.906 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:25:47.907 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:25:47.952 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:25:48.005 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:25:48.006 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:25:48.096 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:26:57.099 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:26:57.105 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:26:57.156 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:26:57.232 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:26:57.233 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 176(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:26:57.322 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:27:01.486 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:27:01.488 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:27:01.581 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:27:02.014 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:27:02.015 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:27:02.021 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:27:02.021 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:27:02.061 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:27:02.068 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:27:02.228 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:27:02.229 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:27:02.232 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:27:02.233 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:27:02.321 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:27:02.328 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:27:38.349 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:27:38.350 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:27:38.397 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:27:38.577 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:27:38.579 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:27:38.685 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:27:48.525 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:27:48.526 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:27:48.627 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:27:48.732 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:27:48.733 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 253(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:27:48.830 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:28:06.996 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:28:06.999 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:28:07.047 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:28:07.266 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:28:07.268 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 285(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:28:07.359 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:28:21.658 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:28:21.661 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:28:21.840 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:28:22.198 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:28:22.199 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:28:22.209 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:28:22.210 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:28:22.245 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:28:22.255 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:28:22.302 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:28:22.304 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:28:22.352 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:28:22.354 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:28:22.404 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:28:22.487 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:29:13.731 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:29:13.732 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:29:13.777 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:29:13.849 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:29:13.851 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:29:13.955 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:29:51.240 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:29:51.242 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:29:51.297 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:29:51.355 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:29:51.356 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 131(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:29:51.448 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:30:00.813 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:30:00.814 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:30:00.861 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:30:00.921 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:30:00.922 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:30:01.015 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:30:07.265 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:30:07.266 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:30:07.356 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:30:07.608 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:30:07.610 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:30:07.614 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:30:07.615 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:30:07.655 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:30:07.661 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:30:07.707 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:30:07.709 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:30:07.716 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:30:07.717 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:30:07.799 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:30:07.810 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:30:52.630 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:30:52.630 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1a0cb23d](String), 1(Integer), null, POST(String), 869(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LZhyAceCxAAAf4vau1MM038.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 14:30:52.723 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:31:46.212 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:31:46.214 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@63a10f1c](String), 1(Integer), null, POST(String), 333(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LZlKAduMEAAf2zQ1Ix3Y548.gif","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 14:31:46.571 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:34:30.849 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:34:30.850 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:34:30.896 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:34:30.953 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:34:30.954 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:34:31.060 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:37:32.187 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:37:32.188 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:37:32.234 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:37:32.285 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:37:32.286 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:37:32.376 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:39:10.194 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:39:10.196 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:39:10.290 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:39:10.417 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:39:10.421 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 261(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:39:10.527 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:39:55.831 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:39:55.832 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:39:55.881 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:39:55.938 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:39:55.940 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:39:56.036 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:40:22.988 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:40:22.989 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:40:23.038 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:40:23.092 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:40:23.093 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:40:23.187 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:41:06.314 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:41:06.314 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:41:06.412 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:41:06.537 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:41:06.539 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 265(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:41:06.634 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:42:44.316 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:42:44.319 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:42:44.452 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:42:44.706 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:42:44.707 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:42:44.710 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:42:44.711 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:42:44.752 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:42:44.756 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:42:44.816 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:42:44.817 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:42:44.821 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:42:44.822 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:42:44.913 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:42:44.915 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:43:56.720 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:43:56.723 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:43:56.814 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:43:57.243 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:43:57.245 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:43:57.254 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 14:43:57.255 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 14:43:57.292 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:43:57.302 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 14:43:57.351 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:43:57.352 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:43:57.360 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:43:57.361 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:43:57.453 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:43:57.454 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:54:53.296 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:54:53.299 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:54:53.354 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:54:53.412 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:54:53.414 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 143(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:54:53.504 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 14:56:20.260 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 14:56:20.262 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 14:56:20.310 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 14:56:20.369 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 14:56:20.371 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 14:56:20.463 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:04:59.347 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:04:59.349 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:04:59.396 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:04:59.454 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:04:59.456 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 117(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:04:59.546 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:05:10.418 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:05:10.418 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:05:10.463 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:05:10.528 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:05:10.530 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:05:10.625 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:05:47.488 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:05:47.524 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:05:47.621 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:05:47.933 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:05:47.934 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:05:47.953 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:05:47.954 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:05:47.996 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:05:48.003 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:05:48.057 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:05:48.058 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 139(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:05:48.064 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:05:48.065 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:05:48.146 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:05:48.158 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:06:36.354 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:06:36.355 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:06:36.449 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:06:36.744 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:06:36.745 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:06:36.790 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:06:36.841 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:06:36.842 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:06:36.932 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:06:37.045 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:06:37.045 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:06:37.090 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:06:37.143 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:06:37.144 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 99(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:06:37.235 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:08:29.273 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:08:29.278 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:08:29.369 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:08:29.695 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:08:29.696 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:08:29.746 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:08:29.804 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:08:29.806 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:08:29.902 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:08:30.029 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:08:30.030 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:08:30.080 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:08:30.140 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:08:30.141 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:08:30.234 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:14:55.219 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:14:55.239 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 74(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:14:55.337 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:14:55.946 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:14:55.947 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:14:55.996 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:14:56.100 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:14:56.102 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 158(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:14:56.199 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:14:56.237 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:14:56.238 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:14:56.284 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:14:56.339 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:14:56.340 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 130(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:14:56.432 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:15:10.891 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:15:10.897 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:15:10.950 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:15:11.160 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.update.debug:159 -==>  Preparing: update bl_admin SET name = ?, username = ?, password = ? where id = ? 
2020-05-25 15:15:11.161 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.update.debug:159 -==> Parameters: 稽哥(String), admin(String), e807f1fcf82d132f9bb018ca6738a19f(String), 1(Integer)
2020-05-25 15:15:11.251 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.update.debug:159 -<==    Updates: 1
2020-05-25 15:15:11.320 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:15:11.321 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=稽哥, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, PUT(String), 482(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 15:15:11.413 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:17:59.129 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:17:59.137 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 64(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:17:59.234 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:17:59.561 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:17:59.563 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:17:59.612 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:17:59.669 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:17:59.671 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:17:59.771 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:17:59.873 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:17:59.874 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:17:59.920 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:17:59.974 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:17:59.975 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:00.075 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:38.958 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:38.960 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:39.050 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:39.654 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:18:39.655 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:18:39.658 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:18:39.659 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:18:39.710 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:18:39.709 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:18:39.817 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:39.825 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:39.827 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:39.850 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:39.918 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:39.942 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:50.271 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:18:50.272 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:18:50.361 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:18:50.527 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:50.528 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 184(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:50.653 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:57.477 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:57.478 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:57.569 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:57.842 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 15:18:57.843 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 15:18:57.846 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:18:57.847 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:18:57.889 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 15:18:57.892 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:18:57.951 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:57.952 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 122(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:57.955 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:18:57.956 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":{"id":1,"name":"稽哥","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:18:58.053 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:18:58.056 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:19:06.463 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.update.debug:159 -==>  Preparing: update bl_admin SET name = ?, username = ? where id = ? 
2020-05-25 15:19:06.464 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.update.debug:159 -==> Parameters: 稽哥66(String), admin(String), 1(Integer)
2020-05-25 15:19:06.587 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.AdminMapper.update.debug:159 -<==    Updates: 1
2020-05-25 15:19:06.649 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:19:06.650 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=稽哥66, header=null, signature=null, comment=null, username=admin, password=null)](String), 1(Integer), null, PUT(String), 365(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 15:19:06.742 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:19:40.416 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:19:40.420 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@89312a1](String), 1(Integer), null, POST(String), 409(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 15:19:40.513 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:19:43.538 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.update.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, username = ? where id = ? 
2020-05-25 15:19:43.539 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.update.debug:159 -==> Parameters: 稽哥66(String), http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif(String), admin(String), 1(Integer)
2020-05-25 15:19:43.632 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.AdminMapper.update.debug:159 -<==    Updates: 1
2020-05-25 15:19:43.996 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:19:43.997 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=稽哥66, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif, signature=null, comment=null, username=admin, password=null)](String), 1(Integer), null, PUT(String), 165(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 15:19:44.088 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:23.501 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:23.505 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:23.600 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:23.980 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:21:23.981 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:21:24.032 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:21:24.086 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:24.088 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 129(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:24.178 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:25.431 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:25.432 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:25.523 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:25.799 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:21:25.800 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:21:25.845 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:21:25.927 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:25.928 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 137(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:26.021 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:29.397 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:29.398 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"name":"稽哥","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:29.490 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:21:29.677 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:21:29.679 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:21:29.726 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:21:29.788 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:21:29.789 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:21:29.884 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:22:18.384 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 15:22:18.386 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 15:22:18.434 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:22:18.524 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:22:18.525 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 196(Long), {"code":20000,"data":{"token":"3B6BAA52ED53C05CD644EB9B57F54CED"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:22:18.619 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:22:18.728 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:22:18.730 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:22:18.821 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:22:19.340 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:22:19.341 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:22:19.388 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:22:19.472 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:22:19.474 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 128(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:22:19.572 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:34:32.139 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:34:32.150 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:34:32.263 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:34:32.608 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:34:32.609 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:34:32.659 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:34:32.716 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:34:32.717 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:34:32.817 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:12.344 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:12.346 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:12.445 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:12.635 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:36:12.636 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:36:12.686 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:36:12.742 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:12.743 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:12.837 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:33.784 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:33.785 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:33.878 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:34.365 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:36:34.366 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:36:34.412 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:36:34.468 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:34.468 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 299(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:34.559 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:36.536 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:36.538 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:36.632 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:36.855 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:36:36.856 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:36:36.909 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:36:37.003 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:37.005 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 133(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:37.100 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:36:42.924 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:36:42.925 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:36:42.976 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:36:43.066 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:36:43.067 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:36:43.111 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:36:43.167 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:36:43.168 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 322(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:36:43.260 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:42:51.616 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:42:51.621 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:42:51.670 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:42:51.748 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:42:51.750 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:42:51.798 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:42:51.853 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:42:51.855 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 277(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:42:51.954 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:43:26.368 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:43:26.369 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:43:26.443 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:43:26.514 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:43:26.515 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:43:26.564 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:43:26.634 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:43:26.635 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 253(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:43:26.732 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:45:02.298 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:45:02.302 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:45:02.354 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:45:02.419 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:45:02.420 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:45:02.464 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:45:02.516 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:45:02.518 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 236(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:45:02.611 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:45:36.480 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:45:36.482 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:45:36.527 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:45:36.580 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:45:36.583 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:45:36.634 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:45:36.694 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:45:36.695 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 266(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:45:36.856 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:45:41.320 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:45:41.321 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:45:41.419 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:45:41.842 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:45:41.843 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:45:41.891 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:45:41.946 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:45:41.947 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:45:42.042 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:45:42.145 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:45:42.146 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:45:42.194 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:45:42.252 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:45:42.253 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:45:42.298 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:45:42.356 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:45:42.357 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:45:42.451 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:04.103 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:04.104 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 20(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:04.199 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:22.980 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:22.982 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:23.083 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:24.071 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:46:24.072 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:46:24.119 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:46:24.172 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:24.173 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 471(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:24.264 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:25.996 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:46:25.998 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:46:26.049 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:46:26.106 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:46:26.107 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:46:26.154 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:46:26.207 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:26.208 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 219(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:26.302 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:40.376 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:40.380 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:40.474 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:40.838 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:46:40.839 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:46:40.890 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:46:40.953 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:40.954 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:41.049 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:46:41.144 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:46:41.146 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:46:41.194 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 15:46:41.251 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:46:41.252 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:46:41.300 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:46:41.354 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:46:41.355 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:46:41.449 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:54:02.809 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 15:54:47.187 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 15:54:47.217 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 15:54:47.307 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:54:47.540 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:54:47.548 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 220(Long), {"code":40002,"msg":"用户名或密码错误!"}(String), 127.0.0.1(String)
2020-05-25 15:54:47.641 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:54:57.221 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 15:54:57.222 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 15:54:57.269 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 15:54:57.343 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:54:57.346 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 107(Long), {"code":20000,"data":{"token":"1B4C7AA7E07103BB937BA06FB46B9A81"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:54:57.438 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:54:57.571 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:54:57.574 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:54:57.666 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:54:58.314 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:54:58.315 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:54:58.362 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:54:58.374 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:54:58.375 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:54:58.421 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:54:58.423 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:54:58.426 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 15:54:58.475 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:54:58.476 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:54:58.514 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:54:58.522 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:54:58.588 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:54:58.591 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 242(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 07:53:40","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:54:58.689 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:56:00.396 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:56:00.405 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:56:00.466 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 15:56:00.527 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:56:00.528 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:56:00.574 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:56:00.637 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:56:00.642 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 342(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 07:53:40","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:56:00.732 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:58:02.358 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:58:02.365 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:58:02.421 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 15:58:02.471 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:58:02.472 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:58:02.518 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:58:02.582 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:58:02.586 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 255(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 07:53:40","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:58:02.785 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:49.200 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:49.210 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:49.302 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:49.696 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 15:59:49.706 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 15:59:49.711 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 15:59:49.713 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 15:59:49.756 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 15:59:49.760 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 15:59:49.811 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 15:59:49.812 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 15:59:49.821 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:49.822 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:49.856 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 15:59:49.916 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 15:59:49.920 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 07:53:40","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 15:59:49.918 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 15:59:50.009 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:00:24.089 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:00:24.091 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:00:24.252 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:00:24.770 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:00:24.771 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:00:24.818 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:00:24.875 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:00:24.876 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:00:24.921 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:00:24.981 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:00:24.984 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 268(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 07:53:40","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:00:25.026 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:00:25.027 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:00:25.073 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:00:25.077 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:00:25.135 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:00:25.137 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:00:25.229 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:02:49.096 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.deleteById.debug:159 -==>  Preparing: update bl_user set deleted = 1 where user_id = ? 
2020-05-25 16:02:49.104 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.deleteById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 16:02:49.199 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.deleteById.debug:159 -<==    Updates: 1
2020-05-25 16:02:49.254 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:02:49.257 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/delete/1(String), [1](String), 1(Integer), null, DELETE(String), 202(Long), {"code":20000,"msg":"删除成功"}(String), 127.0.0.1(String)
2020-05-25 16:02:49.612 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:02:49.738 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:02:49.740 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:02:49.789 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 16:02:49.845 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:02:49.846 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:02:49.895 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:02:49.970 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:02:49.973 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 07:53:40, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:02:50.086 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:03:19.179 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:03:19.184 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:03:19.274 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:03:19.590 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:03:19.591 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:03:19.601 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:03:19.603 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:03:19.640 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:03:19.650 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:03:19.702 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:03:19.703 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:03:19.707 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:03:19.708 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:03:19.754 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:03:19.798 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:03:19.813 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:03:19.815 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 222(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:03:19.904 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:03:23.709 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 16:03:23.710 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 16:03:23.819 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 16:03:23.875 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:03:23.876 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 195(Long), {"code":20000,"data":{"name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:03:23.964 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:05:13.524 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:05:13.531 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:05:13.583 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:05:13.635 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:05:13.636 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:05:13.680 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:05:13.787 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:05:13.789 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 272(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:05:13.882 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:06:44.600 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:06:44.601 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:06:44.651 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:06:44.699 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:06:44.700 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:06:44.743 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:06:44.812 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:06:44.816 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 578(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:06:45.270 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:07:39.658 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:07:39.660 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:07:39.705 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:07:39.757 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:07:39.758 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:07:39.807 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:07:39.861 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:07:39.863 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:07:40.010 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:08:25.663 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:08:25.668 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:08:25.720 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:08:25.775 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:08:25.776 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:08:25.826 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:08:25.876 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:08:25.878 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:08:25.969 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:10:41.853 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:10:41.856 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:10:41.910 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:10:42.426 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:10:42.427 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:10:42.472 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:10:42.527 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:10:42.537 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 693(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:10:42.630 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:00.904 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:12:00.905 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:12:00.950 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:01.005 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:12:01.005 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:12:01.053 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:01.106 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:01.107 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:01.201 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:17.143 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:17.144 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:17.237 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:18.037 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:12:18.038 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:12:18.045 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:12:18.046 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:12:18.084 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:18.107 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:12:18.155 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:12:18.156 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:12:18.167 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:18.176 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 123(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:18.203 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:18.259 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:18.260 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 597(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:18.271 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:18.364 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:34.163 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-05-25 16:12:34.165 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 1(String), 0(Integer), 10(Integer)
2020-05-25 16:12:34.212 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:34.276 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-05-25 16:12:34.277 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 1(String)
2020-05-25 16:12:34.321 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:34.370 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:34.371 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null)], params={sex=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 233(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{"sex":"1"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:34.462 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:12:37.718 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-05-25 16:12:37.719 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2020-05-25 16:12:37.764 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-05-25 16:12:37.834 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-05-25 16:12:37.835 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 2(String)
2020-05-25 16:12:37.880 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:12:37.935 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:12:37.936 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null)], params={sex=2}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 217(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"sex":"2"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:12:38.024 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:13:39.536 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:13:39.542 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:13:39.598 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:13:39.651 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:13:39.652 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:13:39.697 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:13:39.752 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:13:39.755 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 274(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:13:39.846 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:14:02.100 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:14:02.101 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:14:02.147 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:14:02.199 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:14:02.200 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:14:02.243 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:14:02.300 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:14:02.301 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 198(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:14:02.392 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:14:31.650 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:14:31.653 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:14:31.744 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:14:32.344 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:14:32.346 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:14:32.391 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:14:32.444 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:14:32.445 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:14:32.450 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:14:32.451 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:14:32.498 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:14:32.535 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:14:32.551 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:14:32.552 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:14:32.597 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:14:32.646 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:14:32.647 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 207(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:14:32.738 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:15:15.657 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:15:15.658 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:15:15.706 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:15:15.758 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:15:15.759 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:15:15.805 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:15:15.867 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:15:15.870 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:15:15.963 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:16:08.332 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:16:08.333 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:16:08.475 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:16:08.933 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:16:08.934 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:16:08.983 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:16:09.040 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:16:09.041 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 118(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:16:09.136 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:17:51.447 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:17:51.448 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:17:51.542 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:17:51.599 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:17:51.600 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:17:51.648 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:17:51.702 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:17:51.703 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 291(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:17:51.817 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:18:44.073 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:18:44.075 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:18:44.125 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:18:44.180 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:18:44.181 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:18:44.227 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:18:44.283 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:18:44.285 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 219(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:18:44.377 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:19:19.153 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:19:19.156 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:19:19.248 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:19:20.283 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:19:20.284 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:19:20.338 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:19:20.395 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:19:20.397 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:19:20.442 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:19:20.497 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:19:20.499 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 218(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:19:20.598 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:19:20.599 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:19:20.601 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:19:20.653 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:19:20.789 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:19:20.791 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:19:21.044 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:20:20.249 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:20:20.252 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:20:20.301 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:20:20.358 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:20:20.359 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:20:20.406 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:20:20.461 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:20:20.466 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 222(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:20:20.566 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:38:25.932 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:38:25.943 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 34(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:38:26.038 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:38:26.619 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:38:26.620 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:38:26.677 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:38:26.735 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:38:26.737 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 120(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:38:26.828 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:38:26.929 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:38:26.930 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:38:26.975 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:38:27.026 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:38:27.026 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:38:27.072 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:38:27.128 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:38:27.129 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:38:27.220 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:09.373 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:09.381 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:09.578 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:10.350 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:52:10.351 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:52:10.398 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:52:10.454 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:10.455 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:10.545 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:10.727 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:52:10.729 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:52:10.776 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:10.848 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:52:10.849 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:52:10.894 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:10.950 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:10.951 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:11.038 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:17.562 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:17.564 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:17.657 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:18.125 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:52:18.126 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:52:18.143 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:52:18.143 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:52:18.177 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:18.189 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:52:18.227 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:52:18.228 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:52:18.246 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:18.247 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:18.271 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:18.323 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:18.325 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:18.339 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:18.417 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:58.381 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:58.384 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:58.472 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:58.916 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:52:58.916 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:52:58.963 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:52:59.022 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:59.024 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:59.114 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:52:59.217 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:52:59.217 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:52:59.266 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:59.324 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:52:59.325 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:52:59.391 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:52:59.445 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:52:59.447 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:52:59.541 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:01.495 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:01.496 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:01.587 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:02.130 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:54:02.131 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:54:02.157 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:54:02.158 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:54:02.178 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:54:02.207 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:54:02.228 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:54:02.229 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:54:02.259 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:02.260 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:02.272 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:54:02.352 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:02.359 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:02.360 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 197(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:02.454 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:37.883 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:37.884 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:37.975 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:38.603 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:54:38.604 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:54:38.611 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:54:38.612 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:54:38.650 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:54:38.661 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:54:38.703 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:54:38.704 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:54:38.714 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:38.716 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 117(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:38.749 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:54:38.804 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:54:38.805 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:54:38.806 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:54:38.897 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:38.573 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:38.575 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 6(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:38.770 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:39.287 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:55:39.288 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:55:39.349 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:55:39.404 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:39.405 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 177(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:39.496 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:55:39.538 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:55:39.539 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:55:39.585 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:55:39.638 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:55:39.639 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:55:39.683 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:55:39.738 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:55:39.740 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 203(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:55:39.836 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:57:01.666 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:57:01.668 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:57:01.758 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:57:02.143 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:57:02.144 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:57:02.190 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:57:02.242 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:57:02.243 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:57:02.287 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:57:02.343 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:57:02.345 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 205(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:57:02.434 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:57:02.454 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:57:02.455 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:57:02.502 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:57:02.557 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:57:02.558 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:57:02.649 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:00.604 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:00.605 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:00.696 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:01.195 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 16:58:01.196 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 16:58:01.246 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-05-25 16:58:01.299 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 16:58:01.301 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 16:58:01.346 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 16:58:01.402 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:01.403 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:01.495 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 16:58:01.496 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 16:58:01.518 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 16:58:01.542 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 16:58:01.596 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 16:58:01.598 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 16:58:01.688 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:06:12.436 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:06:12.444 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2034d1de](String), 1(Integer), null, POST(String), 450(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LioSAA0XmAAAy9lUatg0542.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 17:06:12.541 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:06:47.526 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.save.debug:159 -==>  Preparing: insert into bl_blog( blog_id, blog_title,blog_image, blog_content, blog_type, blog_remark, blog_source ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:06:47.528 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.BlogMapper.save.debug:159 -==> Parameters: 1264845357279064064(String), null, null, null, null, null, null
2020-05-25 17:06:47.999 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:06:48.000 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/save(String), [Blog(blogId=null, blogTitle=null, blogImage=null, blogContent=null, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), POST(String), 0(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:06:48.097 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:09:47.141 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:09:47.149 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@bbc3f07](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 17:09:47.240 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:09:48.475 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:09:48.476 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.save.debug:159 -==> Parameters: test(String), 098f6bcd4621d373cade4e832627b4f6(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), null
2020-05-25 17:09:48.571 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:09:48.623 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:09:48.624 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/save(String), [User(userId=null, username=test, password=098f6bcd4621d373cade4e832627b4f6, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 157(Long), {"code":20000,"msg":"添加成功"}(String), 127.0.0.1(String)
2020-05-25 17:09:48.714 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:09:49.129 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:09:49.130 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:09:49.180 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:09:49.237 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:09:49.238 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:09:49.285 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:09:49.337 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:09:49.339 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:09:48","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:09:49.434 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:09:57.837 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:09:57.838 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:09:57.904 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:09:57.961 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:09:57.963 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 351(Long), {"code":20000,"data":{"name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:09:58.051 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:10:03.749 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:10:03.750 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:10:03.797 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:10:03.862 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:10:03.864 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 122(Long), {"code":20000,"data":{"name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:10:03.952 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:16:06.960 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:16:06.965 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:16:07.021 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:16:07.085 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:16:07.088 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 166(Long), {"code":20000,"data":{"name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:16:07.177 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:17:21.556 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:17:21.557 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:17:21.609 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:17:21.673 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:17:21.674 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 116(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:17:22.024 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:39.601 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:39.609 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 47(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:39.704 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:40.487 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:19:40.488 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:19:40.534 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:19:40.535 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:19:40.539 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:19:40.585 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:19:40.594 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:40.595 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 356(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:40.637 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:19:40.638 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:19:40.802 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:19:40.856 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:40.858 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), POST(String), 611(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:09:48","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:40.949 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:40.957 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:44.182 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:19:44.183 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:19:44.230 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:19:44.283 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:44.284 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 103(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:44.376 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:52.968 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? where user_id = ? and version = ? 
2020-05-25 17:19:52.969 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: test(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), 3(Integer), 1(Integer)
2020-05-25 17:19:53.065 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:19:53.117 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:53.118 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=null, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 263(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:19:53.211 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:53.632 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:19:53.633 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:19:53.679 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:19:53.731 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:19:53.732 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:19:53.778 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:19:53.830 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:53.831 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:09:48, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 200(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:19:53","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:53.921 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:19:56.511 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:19:56.512 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:19:56.558 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:19:56.640 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:19:56.642 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 108(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:19:56.762 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:24.839 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? where user_id = ? and version = ? 
2020-05-25 17:20:24.841 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: test(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), 3(Integer), 2(Integer)
2020-05-25 17:20:24.936 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:20:24.995 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:24.996 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=null, updateTime=null, version=2, deleted=null)](String), 1(Integer), null, PUT(String), 164(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:20:25.087 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:25.511 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:20:25.511 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:20:25.557 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:20:25.612 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:20:25.612 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:20:25.657 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:20:25.716 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:25.717 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:19:53, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 202(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:20:25","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:25.808 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:28.397 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:20:28.397 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:20:28.445 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:20:28.495 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:28.496 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 105(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":3},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:28.587 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:46.199 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:46.201 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:46.396 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:46.899 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:20:46.901 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:20:46.905 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:20:46.906 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:20:46.946 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:20:46.955 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:20:47.013 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:47.014 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:47.018 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:20:47.020 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:20:47.065 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:20:47.103 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:47.122 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:47.124 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 228(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:20:25","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:47.218 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:49.848 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:20:49.849 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:20:49.895 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:20:49.971 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:49.974 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 100(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":3},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:50.065 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:57.470 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? where user_id = ? and version = ? 
2020-05-25 17:20:57.472 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: test(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), 3(Integer), 3(Integer)
2020-05-25 17:20:57.564 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:20:57.622 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:57.623 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=null, updateTime=null, version=3, deleted=null)](String), 1(Integer), null, PUT(String), 164(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:20:57.715 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:58.132 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:20:58.133 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:20:58.176 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:20:58.227 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:20:58.227 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:20:58.272 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:20:58.332 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:20:58.334 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:20:25, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 199(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:20:57","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:20:58.423 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:20:59.972 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:20:59.973 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:21:00.018 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:21:00.069 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:00.070 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 110(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":4},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:00.158 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:32.863 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:32.865 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:32.959 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:33.583 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:21:33.584 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:21:33.588 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:21:33.589 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:21:33.632 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:21:33.635 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:21:33.691 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:21:33.692 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:21:33.697 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:33.699 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:33.737 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:21:33.788 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:33.790 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:33.791 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:20:57","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:33.880 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:36.068 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:21:36.069 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:21:36.112 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:21:36.163 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:36.164 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 101(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":4},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:36.253 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:44.665 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? where user_id = ? and version = ? 
2020-05-25 17:21:44.666 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: test(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), 3(Integer), 4(Integer)
2020-05-25 17:21:44.781 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:21:44.839 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:44.841 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=null, updateTime=null, version=4, deleted=null)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), PUT(String), 262(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:21:44.936 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:45.028 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:21:45.030 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:21:45.074 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:21:45.127 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:21:45.128 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:21:45.174 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:21:45.234 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:45.236 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:20:57, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:45.322 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:21:47.723 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:21:47.723 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:21:47.769 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:21:47.818 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:21:47.819 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 201(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":5},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:21:47.909 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:24.925 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:24.926 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:25.013 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:25.579 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:23:25.580 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:23:25.584 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:23:25.585 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:23:25.625 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:23:25.632 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:23:25.679 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:25.680 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 108(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:25.687 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:23:25.687 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:23:25.731 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:23:25.768 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:25.786 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:25.787 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 08:03:14","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:25.887 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:30.771 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:23:30.772 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:23:30.819 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:23:30.878 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:30.879 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 106(Long), {"code":20000,"data":{"name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:30.976 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:43.366 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:43.367 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@52d8486e](String), 1(Integer), null, POST(String), 139(Long), {"code":20000,"data":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","msg":"上传成功"}(String), 127.0.0.1(String)
2020-05-25 17:23:43.460 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:44.614 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? where user_id = ? and version = ? 
2020-05-25 17:23:44.615 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: 鸡哥(String), 23(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg(String), 鲜肉(String), 1(Integer), 1(Integer)
2020-05-25 17:23:44.706 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:23:44.755 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:44.756 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg, nickname=鲜肉, userEmail=null, createdTime=null, updateTime=null, version=1, deleted=null)](String), 1(Integer), null, PUT(String), 146(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:23:44.846 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:45.251 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:23:45.252 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:23:45.298 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:23:45.349 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:23:45.350 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:23:45.394 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:23:45.456 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:45.457 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=null, nickname=鲜肉, userEmail=null, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 08:03:14, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:21:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 199(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:23:44","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:45.548 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:23:47.911 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:23:47.912 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:23:47.957 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:23:48.034 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:23:48.036 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), POST(String), 102(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:23:48.128 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:27:16.440 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:27:16.443 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:27:16.533 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:27:16.879 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:27:16.880 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:27:16.928 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:27:16.984 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:27:16.985 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:27:17.079 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:27:19.501 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:27:19.502 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:27:19.550 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:27:19.610 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:27:19.611 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:27:19.658 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:27:19.715 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:27:19.716 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 214(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:23:44","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:27:19.810 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:27:23.490 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:27:23.491 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:27:23.538 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:27:23.612 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:27:23.615 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 104(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"userId":1,"username":"鸡哥","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:27:23.708 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:56.131 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:56.135 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:56.233 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:56.857 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:30:56.858 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:30:56.862 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:30:56.863 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:30:56.905 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:30:56.911 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:30:56.970 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:30:56.971 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:30:56.975 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:56.977 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 121(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:57.014 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:30:57.075 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:57.081 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:30:57.083 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 225(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:30:57.183 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:30:59.967 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:30:59.968 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:31:00.014 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:00.067 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:00.069 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 102(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"userEmail":"123@qq.com","userId":1,"username":"鸡哥","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:00.160 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:47.189 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:47.190 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:47.331 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:47.813 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 17:31:47.814 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 17:31:47.859 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 17:31:47.914 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:47.916 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
; Column 'blog_title' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:45)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$e8c4fc4d.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$6aae922f.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:38)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:66)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1a55ac87.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_title' cannot be null
(String), GET(String), 106(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:48.004 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:48.115 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:31:48.116 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:31:48.162 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:31:48.232 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:31:48.235 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:31:48.283 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:31:48.339 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:48.340 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:21:44","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:48.534 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:52.163 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:31:52.165 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-05-25 17:31:52.212 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:52.266 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:52.268 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/1(String), [1](String), 1(Integer), null, POST(String), 114(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"userEmail":"123@qq.com","userId":1,"username":"鸡哥","version":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:52.358 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:31:57.331 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:31:57.332 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:31:57.379 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:31:57.438 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:31:57.439 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 102(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userId":3,"username":"test","version":5},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:31:57.529 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:32:07.055 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and version = ? 
2020-05-25 17:32:07.056 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: test(String), 张三(String), 1(Integer), http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png(String), 张三(String), 12345678@qq.com(String), 3(Integer), 5(Integer)
2020-05-25 17:32:07.248 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 17:32:07.364 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:32:07.365 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=12345678@qq.com, createdTime=null, updateTime=null, version=5, deleted=null)](String), 1(Integer), null, PUT(String), 370(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-05-25 17:32:07.762 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:32:07.981 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 17:32:07.982 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 17:32:08.046 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 17:32:08.177 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 17:32:08.178 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 17:32:08.277 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 17:32:08.386 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:32:08.388 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=1, username=鸡哥, password=null, name=23, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg, nickname=鲜肉, userEmail=123@qq.com, createdTime=2020-05-25 07:53:40, updateTime=2020-05-25 09:30:48, version=null, deleted=null), User(userId=3, username=test, password=null, name=张三, sex=1, header=http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png, nickname=张三, userEmail=null, createdTime=2020-05-25 09:09:48, updateTime=2020-05-25 09:21:44, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 463(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:32:08.582 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 17:32:10.542 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, version from bl_user where user_id = ? and deleted = 0 
2020-05-25 17:32:10.543 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-05-25 17:32:10.627 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-05-25 17:32:10.741 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 17:32:10.744 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, POST(String), 242(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"userEmail":"12345678@qq.com","userId":3,"username":"test","version":6},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 17:32:10.937 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:06:49.257 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 18:11:51.812 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 18:11:51.863 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 18:11:51.956 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 18:11:52.142 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:11:52.148 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)](String), 1(Integer), null, POST(String), 281(Long), {"code":40002,"msg":"用户名或密码错误!"}(String), 127.0.0.1(String)
2020-05-25 18:11:52.252 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:11:57.777 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 18:11:57.778 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 18:11:57.825 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 18:11:57.883 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:11:57.885 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 106(Long), {"code":20000,"data":{"token":"9C0067671F9E771071533B2FEA72DEA3"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:11:57.975 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:11:58.375 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:11:58.376 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:11:58.469 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:11:58.895 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:11:58.897 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:11:58.951 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:11:59.006 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:11:59.007 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:11:59.064 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:11:59.158 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:11:59.159 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 287(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:11:59.206 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:11:59.207 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:11:59.253 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:11:59.253 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:11:59.322 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:11:59.324 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:11:59.418 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:36:01.892 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:36:01.896 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:36:01.902 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:36:01.904 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 28(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:36:02.012 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:36:02.033 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:36:02.087 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:36:02.092 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:36:02.141 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:36:02.198 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:36:02.200 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 665(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:36:02.290 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:36:02.515 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:36:02.516 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:36:02.564 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:36:02.630 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:36:02.632 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:36:02.677 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:36:02.736 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:36:02.737 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:36:02.820 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:36:02.821 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:36:02.828 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:36:02.866 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:36:02.924 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:36:02.927 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:36:03.022 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:42:31.859 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:42:31.904 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:42:31.956 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:42:32.018 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:42:32.019 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:42:32.065 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:42:32.124 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:42:32.126 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 318(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:42:32.218 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:44:52.560 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:44:52.561 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:44:52.655 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:44:53.457 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:44:53.460 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:44:53.522 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:44:53.579 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:44:53.581 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 132(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:44:53.673 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:44:54.267 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:44:54.280 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:44:54.405 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:44:54.481 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:44:54.482 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:44:54.528 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:44:54.597 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:44:54.599 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 722(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:44:54.694 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:45:19.360 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:45:19.470 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:45:19.595 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:45:19.753 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:45:19.754 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:45:19.804 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:45:19.868 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:45:19.870 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 503(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:45:19.967 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:47:19.411 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:47:19.417 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:47:19.516 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:47:20.049 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:47:20.050 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:47:20.070 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:47:20.071 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:47:20.101 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:47:20.118 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:47:20.182 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:47:20.184 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:47:20.233 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:47:20.234 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:47:20.372 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:47:20.380 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:47:20.381 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 340(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:47:20.466 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:47:20.474 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:50:19.243 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:50:19.246 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:50:19.381 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:50:19.437 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:50:19.438 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:50:19.486 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:50:19.542 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:50:19.545 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 315(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:50:19.639 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:50:56.495 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:50:56.499 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:50:56.592 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:50:57.163 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:50:57.164 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:50:57.173 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:50:57.175 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:50:57.213 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:50:57.226 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:50:57.271 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:50:57.273 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:50:57.283 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:50:57.284 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:50:57.328 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:50:57.366 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:50:57.745 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:50:57.746 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 224(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:50:57.840 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:51:47.332 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:51:47.334 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:51:47.381 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:51:47.436 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:51:47.436 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:51:47.482 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:51:47.533 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:51:47.535 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 256(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:51:47.627 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:52:55.385 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:52:55.387 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:52:55.438 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:52:55.491 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:52:55.492 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:52:55.537 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:52:55.593 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:52:55.595 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 227(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:52:55.688 DEBUG [http-nio-1001-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:53:28.477 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:53:28.479 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:53:28.529 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:53:28.587 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:53:28.588 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:53:28.634 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:53:28.690 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:53:28.691 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 220(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:53:28.786 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:53:44.105 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:53:44.106 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:53:44.154 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:53:44.208 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:53:44.209 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:53:44.254 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:53:44.311 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:53:44.313 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 204(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:53:44.408 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:54:30.494 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:54:30.495 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:54:30.565 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:54:30.639 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:54:30.640 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:54:30.684 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:54:30.736 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:54:30.737 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 250(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:54:30.831 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:58:27.256 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 18:59:37.606 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 18:59:37.651 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 18:59:37.825 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 18:59:38.094 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:59:38.099 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 432(Long), {"code":20000,"data":{"token":"41306E8AFAB453713FBF396C3DBAF33A"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:59:38.264 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:59:38.443 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:59:38.444 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:59:38.539 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:59:39.314 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 18:59:39.315 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 18:59:39.368 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 18:59:39.396 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 18:59:39.398 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 18:59:39.430 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:59:39.432 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 128(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:59:39.446 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 18:59:39.497 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 18:59:39.498 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 18:59:39.522 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 18:59:39.543 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 18:59:39.615 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 18:59:39.618 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 249(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 18:59:39.709 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:02:57.329 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:02:57.332 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:02:57.423 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:02:57.793 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 19:02:57.794 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 19:02:57.844 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 19:02:57.901 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:02:57.904 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:02:57.925 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:02:57.927 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 5(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:02:57.995 DEBUG [http-nio-1001-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:02:58.401 DEBUG [http-nio-1001-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:02:58.662 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 19:02:58.663 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 19:02:58.717 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 19:02:58.785 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:02:58.787 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 115(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:02:58.881 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:03:31.051 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 19:03:31.052 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 19:03:31.099 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 19:03:31.153 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 19:03:31.156 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 19:03:31.203 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 19:03:31.281 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:03:31.283 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 325(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:03:31.381 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:05:25.935 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 19:06:20.009 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 19:06:20.055 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 19:06:20.147 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 19:06:20.338 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:20.345 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 258(Long), {"code":20000,"data":{"token":"7B81EA4DF02E9E72D5A42AB939FE3477"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:20.434 DEBUG [http-nio-1001-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:06:20.900 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:20.902 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 4(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:20.994 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:06:21.270 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 19:06:21.271 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 19:06:21.322 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 19:06:21.386 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:21.387 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 126(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:21.490 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:06:24.700 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 19:06:24.701 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 19:06:24.754 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 19:06:24.805 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 19:06:24.806 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 19:06:24.859 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 19:06:24.923 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:24.924 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 262(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:25.014 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:06:38.356 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2020-05-25 19:06:38.358 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2020-05-25 19:06:38.403 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2020-05-25 19:06:38.460 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:38.462 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:38.554 DEBUG [http-nio-1001-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:06:45.189 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 19:06:45.192 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 19:06:45.239 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 19:06:45.298 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 19:06:45.299 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 19:06:45.344 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 19:06:45.398 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:06:45.399 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 213(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:06:45.488 DEBUG [http-nio-1001-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:08:24.006 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:08:24.010 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 18(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:08:24.112 DEBUG [http-nio-1001-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:08:24.724 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 19:08:24.725 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 19:08:24.772 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 19:08:24.829 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:08:24.830 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 384(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:08:24.924 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:08:27.660 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-05-25 19:08:27.661 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-05-25 19:08:27.714 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-05-25 19:08:27.779 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-05-25 19:08:27.780 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-05-25 19:08:27.827 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-05-25 19:08:27.891 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:08:27.893 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 236(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-05-25 07:53:40","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Ljp-AHExDAAArr4MOxxQ281.jpg","name":"23","nickname":"鲜肉","sex":1,"updateTime":"2020-05-25 09:30:48","userEmail":"123@qq.com","userId":1,"username":"鸡哥"},{"createdTime":"2020-05-25 09:09:48","header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7Li1uAbVdHAAAy9lUatg0354.png","name":"张三","nickname":"张三","sex":1,"updateTime":"2020-05-25 09:32:07","userEmail":"12345678@qq.com","userId":3,"username":"test"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 19:08:27.990 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 19:08:30.124 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByIds.debug:159 -==>  Preparing: select user_id, version from bl_user where user_id in ( ? , ? ) and deleted = 0 
2020-05-25 19:08:30.126 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByIds.debug:159 -==> Parameters: 1(Integer), 3(Integer)
2020-05-25 19:08:30.177 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.getByIds.debug:159 -<==      Total: 2
2020-05-25 19:08:30.239 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-05-25 19:08:30.240 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 1(Integer), 2(Integer)
2020-05-25 19:08:30.334 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 19:08:30.393 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-05-25 19:08:30.394 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 6(Integer)
2020-05-25 19:08:30.492 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-05-25 19:08:30.551 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 19:08:30.552 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/resetPwd(String), [[1, 3]](String), 1(Integer), null, PUT(String), 437(Long), {"code":20000,"msg":"重置完毕"}(String), 127.0.0.1(String)
2020-05-25 19:08:30.652 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:39:02.580 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-05-25 20:39:59.221 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2020-05-25 20:39:59.263 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2020-05-25 20:39:59.348 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-05-25 20:39:59.570 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:39:59.576 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e807f1fcf82d132f9bb018ca6738a19f)](String), 1(Integer), null, POST(String), 241(Long), {"code":20000,"data":{"token":"1AD019728F45E8C0260633B5E18E280B"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:39:59.668 DEBUG [http-nio-1001-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:39:59.975 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:39:59.977 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","name":"稽哥66","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:40:00.066 DEBUG [http-nio-1001-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-05-25 20:40:00.640 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-05-25 20:40:00.641 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-05-25 20:40:00.691 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 6
2020-05-25 20:40:00.750 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-05-25 20:40:00.752 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"typeBlogCount":6,"typeId":1,"typeName":"java"},{"typeBlogCount":3,"typeId":2,"typeName":"linux"},{"typeBlogCount":0,"typeId":3,"typeName":"docker"},{"typeBlogCount":0,"typeId":4,"typeName":"springboot"},{"typeBlogCount":0,"typeId":5,"typeName":"nginx"},{"typeBlogCount":0,"typeId":6,"typeName":"mybatis"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2020-05-25 20:40:00.848 DEBUG [http-nio-1001-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
