2020-06-06 14:29:07.394 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 20180 (E:\Idea代码\blog\target\classes started by adminstrator in E:\Idea代码\blog)
2020-06-06 14:29:07.488 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 14:29:29.395 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 14:29:29.704 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 249ms. Found 0 MongoDB repository interfaces.
2020-06-06 14:29:33.144 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6d64d250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:33.421 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:33.444 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$53b810cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:33.451 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3a8fb50e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:33.455 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 14:29:34.049 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:34.089 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:34.306 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:46.520 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 14:29:46.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:46.728 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.658 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.718 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.742 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.752 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.816 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userMapper' of type [com.sun.proxy.$Proxy80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.834 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:53.840 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:54.149 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:54.334 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 14:29:56.634 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:108 -Tomcat initialized with port(s): 1001 (http)
2020-06-06 14:29:56.707 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-06-06 14:29:56.708 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-06 14:29:56.710 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-06 14:29:57.772 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-06 14:29:57.774 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 48007 ms
2020-06-06 14:30:06.545 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2020-06-06 14:30:08.058 INFO  [cluster-ClusterId{value='5edb37ee9a2f72726afe9a0a', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:127)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:63)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-06-06 14:30:13.776 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-06-06 14:30:13.840 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:220 -Tomcat started on port(s): 1001 (http) with context path ''
2020-06-06 14:30:14.069 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 79.15 seconds (JVM running for 91.38)
2020-06-06 14:31:26.645 INFO  [http-nio-1001-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-06 14:31:26.645 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-06 14:31:26.700 INFO  [http-nio-1001-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 54 ms
2020-06-06 14:31:26.961 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 14:31:26.961 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 14:31:26.963 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:26.963 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:26.963 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:26.963 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:26.961 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:31:26.970 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:26.972 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:26.989 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 14:31:26.990 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:31:26.991 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:26.991 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:26.993 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 14:31:26.993 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:27.891 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:31:27.892 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:27.892 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:27.893 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:31:27.896 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:31:28.253 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1292
2020-06-06 14:31:28.256 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1295
2020-06-06 14:31:28.262 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1301
2020-06-06 14:31:28.267 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-27 06:56:38","linkId":1,"linkName":"3","linkUrl":"https://www.aliyun.com/","updateTime":"2020-05-31 10:02:41"},{"createdTime":"2020-05-27 07:20:05","linkId":2,"linkName":"组件","linkUrl":"https://www.antdv.com/components/upload-cn/","updateTime":"2020-05-31 10:02:23"}],"msg":"操作成功！"}
2020-06-06 14:31:28.278 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_jSANxGXAAAOurxSY9A094.jpg","id":3,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\r\n[00:01.62]作词：Ming.明\r\n[00:02.33]作曲：Pig小优\r\n[00:03.08]编曲：Pig小优\r\n[00:03.84]后期：Pig小优\r\n[00:04.54]美工：张小喵\r\n[00:09.15]踏红船繁华似人间\r\n[00:12.03]灯火熙攘祈愿\r\n[00:14.00]手中红线姻缘何时现\r\n[00:17.57]薄雾小雨润如烟\r\n[00:19.94]灯中画舫烟中浅\r\n[00:24.93]这尘缘如惊鸿一面\r\n[00:27.85]谁家翩翩少年\r\n[00:29.85]桥边白衣如纤印心间\r\n[00:33.34]这世间情话誓言\r\n[00:35.81]不抵这柔情一眼\r\n[00:40.79]步儿缓红绳缠\r\n[00:42.70]石桥边灯火染\r\n[00:44.72]杯中仙促长谈\r\n[00:46.79]舷外雨声人言难断\r\n[00:49.71]已成烟已消散\r\n[00:51.62]化作春意满\r\n[00:55.75]晚来风寒心却暖\r\n[00:57.57]三两杯酒后情又添\r\n[01:00.08]暮鼓丝弦声声慢\r\n[01:02.36]有佳人舞芊芊\r\n[01:04.32]研磨提笔在画卷眉目间流转\r\n[01:08.49]细雨婵娟\r\n[01:12.25]醉卧画舫听雨眠一场梦无言\r\n[01:15.93]窗外依旧喧怎转眼桥上人不见\r\n[01:20.46]回眸深处看细雨茫茫如烟\r\n[01:24.10]苦了思念\r\n[01:44.22]步儿缓红绳缠\r\n[01:46.18]石桥边灯火染\r\n[01:48.20]杯中仙促长谈\r\n[01:50.21]舷外雨声人言难断\r\n[01:53.18]已成烟已消散\r\n[01:55.15]化作春意满\r\n[01:59.25]晚来风寒心却暖\r\n[02:01.16]三两杯酒后情又添\r\n[02:03.53]暮鼓丝弦声声慢\r\n[02:05.74]有佳人舞芊芊\r\n[02:07.80]研磨提笔在画卷眉目间流转\r\n[02:12.03]细雨婵娟\r\n[02:15.69]醉卧画舫听雨眠一场梦无言\r\n[02:19.42]窗外依旧喧怎转眼桥上人不见\r\n[02:23.95]回眸深处看细雨茫茫如烟\r\n[02:27.58]苦了思念\r\n[02:43.49]青山乌蓬伴流年繁华多阑珊\r\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\r\n[02:51.46]满纸柔情过指尖笔墨笑意染\r\n[02:55.64]长袖翩翩\r\n[02:59.52]醉卧画舫听雨眠一场梦无言\r\n[03:03.10]窗外依旧喧怎转眼桥上人不见\r\n[03:07.48]回眸深处看水中喜字红残\r\n[03:11.31]倒了人间\r\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_kqALftcAInbwpYfM3A951.mp3"},{"artist":"逃跑计划 ","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_v2AYruxAAAQjTIrrnM921.jpg","id":4,"lrc":"[00:00.58]逃跑计划 - 一万次悲伤\r\n[00:00.58]词：毛川\\/李赤\r\n[00:00.58]曲：逃跑计划\r\n[00:00.58]Oh honey\r\n[00:03.12]我脑海里全都是你\r\n[00:08.45]Oh 无法抗拒的心情\r\n[00:13.02]难以呼吸\r\n[00:16.22]Tonight\r\n[00:18.45]是否又要错过一个夜晚\r\n[00:23.34]是否还要掩饰最后的期待\r\n[00:28.22]Oh tonight\r\n[00:30.66]一万次悲伤\r\n[00:32.95]依然会有dream\r\n[00:36.08]我一直在最温暖的地方等你\r\n[00:40.96]似乎只能这样\r\n[00:43.61]停留一个方向\r\n[00:46.83]已不能改变\r\n[00:51.12]每一颗眼泪是一万道光\r\n[00:56.92]最昏暗的地方也变得明亮\r\n[01:02.00]我奔涌的暖流\r\n[01:04.43]寻找你的海洋\r\n[01:07.36]我注定这样\r\n[01:13.71]Oh honey\r\n[01:16.27]你目光里充满忧郁\r\n[01:21.40]就像经历一遍飞行\r\n[01:26.13]难以逃避\r\n[01:29.28]Tonight\r\n[01:31.53]是否还要错过这个夜晚\r\n[01:36.13]是否还要熄灭所有的期待\r\n[01:41.44]Oh tonight\r\n[01:43.71]一万次悲伤\r\n[01:46.04]依然会有dream\r\n[01:48.84]我一直在最后的地方等你\r\n[01:54.09]似乎只能这样\r\n[01:56.58]停留一个方向\r\n[01:59.88]已不能改变\r\n[02:04.20]每一颗眼泪是一万道光\r\n[02:09.69]最昏暗的地方也变得明亮\r\n[02:14.92]我奔涌的暖流\r\n[02:17.56]寻找你的海洋\r\n[02:20.76]我注定这样\r\n[03:07.42]一万次悲伤\r\n[03:09.44]依然会有dream\r\n[03:12.03]我一直在最后的地方等你\r\n[03:17.57]似乎只能这样\r\n[03:20.06]停留一个方向\r\n[03:23.36]已不能改变\r\n[03:27.71]每一颗眼泪是一万道光\r\n[03:33.23]最昏暗的地方也变得明亮\r\n[03:38.41]我奔涌的暖流\r\n[03:41.10]寻找你的海洋\r\n[03:44.15]我注定这样\r\n[03:55.51]Oh honey\r\n[03:58.10]我脑海里全都是你\r\n[04:02.93]Oh 无法抗拒的心情\r\n[04:07.76]难以呼吸","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_yCAXwcSAJ5SAlaB8pA956.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_4GAe9kIAACJ_hvYA4w281.jpg","id":5,"lrc":"[00:01.997]作词 : 薛之谦\r\n[00:03.929]作曲 : 薛之谦\r\n[00:06.012]\r\n[00:17.154]听专情的古人 把美言留给最爱的人\r\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\r\n[00:33.070]你没读懂课本 可世人硬要捧\r\n[00:41.350]看感情里的人 用肉眼分出三六九等\r\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\r\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\r\n[01:11.813]\r\n[01:12.202]所以 当我们都变成木偶人\r\n[01:17.471]你何苦再做一个痴情人表忠贞\r\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\r\n[01:29.805]\r\n[01:30.107]让我们都变成木偶人\r\n[01:33.678]再缝几针爱几次后就不会疼\r\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\r\n[01:46.963]\r\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\r\n[01:58.724]现在相爱的人 能耍的方式五花八门\r\n[02:07.230]要一式要两份 把热吻当罪证\r\n[02:15.298]让动了情的人 还要去分辨好人坏人\r\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\r\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\r\n[02:46.341]\r\n[02:46.606]所以 当我们都变成木偶人\r\n[02:51.507]你何苦再做一个痴情人表忠贞\r\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\r\n[03:03.407]\r\n[03:03.825]让我们都变成木偶人\r\n[03:07.373]再缝几针爱几次后就不会疼\r\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\r\n[03:21.158]\r\n[03:36.779]没有人能变成木偶人\r\n[03:39.795]无非是在感情里的逃避过程\r\n[03:43.999]我们盛气凌人 掩饰无权过问\r\n[03:48.773]遇见谁要拆几针\r\n[03:52.354]\r\n[03:52.631]当我们都羡慕木偶人\r\n[03:55.899]学会他在场面上的玩弄过程\r\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\r\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\r\n[04:23.520]\r\n[04:24.454]制作人 : 陈迪@TalentUnion\r\n[04:25.387]编曲 : 陈迪\r\n[04:26.274]吉他 : 劳国贤\r\n[04:27.357]贝斯 : 崔文正\r\n[04:28.378]鼓 : 王鹏\r\n[04:29.346]弦乐团 : 中国爱乐乐团\r\n[04:30.319]人声监制 : 杨祎\r\n[04:31.323]缩混 : 杨祎@RaySound Studio\r\n[04:32.382]母带 : 鲍锐@录顶技","name":"薛之谦 - 木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_5mAAblnALOdTG6b5MA045.mp3"}],"msg":"操作成功！"}
2020-06-06 14:31:28.307 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:31:28.586 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 695
2020-06-06 14:31:28.613 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:31:46.959 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/login
2020-06-06 14:31:46.961 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:46.962 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:46.964 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.login
2020-06-06 14:31:46.965 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu1, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 14:31:47.154 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 195
2020-06-06 14:31:47.165 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"user":{"deleted":0,"nickname":"老王11","password":"","userEmail":"2074623967@qq.com","userId":4,"username":"tangtu1"},"token":"C284896C92E251CEC6968913656579B8"},"msg":"操作成功！"}
2020-06-06 14:31:48.056 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:31:48.057 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:48.057 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:48.058 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:31:48.058 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:31:48.118 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:31:48.119 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:48.120 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:48.120 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:31:48.121 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:48.168 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/getAdmin
2020-06-06 14:31:48.169 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:48.169 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:48.170 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getAdmin
2020-06-06 14:31:48.171 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:48.172 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 14:31:48.173 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:48.169 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 14:31:48.174 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:48.176 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:48.177 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:48.177 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 14:31:48.178 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:48.176 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 14:31:48.183 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:48.345 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 227
2020-06-06 14:31:48.347 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:31:48.459 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 290
2020-06-06 14:31:48.462 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 294
2020-06-06 14:31:48.461 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_jSANxGXAAAOurxSY9A094.jpg","id":3,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\r\n[00:01.62]作词：Ming.明\r\n[00:02.33]作曲：Pig小优\r\n[00:03.08]编曲：Pig小优\r\n[00:03.84]后期：Pig小优\r\n[00:04.54]美工：张小喵\r\n[00:09.15]踏红船繁华似人间\r\n[00:12.03]灯火熙攘祈愿\r\n[00:14.00]手中红线姻缘何时现\r\n[00:17.57]薄雾小雨润如烟\r\n[00:19.94]灯中画舫烟中浅\r\n[00:24.93]这尘缘如惊鸿一面\r\n[00:27.85]谁家翩翩少年\r\n[00:29.85]桥边白衣如纤印心间\r\n[00:33.34]这世间情话誓言\r\n[00:35.81]不抵这柔情一眼\r\n[00:40.79]步儿缓红绳缠\r\n[00:42.70]石桥边灯火染\r\n[00:44.72]杯中仙促长谈\r\n[00:46.79]舷外雨声人言难断\r\n[00:49.71]已成烟已消散\r\n[00:51.62]化作春意满\r\n[00:55.75]晚来风寒心却暖\r\n[00:57.57]三两杯酒后情又添\r\n[01:00.08]暮鼓丝弦声声慢\r\n[01:02.36]有佳人舞芊芊\r\n[01:04.32]研磨提笔在画卷眉目间流转\r\n[01:08.49]细雨婵娟\r\n[01:12.25]醉卧画舫听雨眠一场梦无言\r\n[01:15.93]窗外依旧喧怎转眼桥上人不见\r\n[01:20.46]回眸深处看细雨茫茫如烟\r\n[01:24.10]苦了思念\r\n[01:44.22]步儿缓红绳缠\r\n[01:46.18]石桥边灯火染\r\n[01:48.20]杯中仙促长谈\r\n[01:50.21]舷外雨声人言难断\r\n[01:53.18]已成烟已消散\r\n[01:55.15]化作春意满\r\n[01:59.25]晚来风寒心却暖\r\n[02:01.16]三两杯酒后情又添\r\n[02:03.53]暮鼓丝弦声声慢\r\n[02:05.74]有佳人舞芊芊\r\n[02:07.80]研磨提笔在画卷眉目间流转\r\n[02:12.03]细雨婵娟\r\n[02:15.69]醉卧画舫听雨眠一场梦无言\r\n[02:19.42]窗外依旧喧怎转眼桥上人不见\r\n[02:23.95]回眸深处看细雨茫茫如烟\r\n[02:27.58]苦了思念\r\n[02:43.49]青山乌蓬伴流年繁华多阑珊\r\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\r\n[02:51.46]满纸柔情过指尖笔墨笑意染\r\n[02:55.64]长袖翩翩\r\n[02:59.52]醉卧画舫听雨眠一场梦无言\r\n[03:03.10]窗外依旧喧怎转眼桥上人不见\r\n[03:07.48]回眸深处看水中喜字红残\r\n[03:11.31]倒了人间\r\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_kqALftcAInbwpYfM3A951.mp3"},{"artist":"逃跑计划 ","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_v2AYruxAAAQjTIrrnM921.jpg","id":4,"lrc":"[00:00.58]逃跑计划 - 一万次悲伤\r\n[00:00.58]词：毛川\\/李赤\r\n[00:00.58]曲：逃跑计划\r\n[00:00.58]Oh honey\r\n[00:03.12]我脑海里全都是你\r\n[00:08.45]Oh 无法抗拒的心情\r\n[00:13.02]难以呼吸\r\n[00:16.22]Tonight\r\n[00:18.45]是否又要错过一个夜晚\r\n[00:23.34]是否还要掩饰最后的期待\r\n[00:28.22]Oh tonight\r\n[00:30.66]一万次悲伤\r\n[00:32.95]依然会有dream\r\n[00:36.08]我一直在最温暖的地方等你\r\n[00:40.96]似乎只能这样\r\n[00:43.61]停留一个方向\r\n[00:46.83]已不能改变\r\n[00:51.12]每一颗眼泪是一万道光\r\n[00:56.92]最昏暗的地方也变得明亮\r\n[01:02.00]我奔涌的暖流\r\n[01:04.43]寻找你的海洋\r\n[01:07.36]我注定这样\r\n[01:13.71]Oh honey\r\n[01:16.27]你目光里充满忧郁\r\n[01:21.40]就像经历一遍飞行\r\n[01:26.13]难以逃避\r\n[01:29.28]Tonight\r\n[01:31.53]是否还要错过这个夜晚\r\n[01:36.13]是否还要熄灭所有的期待\r\n[01:41.44]Oh tonight\r\n[01:43.71]一万次悲伤\r\n[01:46.04]依然会有dream\r\n[01:48.84]我一直在最后的地方等你\r\n[01:54.09]似乎只能这样\r\n[01:56.58]停留一个方向\r\n[01:59.88]已不能改变\r\n[02:04.20]每一颗眼泪是一万道光\r\n[02:09.69]最昏暗的地方也变得明亮\r\n[02:14.92]我奔涌的暖流\r\n[02:17.56]寻找你的海洋\r\n[02:20.76]我注定这样\r\n[03:07.42]一万次悲伤\r\n[03:09.44]依然会有dream\r\n[03:12.03]我一直在最后的地方等你\r\n[03:17.57]似乎只能这样\r\n[03:20.06]停留一个方向\r\n[03:23.36]已不能改变\r\n[03:27.71]每一颗眼泪是一万道光\r\n[03:33.23]最昏暗的地方也变得明亮\r\n[03:38.41]我奔涌的暖流\r\n[03:41.10]寻找你的海洋\r\n[03:44.15]我注定这样\r\n[03:55.51]Oh honey\r\n[03:58.10]我脑海里全都是你\r\n[04:02.93]Oh 无法抗拒的心情\r\n[04:07.76]难以呼吸","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_yCAXwcSAJ5SAlaB8pA956.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_4GAe9kIAACJ_hvYA4w281.jpg","id":5,"lrc":"[00:01.997]作词 : 薛之谦\r\n[00:03.929]作曲 : 薛之谦\r\n[00:06.012]\r\n[00:17.154]听专情的古人 把美言留给最爱的人\r\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\r\n[00:33.070]你没读懂课本 可世人硬要捧\r\n[00:41.350]看感情里的人 用肉眼分出三六九等\r\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\r\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\r\n[01:11.813]\r\n[01:12.202]所以 当我们都变成木偶人\r\n[01:17.471]你何苦再做一个痴情人表忠贞\r\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\r\n[01:29.805]\r\n[01:30.107]让我们都变成木偶人\r\n[01:33.678]再缝几针爱几次后就不会疼\r\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\r\n[01:46.963]\r\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\r\n[01:58.724]现在相爱的人 能耍的方式五花八门\r\n[02:07.230]要一式要两份 把热吻当罪证\r\n[02:15.298]让动了情的人 还要去分辨好人坏人\r\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\r\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\r\n[02:46.341]\r\n[02:46.606]所以 当我们都变成木偶人\r\n[02:51.507]你何苦再做一个痴情人表忠贞\r\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\r\n[03:03.407]\r\n[03:03.825]让我们都变成木偶人\r\n[03:07.373]再缝几针爱几次后就不会疼\r\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\r\n[03:21.158]\r\n[03:36.779]没有人能变成木偶人\r\n[03:39.795]无非是在感情里的逃避过程\r\n[03:43.999]我们盛气凌人 掩饰无权过问\r\n[03:48.773]遇见谁要拆几针\r\n[03:52.354]\r\n[03:52.631]当我们都羡慕木偶人\r\n[03:55.899]学会他在场面上的玩弄过程\r\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\r\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\r\n[04:23.520]\r\n[04:24.454]制作人 : 陈迪@TalentUnion\r\n[04:25.387]编曲 : 陈迪\r\n[04:26.274]吉他 : 劳国贤\r\n[04:27.357]贝斯 : 崔文正\r\n[04:28.378]鼓 : 王鹏\r\n[04:29.346]弦乐团 : 中国爱乐乐团\r\n[04:30.319]人声监制 : 杨祎\r\n[04:31.323]缩混 : 杨祎@RaySound Studio\r\n[04:32.382]母带 : 鲍锐@录顶技","name":"薛之谦 - 木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_5mAAblnALOdTG6b5MA045.mp3"}],"msg":"操作成功！"}
2020-06-06 14:31:48.473 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 301
2020-06-06 14:31:48.474 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-27 06:56:38","linkId":1,"linkName":"3","linkUrl":"https://www.aliyun.com/","updateTime":"2020-05-31 10:02:41"},{"createdTime":"2020-05-27 07:20:05","linkId":2,"linkName":"组件","linkUrl":"https://www.antdv.com/components/upload-cn/","updateTime":"2020-05-31 10:02:23"}],"msg":"操作成功！"}
2020-06-06 14:31:48.475 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}
2020-06-06 14:31:48.875 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 819
2020-06-06 14:31:48.876 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:31:52.771 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:31:52.771 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:52.775 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/getAdmin
2020-06-06 14:31:52.775 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:52.772 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:52.781 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:52.784 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:31:52.784 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getAdmin
2020-06-06 14:31:52.785 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:31:52.785 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:52.785 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:31:52.786 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:31:52.788 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:52.788 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:31:52.788 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:52.799 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 14:31:52.800 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:52.801 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:52.801 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 14:31:52.803 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:52.864 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 89
2020-06-06 14:31:52.865 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}
2020-06-06 14:31:52.884 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 99
2020-06-06 14:31:52.885 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:31:52.920 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 121
2020-06-06 14:31:52.921 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_jSANxGXAAAOurxSY9A094.jpg","id":3,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\r\n[00:01.62]作词：Ming.明\r\n[00:02.33]作曲：Pig小优\r\n[00:03.08]编曲：Pig小优\r\n[00:03.84]后期：Pig小优\r\n[00:04.54]美工：张小喵\r\n[00:09.15]踏红船繁华似人间\r\n[00:12.03]灯火熙攘祈愿\r\n[00:14.00]手中红线姻缘何时现\r\n[00:17.57]薄雾小雨润如烟\r\n[00:19.94]灯中画舫烟中浅\r\n[00:24.93]这尘缘如惊鸿一面\r\n[00:27.85]谁家翩翩少年\r\n[00:29.85]桥边白衣如纤印心间\r\n[00:33.34]这世间情话誓言\r\n[00:35.81]不抵这柔情一眼\r\n[00:40.79]步儿缓红绳缠\r\n[00:42.70]石桥边灯火染\r\n[00:44.72]杯中仙促长谈\r\n[00:46.79]舷外雨声人言难断\r\n[00:49.71]已成烟已消散\r\n[00:51.62]化作春意满\r\n[00:55.75]晚来风寒心却暖\r\n[00:57.57]三两杯酒后情又添\r\n[01:00.08]暮鼓丝弦声声慢\r\n[01:02.36]有佳人舞芊芊\r\n[01:04.32]研磨提笔在画卷眉目间流转\r\n[01:08.49]细雨婵娟\r\n[01:12.25]醉卧画舫听雨眠一场梦无言\r\n[01:15.93]窗外依旧喧怎转眼桥上人不见\r\n[01:20.46]回眸深处看细雨茫茫如烟\r\n[01:24.10]苦了思念\r\n[01:44.22]步儿缓红绳缠\r\n[01:46.18]石桥边灯火染\r\n[01:48.20]杯中仙促长谈\r\n[01:50.21]舷外雨声人言难断\r\n[01:53.18]已成烟已消散\r\n[01:55.15]化作春意满\r\n[01:59.25]晚来风寒心却暖\r\n[02:01.16]三两杯酒后情又添\r\n[02:03.53]暮鼓丝弦声声慢\r\n[02:05.74]有佳人舞芊芊\r\n[02:07.80]研磨提笔在画卷眉目间流转\r\n[02:12.03]细雨婵娟\r\n[02:15.69]醉卧画舫听雨眠一场梦无言\r\n[02:19.42]窗外依旧喧怎转眼桥上人不见\r\n[02:23.95]回眸深处看细雨茫茫如烟\r\n[02:27.58]苦了思念\r\n[02:43.49]青山乌蓬伴流年繁华多阑珊\r\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\r\n[02:51.46]满纸柔情过指尖笔墨笑意染\r\n[02:55.64]长袖翩翩\r\n[02:59.52]醉卧画舫听雨眠一场梦无言\r\n[03:03.10]窗外依旧喧怎转眼桥上人不见\r\n[03:07.48]回眸深处看水中喜字红残\r\n[03:11.31]倒了人间\r\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_kqALftcAInbwpYfM3A951.mp3"},{"artist":"逃跑计划 ","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_v2AYruxAAAQjTIrrnM921.jpg","id":4,"lrc":"[00:00.58]逃跑计划 - 一万次悲伤\r\n[00:00.58]词：毛川\\/李赤\r\n[00:00.58]曲：逃跑计划\r\n[00:00.58]Oh honey\r\n[00:03.12]我脑海里全都是你\r\n[00:08.45]Oh 无法抗拒的心情\r\n[00:13.02]难以呼吸\r\n[00:16.22]Tonight\r\n[00:18.45]是否又要错过一个夜晚\r\n[00:23.34]是否还要掩饰最后的期待\r\n[00:28.22]Oh tonight\r\n[00:30.66]一万次悲伤\r\n[00:32.95]依然会有dream\r\n[00:36.08]我一直在最温暖的地方等你\r\n[00:40.96]似乎只能这样\r\n[00:43.61]停留一个方向\r\n[00:46.83]已不能改变\r\n[00:51.12]每一颗眼泪是一万道光\r\n[00:56.92]最昏暗的地方也变得明亮\r\n[01:02.00]我奔涌的暖流\r\n[01:04.43]寻找你的海洋\r\n[01:07.36]我注定这样\r\n[01:13.71]Oh honey\r\n[01:16.27]你目光里充满忧郁\r\n[01:21.40]就像经历一遍飞行\r\n[01:26.13]难以逃避\r\n[01:29.28]Tonight\r\n[01:31.53]是否还要错过这个夜晚\r\n[01:36.13]是否还要熄灭所有的期待\r\n[01:41.44]Oh tonight\r\n[01:43.71]一万次悲伤\r\n[01:46.04]依然会有dream\r\n[01:48.84]我一直在最后的地方等你\r\n[01:54.09]似乎只能这样\r\n[01:56.58]停留一个方向\r\n[01:59.88]已不能改变\r\n[02:04.20]每一颗眼泪是一万道光\r\n[02:09.69]最昏暗的地方也变得明亮\r\n[02:14.92]我奔涌的暖流\r\n[02:17.56]寻找你的海洋\r\n[02:20.76]我注定这样\r\n[03:07.42]一万次悲伤\r\n[03:09.44]依然会有dream\r\n[03:12.03]我一直在最后的地方等你\r\n[03:17.57]似乎只能这样\r\n[03:20.06]停留一个方向\r\n[03:23.36]已不能改变\r\n[03:27.71]每一颗眼泪是一万道光\r\n[03:33.23]最昏暗的地方也变得明亮\r\n[03:38.41]我奔涌的暖流\r\n[03:41.10]寻找你的海洋\r\n[03:44.15]我注定这样\r\n[03:55.51]Oh honey\r\n[03:58.10]我脑海里全都是你\r\n[04:02.93]Oh 无法抗拒的心情\r\n[04:07.76]难以呼吸","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_yCAXwcSAJ5SAlaB8pA956.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_4GAe9kIAACJ_hvYA4w281.jpg","id":5,"lrc":"[00:01.997]作词 : 薛之谦\r\n[00:03.929]作曲 : 薛之谦\r\n[00:06.012]\r\n[00:17.154]听专情的古人 把美言留给最爱的人\r\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\r\n[00:33.070]你没读懂课本 可世人硬要捧\r\n[00:41.350]看感情里的人 用肉眼分出三六九等\r\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\r\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\r\n[01:11.813]\r\n[01:12.202]所以 当我们都变成木偶人\r\n[01:17.471]你何苦再做一个痴情人表忠贞\r\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\r\n[01:29.805]\r\n[01:30.107]让我们都变成木偶人\r\n[01:33.678]再缝几针爱几次后就不会疼\r\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\r\n[01:46.963]\r\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\r\n[01:58.724]现在相爱的人 能耍的方式五花八门\r\n[02:07.230]要一式要两份 把热吻当罪证\r\n[02:15.298]让动了情的人 还要去分辨好人坏人\r\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\r\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\r\n[02:46.341]\r\n[02:46.606]所以 当我们都变成木偶人\r\n[02:51.507]你何苦再做一个痴情人表忠贞\r\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\r\n[03:03.407]\r\n[03:03.825]让我们都变成木偶人\r\n[03:07.373]再缝几针爱几次后就不会疼\r\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\r\n[03:21.158]\r\n[03:36.779]没有人能变成木偶人\r\n[03:39.795]无非是在感情里的逃避过程\r\n[03:43.999]我们盛气凌人 掩饰无权过问\r\n[03:48.773]遇见谁要拆几针\r\n[03:52.354]\r\n[03:52.631]当我们都羡慕木偶人\r\n[03:55.899]学会他在场面上的玩弄过程\r\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\r\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\r\n[04:23.520]\r\n[04:24.454]制作人 : 陈迪@TalentUnion\r\n[04:25.387]编曲 : 陈迪\r\n[04:26.274]吉他 : 劳国贤\r\n[04:27.357]贝斯 : 崔文正\r\n[04:28.378]鼓 : 王鹏\r\n[04:29.346]弦乐团 : 中国爱乐乐团\r\n[04:30.319]人声监制 : 杨祎\r\n[04:31.323]缩混 : 杨祎@RaySound Studio\r\n[04:32.382]母带 : 鲍锐@录顶技","name":"薛之谦 - 木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_5mAAblnALOdTG6b5MA045.mp3"}],"msg":"操作成功！"}
2020-06-06 14:31:53.135 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 364
2020-06-06 14:31:53.137 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:31:53.434 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 14:31:53.435 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:31:53.436 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:31:53.436 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 14:31:53.436 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:31:53.555 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 121
2020-06-06 14:31:53.556 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-27 06:56:38","linkId":1,"linkName":"3","linkUrl":"https://www.aliyun.com/","updateTime":"2020-05-31 10:02:41"},{"createdTime":"2020-05-27 07:20:05","linkId":2,"linkName":"组件","linkUrl":"https://www.antdv.com/components/upload-cn/","updateTime":"2020-05-31 10:02:23"}],"msg":"操作成功！"}
2020-06-06 14:35:06.436 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:35:06.436 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:35:06.440 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:35:06.440 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:35:06.440 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:06.440 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:06.441 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:35:06.441 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:35:06.441 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:35:06.441 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:35:06.436 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/getAdmin
2020-06-06 14:35:06.448 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:35:06.452 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:06.453 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getAdmin
2020-06-06 14:35:06.454 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:35:06.557 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 123
2020-06-06 14:35:06.560 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:35:06.725 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 289
2020-06-06 14:35:06.727 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:35:06.923 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 489
2020-06-06 14:35:06.924 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}
2020-06-06 14:35:06.932 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 14:35:06.933 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 14:35:06.933 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:35:06.933 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:35:06.934 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:06.934 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 14:35:06.935 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:35:06.934 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:06.937 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 14:35:06.937 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:35:07.020 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 88
2020-06-06 14:35:07.020 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_jSANxGXAAAOurxSY9A094.jpg","id":3,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\r\n[00:01.62]作词：Ming.明\r\n[00:02.33]作曲：Pig小优\r\n[00:03.08]编曲：Pig小优\r\n[00:03.84]后期：Pig小优\r\n[00:04.54]美工：张小喵\r\n[00:09.15]踏红船繁华似人间\r\n[00:12.03]灯火熙攘祈愿\r\n[00:14.00]手中红线姻缘何时现\r\n[00:17.57]薄雾小雨润如烟\r\n[00:19.94]灯中画舫烟中浅\r\n[00:24.93]这尘缘如惊鸿一面\r\n[00:27.85]谁家翩翩少年\r\n[00:29.85]桥边白衣如纤印心间\r\n[00:33.34]这世间情话誓言\r\n[00:35.81]不抵这柔情一眼\r\n[00:40.79]步儿缓红绳缠\r\n[00:42.70]石桥边灯火染\r\n[00:44.72]杯中仙促长谈\r\n[00:46.79]舷外雨声人言难断\r\n[00:49.71]已成烟已消散\r\n[00:51.62]化作春意满\r\n[00:55.75]晚来风寒心却暖\r\n[00:57.57]三两杯酒后情又添\r\n[01:00.08]暮鼓丝弦声声慢\r\n[01:02.36]有佳人舞芊芊\r\n[01:04.32]研磨提笔在画卷眉目间流转\r\n[01:08.49]细雨婵娟\r\n[01:12.25]醉卧画舫听雨眠一场梦无言\r\n[01:15.93]窗外依旧喧怎转眼桥上人不见\r\n[01:20.46]回眸深处看细雨茫茫如烟\r\n[01:24.10]苦了思念\r\n[01:44.22]步儿缓红绳缠\r\n[01:46.18]石桥边灯火染\r\n[01:48.20]杯中仙促长谈\r\n[01:50.21]舷外雨声人言难断\r\n[01:53.18]已成烟已消散\r\n[01:55.15]化作春意满\r\n[01:59.25]晚来风寒心却暖\r\n[02:01.16]三两杯酒后情又添\r\n[02:03.53]暮鼓丝弦声声慢\r\n[02:05.74]有佳人舞芊芊\r\n[02:07.80]研磨提笔在画卷眉目间流转\r\n[02:12.03]细雨婵娟\r\n[02:15.69]醉卧画舫听雨眠一场梦无言\r\n[02:19.42]窗外依旧喧怎转眼桥上人不见\r\n[02:23.95]回眸深处看细雨茫茫如烟\r\n[02:27.58]苦了思念\r\n[02:43.49]青山乌蓬伴流年繁华多阑珊\r\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\r\n[02:51.46]满纸柔情过指尖笔墨笑意染\r\n[02:55.64]长袖翩翩\r\n[02:59.52]醉卧画舫听雨眠一场梦无言\r\n[03:03.10]窗外依旧喧怎转眼桥上人不见\r\n[03:07.48]回眸深处看水中喜字红残\r\n[03:11.31]倒了人间\r\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_kqALftcAInbwpYfM3A951.mp3"},{"artist":"逃跑计划 ","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_v2AYruxAAAQjTIrrnM921.jpg","id":4,"lrc":"[00:00.58]逃跑计划 - 一万次悲伤\r\n[00:00.58]词：毛川\\/李赤\r\n[00:00.58]曲：逃跑计划\r\n[00:00.58]Oh honey\r\n[00:03.12]我脑海里全都是你\r\n[00:08.45]Oh 无法抗拒的心情\r\n[00:13.02]难以呼吸\r\n[00:16.22]Tonight\r\n[00:18.45]是否又要错过一个夜晚\r\n[00:23.34]是否还要掩饰最后的期待\r\n[00:28.22]Oh tonight\r\n[00:30.66]一万次悲伤\r\n[00:32.95]依然会有dream\r\n[00:36.08]我一直在最温暖的地方等你\r\n[00:40.96]似乎只能这样\r\n[00:43.61]停留一个方向\r\n[00:46.83]已不能改变\r\n[00:51.12]每一颗眼泪是一万道光\r\n[00:56.92]最昏暗的地方也变得明亮\r\n[01:02.00]我奔涌的暖流\r\n[01:04.43]寻找你的海洋\r\n[01:07.36]我注定这样\r\n[01:13.71]Oh honey\r\n[01:16.27]你目光里充满忧郁\r\n[01:21.40]就像经历一遍飞行\r\n[01:26.13]难以逃避\r\n[01:29.28]Tonight\r\n[01:31.53]是否还要错过这个夜晚\r\n[01:36.13]是否还要熄灭所有的期待\r\n[01:41.44]Oh tonight\r\n[01:43.71]一万次悲伤\r\n[01:46.04]依然会有dream\r\n[01:48.84]我一直在最后的地方等你\r\n[01:54.09]似乎只能这样\r\n[01:56.58]停留一个方向\r\n[01:59.88]已不能改变\r\n[02:04.20]每一颗眼泪是一万道光\r\n[02:09.69]最昏暗的地方也变得明亮\r\n[02:14.92]我奔涌的暖流\r\n[02:17.56]寻找你的海洋\r\n[02:20.76]我注定这样\r\n[03:07.42]一万次悲伤\r\n[03:09.44]依然会有dream\r\n[03:12.03]我一直在最后的地方等你\r\n[03:17.57]似乎只能这样\r\n[03:20.06]停留一个方向\r\n[03:23.36]已不能改变\r\n[03:27.71]每一颗眼泪是一万道光\r\n[03:33.23]最昏暗的地方也变得明亮\r\n[03:38.41]我奔涌的暖流\r\n[03:41.10]寻找你的海洋\r\n[03:44.15]我注定这样\r\n[03:55.51]Oh honey\r\n[03:58.10]我脑海里全都是你\r\n[04:02.93]Oh 无法抗拒的心情\r\n[04:07.76]难以呼吸","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_yCAXwcSAJ5SAlaB8pA956.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_4GAe9kIAACJ_hvYA4w281.jpg","id":5,"lrc":"[00:01.997]作词 : 薛之谦\r\n[00:03.929]作曲 : 薛之谦\r\n[00:06.012]\r\n[00:17.154]听专情的古人 把美言留给最爱的人\r\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\r\n[00:33.070]你没读懂课本 可世人硬要捧\r\n[00:41.350]看感情里的人 用肉眼分出三六九等\r\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\r\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\r\n[01:11.813]\r\n[01:12.202]所以 当我们都变成木偶人\r\n[01:17.471]你何苦再做一个痴情人表忠贞\r\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\r\n[01:29.805]\r\n[01:30.107]让我们都变成木偶人\r\n[01:33.678]再缝几针爱几次后就不会疼\r\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\r\n[01:46.963]\r\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\r\n[01:58.724]现在相爱的人 能耍的方式五花八门\r\n[02:07.230]要一式要两份 把热吻当罪证\r\n[02:15.298]让动了情的人 还要去分辨好人坏人\r\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\r\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\r\n[02:46.341]\r\n[02:46.606]所以 当我们都变成木偶人\r\n[02:51.507]你何苦再做一个痴情人表忠贞\r\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\r\n[03:03.407]\r\n[03:03.825]让我们都变成木偶人\r\n[03:07.373]再缝几针爱几次后就不会疼\r\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\r\n[03:21.158]\r\n[03:36.779]没有人能变成木偶人\r\n[03:39.795]无非是在感情里的逃避过程\r\n[03:43.999]我们盛气凌人 掩饰无权过问\r\n[03:48.773]遇见谁要拆几针\r\n[03:52.354]\r\n[03:52.631]当我们都羡慕木偶人\r\n[03:55.899]学会他在场面上的玩弄过程\r\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\r\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\r\n[04:23.520]\r\n[04:24.454]制作人 : 陈迪@TalentUnion\r\n[04:25.387]编曲 : 陈迪\r\n[04:26.274]吉他 : 劳国贤\r\n[04:27.357]贝斯 : 崔文正\r\n[04:28.378]鼓 : 王鹏\r\n[04:29.346]弦乐团 : 中国爱乐乐团\r\n[04:30.319]人声监制 : 杨祎\r\n[04:31.323]缩混 : 杨祎@RaySound Studio\r\n[04:32.382]母带 : 鲍锐@录顶技","name":"薛之谦 - 木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_5mAAblnALOdTG6b5MA045.mp3"}],"msg":"操作成功！"}
2020-06-06 14:35:07.024 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 92
2020-06-06 14:35:07.025 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-27 06:56:38","linkId":1,"linkName":"3","linkUrl":"https://www.aliyun.com/","updateTime":"2020-05-31 10:02:41"},{"createdTime":"2020-05-27 07:20:05","linkId":2,"linkName":"组件","linkUrl":"https://www.antdv.com/components/upload-cn/","updateTime":"2020-05-31 10:02:23"}],"msg":"操作成功！"}
2020-06-06 14:35:56.034 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:35:56.037 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:35:56.038 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:35:56.038 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:35:56.038 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:35:56.272 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 238
2020-06-06 14:35:56.273 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:47:01.194 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:47:01.228 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:47:01.251 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:47:01.251 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:47:01.252 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:01.252 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:01.252 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:47:01.252 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:47:01.253 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:47:01.253 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:47:01.859 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 665
2020-06-06 14:47:01.862 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:47:02.643 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1415
2020-06-06 14:47:02.644 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 14:47:23.659 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 14:47:23.663 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:47:23.664 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:23.665 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 14:47:23.665 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 14:47:23.752 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/getAdmin
2020-06-06 14:47:23.754 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:47:23.754 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 14:47:23.754 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:23.755 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getAdmin
2020-06-06 14:47:23.756 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:47:23.754 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 14:47:23.759 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:23.760 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 14:47:23.762 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:47:24.059 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 14:47:24.059 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 14:47:24.061 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:47:24.061 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 14:47:24.061 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:24.061 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 14:47:24.062 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 14:47:24.062 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 14:47:24.062 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:47:24.063 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 14:47:24.177 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 425
2020-06-06 14:47:24.179 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}
2020-06-06 14:47:24.208 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 454
2020-06-06 14:47:24.209 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 14:47:24.406 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 347
2020-06-06 14:47:24.408 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 349
2020-06-06 14:47:24.408 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"createdTime":"2020-05-27 06:56:38","linkId":1,"linkName":"3","linkUrl":"https://www.aliyun.com/","updateTime":"2020-05-31 10:02:41"},{"createdTime":"2020-05-27 07:20:05","linkId":2,"linkName":"组件","linkUrl":"https://www.antdv.com/components/upload-cn/","updateTime":"2020-05-31 10:02:23"}],"msg":"操作成功！"}
2020-06-06 14:47:24.409 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"artist":"小优","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_jSANxGXAAAOurxSY9A094.jpg","id":3,"lrc":"[00:00.32]Pig小优 - 画舫烟中浅\r\n[00:01.62]作词：Ming.明\r\n[00:02.33]作曲：Pig小优\r\n[00:03.08]编曲：Pig小优\r\n[00:03.84]后期：Pig小优\r\n[00:04.54]美工：张小喵\r\n[00:09.15]踏红船繁华似人间\r\n[00:12.03]灯火熙攘祈愿\r\n[00:14.00]手中红线姻缘何时现\r\n[00:17.57]薄雾小雨润如烟\r\n[00:19.94]灯中画舫烟中浅\r\n[00:24.93]这尘缘如惊鸿一面\r\n[00:27.85]谁家翩翩少年\r\n[00:29.85]桥边白衣如纤印心间\r\n[00:33.34]这世间情话誓言\r\n[00:35.81]不抵这柔情一眼\r\n[00:40.79]步儿缓红绳缠\r\n[00:42.70]石桥边灯火染\r\n[00:44.72]杯中仙促长谈\r\n[00:46.79]舷外雨声人言难断\r\n[00:49.71]已成烟已消散\r\n[00:51.62]化作春意满\r\n[00:55.75]晚来风寒心却暖\r\n[00:57.57]三两杯酒后情又添\r\n[01:00.08]暮鼓丝弦声声慢\r\n[01:02.36]有佳人舞芊芊\r\n[01:04.32]研磨提笔在画卷眉目间流转\r\n[01:08.49]细雨婵娟\r\n[01:12.25]醉卧画舫听雨眠一场梦无言\r\n[01:15.93]窗外依旧喧怎转眼桥上人不见\r\n[01:20.46]回眸深处看细雨茫茫如烟\r\n[01:24.10]苦了思念\r\n[01:44.22]步儿缓红绳缠\r\n[01:46.18]石桥边灯火染\r\n[01:48.20]杯中仙促长谈\r\n[01:50.21]舷外雨声人言难断\r\n[01:53.18]已成烟已消散\r\n[01:55.15]化作春意满\r\n[01:59.25]晚来风寒心却暖\r\n[02:01.16]三两杯酒后情又添\r\n[02:03.53]暮鼓丝弦声声慢\r\n[02:05.74]有佳人舞芊芊\r\n[02:07.80]研磨提笔在画卷眉目间流转\r\n[02:12.03]细雨婵娟\r\n[02:15.69]醉卧画舫听雨眠一场梦无言\r\n[02:19.42]窗外依旧喧怎转眼桥上人不见\r\n[02:23.95]回眸深处看细雨茫茫如烟\r\n[02:27.58]苦了思念\r\n[02:43.49]青山乌蓬伴流年繁华多阑珊\r\n[02:47.26]刹那嫣然笑款款镌刻在画中仙\r\n[02:51.46]满纸柔情过指尖笔墨笑意染\r\n[02:55.64]长袖翩翩\r\n[02:59.52]醉卧画舫听雨眠一场梦无言\r\n[03:03.10]窗外依旧喧怎转眼桥上人不见\r\n[03:07.48]回眸深处看水中喜字红残\r\n[03:11.31]倒了人间\r\n画舫烟中浅相关歌词推荐","name":"Pig小优 - 画舫烟中浅","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_kqALftcAInbwpYfM3A951.mp3"},{"artist":"逃跑计划 ","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_v2AYruxAAAQjTIrrnM921.jpg","id":4,"lrc":"[00:00.58]逃跑计划 - 一万次悲伤\r\n[00:00.58]词：毛川\\/李赤\r\n[00:00.58]曲：逃跑计划\r\n[00:00.58]Oh honey\r\n[00:03.12]我脑海里全都是你\r\n[00:08.45]Oh 无法抗拒的心情\r\n[00:13.02]难以呼吸\r\n[00:16.22]Tonight\r\n[00:18.45]是否又要错过一个夜晚\r\n[00:23.34]是否还要掩饰最后的期待\r\n[00:28.22]Oh tonight\r\n[00:30.66]一万次悲伤\r\n[00:32.95]依然会有dream\r\n[00:36.08]我一直在最温暖的地方等你\r\n[00:40.96]似乎只能这样\r\n[00:43.61]停留一个方向\r\n[00:46.83]已不能改变\r\n[00:51.12]每一颗眼泪是一万道光\r\n[00:56.92]最昏暗的地方也变得明亮\r\n[01:02.00]我奔涌的暖流\r\n[01:04.43]寻找你的海洋\r\n[01:07.36]我注定这样\r\n[01:13.71]Oh honey\r\n[01:16.27]你目光里充满忧郁\r\n[01:21.40]就像经历一遍飞行\r\n[01:26.13]难以逃避\r\n[01:29.28]Tonight\r\n[01:31.53]是否还要错过这个夜晚\r\n[01:36.13]是否还要熄灭所有的期待\r\n[01:41.44]Oh tonight\r\n[01:43.71]一万次悲伤\r\n[01:46.04]依然会有dream\r\n[01:48.84]我一直在最后的地方等你\r\n[01:54.09]似乎只能这样\r\n[01:56.58]停留一个方向\r\n[01:59.88]已不能改变\r\n[02:04.20]每一颗眼泪是一万道光\r\n[02:09.69]最昏暗的地方也变得明亮\r\n[02:14.92]我奔涌的暖流\r\n[02:17.56]寻找你的海洋\r\n[02:20.76]我注定这样\r\n[03:07.42]一万次悲伤\r\n[03:09.44]依然会有dream\r\n[03:12.03]我一直在最后的地方等你\r\n[03:17.57]似乎只能这样\r\n[03:20.06]停留一个方向\r\n[03:23.36]已不能改变\r\n[03:27.71]每一颗眼泪是一万道光\r\n[03:33.23]最昏暗的地方也变得明亮\r\n[03:38.41]我奔涌的暖流\r\n[03:41.10]寻找你的海洋\r\n[03:44.15]我注定这样\r\n[03:55.51]Oh honey\r\n[03:58.10]我脑海里全都是你\r\n[04:02.93]Oh 无法抗拒的心情\r\n[04:07.76]难以呼吸","name":"逃跑计划 - 一万次悲伤","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_yCAXwcSAJ5SAlaB8pA956.mp3"},{"artist":"薛之谦","cover":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_4GAe9kIAACJ_hvYA4w281.jpg","id":5,"lrc":"[00:01.997]作词 : 薛之谦\r\n[00:03.929]作曲 : 薛之谦\r\n[00:06.012]\r\n[00:17.154]听专情的古人 把美言留给最爱的人\r\n[00:25.069]看裹小脚的人 为诗人的恶习在隐忍\r\n[00:33.070]你没读懂课本 可世人硬要捧\r\n[00:41.350]看感情里的人 用肉眼分出三六九等\r\n[00:49.820]再配合些掌声 看上去全都忠心耿耿\r\n[00:58.000]谁定的烂台本 可当代都在跟 气氛已麻木不仁\r\n[01:11.813]\r\n[01:12.202]所以 当我们都变成木偶人\r\n[01:17.471]你何苦再做一个痴情人表忠贞\r\n[01:21.797]文字叙述工整 配上廉价伤痕 你还会哭多感人\r\n[01:29.805]\r\n[01:30.107]让我们都变成木偶人\r\n[01:33.678]再缝几针爱几次后就不会疼\r\n[01:37.965]去除惦记功能 再遇到你时像个陌生人\r\n[01:46.963]\r\n[01:50.846]以前爱过的人 偷偷的藏起红绿两本\r\n[01:58.724]现在相爱的人 能耍的方式五花八门\r\n[02:07.230]要一式要两份 把热吻当罪证\r\n[02:15.298]让动了情的人 还要去分辨好人坏人\r\n[02:23.458]别在雨里对阵 用可乐拉环陪你的人\r\n[02:31.606]已变成俗剧本 你何必太当真 不要提那辛路历程\r\n[02:46.341]\r\n[02:46.606]所以 当我们都变成木偶人\r\n[02:51.507]你何苦再做一个痴情人表忠贞\r\n[02:55.511]文字叙述工整 重复廉价伤痕 你还会哭多感人\r\n[03:03.407]\r\n[03:03.825]让我们都变成木偶人\r\n[03:07.373]再缝几针爱几次后就不会疼\r\n[03:11.594]去除惦记功能 再遇到你时像个陌生人\r\n[03:21.158]\r\n[03:36.779]没有人能变成木偶人\r\n[03:39.795]无非是在感情里的逃避过程\r\n[03:43.999]我们盛气凌人 掩饰无权过问\r\n[03:48.773]遇见谁要拆几针\r\n[03:52.354]\r\n[03:52.631]当我们都羡慕木偶人\r\n[03:55.899]学会他在场面上的玩弄过程\r\n[04:00.004]美化措辞追捧 似拟人的掌声是我爱人\r\n[04:12.490]防备厚厚一本 是我献出自己的后遗症\r\n[04:23.520]\r\n[04:24.454]制作人 : 陈迪@TalentUnion\r\n[04:25.387]编曲 : 陈迪\r\n[04:26.274]吉他 : 劳国贤\r\n[04:27.357]贝斯 : 崔文正\r\n[04:28.378]鼓 : 王鹏\r\n[04:29.346]弦乐团 : 中国爱乐乐团\r\n[04:30.319]人声监制 : 杨祎\r\n[04:31.323]缩混 : 杨祎@RaySound Studio\r\n[04:32.382]母带 : 鲍锐@录顶技","name":"薛之谦 - 木偶人","url":"http://39.97.183.122/group1/M00/00/00/rBGvAl7N_5mAAblnALOdTG6b5MA045.mp3"}],"msg":"操作成功！"}
2020-06-06 14:47:24.797 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1138
2020-06-06 14:47:24.799 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":9,"blogComment":0,"blogGoods":5,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":4,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-06-01 11:52:02"},{"blogCollection":7,"blogComment":0,"blogGoods":10,"blogId":"1264365631460507648","blogRead":2,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-06-01 11:51:55"},{"blogCollection":6,"blogComment":0,"blogGoods":7,"blogId":"1264365258452664320","blogRead":1,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-06-01 11:51:52"},{"blogCollection":5,"blogComment":0,"blogGoods":5,"blogId":"1264363719424188416","blogRead":9,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-06-01 11:51:49"},{"blogCollection":4,"blogComment":0,"blogGoods":3,"blogId":"1264358511910559744","blogRead":7,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-06-01 11:51:46"},{"blogCollection":14,"blogComment":0,"blogGoods":2,"blogId":"1264358089300877312","blogRead":6,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-06-01 11:51:43"},{"blogCollection":12,"blogComment":0,"blogGoods":1,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":3,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-06-01 11:51:41"},{"blogCollection":20,"blogComment":0,"blogGoods":20,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":28,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-06-04 04:29:21"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 16:23:13.349 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 16:23:13.360 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:23:13.361 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:23:13.362 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 16:23:13.335 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 16:23:13.367 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:23:13.368 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:23:13.362 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 16:23:13.368 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 16:23:13.369 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:23:13.612 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 16:23:13.612 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 16:23:13.613 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:23:13.613 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:23:13.614 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:23:13.615 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 16:23:13.616 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:23:13.616 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:23:13.617 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 16:23:13.617 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:49:21.483 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 3976 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 16:49:21.493 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 16:49:23.197 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 16:49:23.259 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 53ms. Found 0 MongoDB repository interfaces.
2020-06-06 16:49:23.657 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.777 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7e985612] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.829 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.847 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$64eb948e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.854 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4bc338d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.860 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 16:49:23.933 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.955 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:23.985 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.366 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 16:49:27.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.470 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.814 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.822 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.839 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.842 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.846 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.849 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.855 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.858 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.913 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:27.957 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 16:49:28.404 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 1001 (http)
2020-06-06 16:49:28.417 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-06-06 16:49:28.418 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-06 16:49:28.418 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-06-06 16:49:28.622 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-06 16:49:28.623 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6925 ms
2020-06-06 16:49:30.074 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 16:49:31.020 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-06-06 16:49:31.051 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 1001 (http) with context path ''
2020-06-06 16:49:31.054 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 10.764 seconds (JVM running for 13.045)
2020-06-06 16:49:31.126 INFO  [cluster-ClusterId{value='5edb589a5293fd5927e4036d', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:128)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-06-06 16:49:54.862 INFO  [http-nio-1001-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-06 16:49:54.863 INFO  [http-nio-1001-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-06 16:49:54.895 INFO  [http-nio-1001-exec-5]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 30 ms
2020-06-06 16:49:54.971 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 16:49:54.970 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 16:49:54.971 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:49:54.971 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:49:54.972 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:49:54.971 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 16:49:54.972 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:49:54.973 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:49:54.974 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:49:54.983 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 16:49:54.986 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:49:54.987 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 16:49:54.988 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:49:54.993 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 16:49:54.994 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:49:55.322 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 351
2020-06-06 16:49:55.367 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 396
2020-06-06 16:49:55.456 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-06-06 16:49:55.483 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 16:49:55.492 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 16:49:55.492 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:49:55.493 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:49:55.494 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 16:49:55.497 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 16:49:55.863 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 371
2020-06-06 16:49:55.873 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 16:50:14.456 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/login
2020-06-06 16:50:14.457 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:50:14.457 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:14.457 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.login
2020-06-06 16:50:14.458 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu1, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 16:50:14.626 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 170
2020-06-06 16:50:14.627 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":40002,"msg":"用户名或密码错误!"}
2020-06-06 16:50:17.221 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/login
2020-06-06 16:50:17.222 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:50:17.223 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:17.223 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.login
2020-06-06 16:50:17.224 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu1, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 16:50:17.287 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 66
2020-06-06 16:50:17.288 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":40002,"msg":"用户名或密码错误!"}
2020-06-06 16:50:30.607 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 16:50:30.608 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:50:30.609 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:30.611 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 16:50:30.612 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 16:50:30.618 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 16:50:30.619 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 16:50:30.619 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:30.620 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 16:50:30.620 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:50:30.712 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 95
2020-06-06 16:50:30.714 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 16:50:30.822 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 215
2020-06-06 16:50:30.823 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 16:50:30.835 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 16:50:30.836 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:50:30.836 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:30.837 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 16:50:30.837 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:50:30.847 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 16:50:30.848 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 16:50:30.848 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 16:50:30.849 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 16:50:30.850 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 16:50:30.932 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 85
2020-06-06 16:50:30.933 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-06-06 20:29:10.789 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-LD5PAQI with PID 3288 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 20:29:11.023 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 20:29:19.822 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 20:29:19.909 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 78ms. Found 0 MongoDB repository interfaces.
2020-06-06 20:29:21.423 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.021 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$19f85605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.134 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.256 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4b9481] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.293 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e72338c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.305 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 20:29:22.612 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.660 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:22.781 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:34.659 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 20:29:34.664 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:34.886 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.639 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.670 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.683 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.692 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.705 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.723 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:38.736 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:39.091 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:39.241 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 20:29:44.364 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 1001 (http)
2020-06-06 20:29:44.471 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1001"]
2020-06-06 20:29:44.473 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-06-06 20:29:44.474 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-06-06 20:29:46.834 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-06-06 20:29:46.837 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 35565 ms
2020-06-06 20:29:53.418 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 20:29:54.687 INFO  [cluster-ClusterId{value='5edb8c410cb40d12bf21d8a1', description='null'}-localhost:27017]org.mongodb.driver.cluster.info:76 -Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:128)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:606)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 3 common frames omitted
2020-06-06 20:30:02.139 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1001"]
2020-06-06 20:30:02.340 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 1001 (http) with context path ''
2020-06-06 20:30:02.351 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 56.838 seconds (JVM running for 66.657)
2020-06-06 20:33:15.451 INFO  [http-nio-1001-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-06 20:33:15.452 INFO  [http-nio-1001-exec-6]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-06-06 20:33:15.490 INFO  [http-nio-1001-exec-6]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 37 ms
2020-06-06 20:33:15.665 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 20:33:15.665 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 20:33:15.668 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:33:15.667 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:33:15.665 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 20:33:15.669 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:33:15.669 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:33:15.670 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:33:15.671 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:33:15.698 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 20:33:15.697 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 20:33:15.700 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:33:15.700 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:33:15.708 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 20:33:15.710 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:33:16.358 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 20:33:16.359 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:33:16.361 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:33:16.362 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 20:33:16.364 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 20:33:16.571 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 906
2020-06-06 20:33:16.598 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-06-06 20:33:16.672 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 1007
2020-06-06 20:33:16.950 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 20:33:17.316 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 958
2020-06-06 20:33:17.337 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 20:34:02.254 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/register
2020-06-06 20:34:02.256 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:34:02.259 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:34:02.261 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.register
2020-06-06 20:34:02.263 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu1, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=1, header=null, nickname=老王11, userEmail=2074623967@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:34:37.237 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/register
2020-06-06 20:34:37.241 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:34:37.242 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:34:37.246 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.register
2020-06-06 20:34:37.248 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu1, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=1, header=null, nickname=老王11, userEmail=2074623967@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:35:17.731 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 20:35:17.732 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:35:17.733 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:35:17.736 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 20:35:17.737 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:35:17.738 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:35:17.739 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 20:35:17.740 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:35:17.739 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 20:35:17.743 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 20:35:17.835 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 104
2020-06-06 20:35:17.836 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 20:35:17.945 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 20:35:17.944 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 20:35:17.945 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:35:17.945 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:35:17.947 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 211
2020-06-06 20:35:17.948 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 20:35:17.946 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:35:17.952 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 20:35:17.953 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:35:17.953 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:35:17.957 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 20:35:17.958 INFO  [http-nio-1001-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:35:18.037 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 93
2020-06-06 20:35:18.038 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-06-06 20:35:49.647 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/register
2020-06-06 20:35:49.654 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:35:49.656 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:35:49.658 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.register
2020-06-06 20:35:49.659 INFO  [http-nio-1001-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=1, header=null, nickname=老王, userEmail=2074623967@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:36:47.604 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/register
2020-06-06 20:36:47.606 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:36:47.608 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:36:47.611 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.register
2020-06-06 20:36:47.618 INFO  [http-nio-1001-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=1, header=null, nickname=老王, userEmail=2074623967@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:37:54.112 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/register
2020-06-06 20:37:54.117 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:37:54.118 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:37:54.120 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.register
2020-06-06 20:37:54.121 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=1, header=null, nickname=老王11, userEmail=2074623967@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:37:54.529 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 417
2020-06-06 20:37:54.530 INFO  [http-nio-1001-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"msg":"注册成功"}
2020-06-06 20:38:11.179 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /user/login
2020-06-06 20:38:11.182 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:38:11.183 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:11.184 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.UserController.login
2020-06-06 20:38:11.185 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[User(userId=null, username=tangtu22, password=e807f1fcf82d132f9bb018ca6738a19f, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-06-06 20:38:11.466 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 287
2020-06-06 20:38:11.476 INFO  [http-nio-1001-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"user":{"deleted":0,"nickname":"老王11","password":"","sex":1,"userEmail":"2074623967@qq.com","userId":4,"username":"tangtu22"},"token":"C6997F3A3184E6E6A7C8C44B884A9FB1"},"msg":"操作成功！"}
2020-06-06 20:38:12.278 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/getByPage
2020-06-06 20:38:12.279 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:38:12.280 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:12.281 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.getByPage
2020-06-06 20:38:12.282 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-06-06 20:38:12.444 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /blog/recomRead
2020-06-06 20:38:12.445 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : POST
2020-06-06 20:38:12.446 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:12.447 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.BlogController.recomRead
2020-06-06 20:38:12.448 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:38:12.495 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /admin/getAdmin
2020-06-06 20:38:12.496 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:38:12.497 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:12.499 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /music/getList
2020-06-06 20:38:12.498 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.AdminController.getAdmin
2020-06-06 20:38:12.501 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:38:12.501 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:38:12.502 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 224
2020-06-06 20:38:12.506 INFO  [http-nio-1001-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264726600279891968","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LHAuAP_m_AAAzoN3Frv0553.jpg","blogRead":0,"blogTitle":"新生代与老年代","createdTime":"2020-05-25 01:14:56","typeName":"java","updateTime":"2020-05-25 01:14:56"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365631460507648","blogRead":0,"blogTitle":"Flutter、ReactNative、uniapp对比","createdTime":"2020-05-24 01:20:33","typeName":"linux","updateTime":"2020-05-24 01:20:33"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264365258452664320","blogRead":0,"blogTitle":"不使用比较运算符如何比较两个数的大小","createdTime":"2020-05-24 01:19:04","typeName":"java","updateTime":"2020-05-24 01:19:04"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java","updateTime":"2020-05-24 01:12:57"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux","updateTime":"2020-05-24 00:52:15"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java","updateTime":"2020-05-24 00:50:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbwqAAb-IAAAILq5d_SI847.png","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux","updateTime":"2020-05-25 02:28:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogImage":"http://39.97.183.122/group1/M00/00/00/rBGvAl7KbfWAMxLPAABgjnKno8E447.jpg","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java","updateTime":"2020-05-24 12:52:13"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2020-06-06 20:38:12.510 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -请求地址 : /link/list
2020-06-06 20:38:13.295 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:13.296 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.MusicController.getList
2020-06-06 20:38:13.296 INFO  [http-nio-1001-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:38:13.301 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:115 -请求方式 : GET
2020-06-06 20:38:13.302 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:118 -IP : 127.0.0.1
2020-06-06 20:38:13.302 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:120 -方法 : com.jg.blog.controller.LinkController.list
2020-06-06 20:38:13.303 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:122 -请求参数：[]
2020-06-06 20:38:13.298 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 854
2020-06-06 20:38:13.305 INFO  [http-nio-1001-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264357690636476416","blogRead":0,"blogTitle":"垃圾回收算法","createdTime":"2020-05-24 00:49:00","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358056178458624","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:27","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358089300877312","blogRead":0,"blogTitle":"Mybatis源码阅读（五 ）：接口层——SqlSession","createdTime":"2020-05-24 00:50:35","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264358511910559744","blogRead":0,"blogTitle":"Java只使用位运算实现加减乘除","createdTime":"2020-05-24 00:52:15","typeName":"linux"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1264363719424188416","blogRead":0,"blogTitle":"java进阶篇：用位运算实现加、减、乘、除","createdTime":"2020-05-24 01:12:57","typeName":"java"}],"msg":"操作成功！"}
2020-06-06 20:38:13.369 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 874
2020-06-06 20:38:13.374 INFO  [http-nio-1001-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":{"header":"http://39.97.183.122/group1/M00/00/00/rBGvAl7LcYyAZb8TAAf2zQ1Ix3Y328.gif","id":1,"name":"稽哥66","username":"admin"},"msg":"操作成功！"}
2020-06-06 20:38:13.377 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAround:68 -耗时 : 867
2020-06-06 20:38:13.377 INFO  [http-nio-1001-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:82 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2020-06-06 21:39:58.053 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 2820 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:39:58.059 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:39:59.907 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:40:00.191 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 274ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:40:01.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:01.608 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8b81da0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:01.750 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:01.792 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$71d51887] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:01.807 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$58acbcc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:01.821 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:40:01.968 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:02.015 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:02.119 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:07.061 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:40:07.065 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:07.257 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.021 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.076 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.105 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.123 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.137 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.140 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.152 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.302 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:08.360 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:40:11.639 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:40:11.640 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:40:11.948 INFO  [cluster-ClusterId{value='5edb9cbb55cca4067718bba7', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:21}] to 39.97.183.122:27017
2020-06-06 21:40:11.987 INFO  [cluster-ClusterId{value='5edb9cbb55cca4067718bba7', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33621732}
2020-06-06 21:40:11.990 INFO  [cluster-ClusterId{value='5edb9cbb55cca4067718bba7', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:40:15.305 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.645 seconds (JVM running for 23.838)
2020-06-06 21:40:17.779 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:22}] to 39.97.183.122:27017
2020-06-06 21:40:18.093 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:22}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:40:18.100 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:40:18.117 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:41:52.449 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 14484 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:41:52.453 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:41:54.441 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:41:54.578 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 125ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:41:55.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:55.746 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$647b151b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:55.882 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:55.933 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4ace5397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:55.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31a5f7d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:55.966 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:41:56.130 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:56.181 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:41:56.272 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:01.007 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:42:01.009 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:01.183 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:01.959 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.011 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.033 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.050 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.057 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.077 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.079 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.084 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.092 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:02.320 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:42:05.550 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:42:05.551 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:42:05.840 INFO  [cluster-ClusterId{value='5edb9d2d96c5432ef03137c3', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:23}] to 39.97.183.122:27017
2020-06-06 21:42:05.882 INFO  [cluster-ClusterId{value='5edb9d2d96c5432ef03137c3', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38088928}
2020-06-06 21:42:05.885 INFO  [cluster-ClusterId{value='5edb9d2d96c5432ef03137c3', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:42:08.213 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 17.254 seconds (JVM running for 20.347)
2020-06-06 21:42:08.983 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:24}] to 39.97.183.122:27017
2020-06-06 21:42:09.151 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:24}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:42:09.161 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:42:09.214 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:46:02.276 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 23464 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:46:02.283 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:46:05.037 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:46:05.212 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 161ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:46:06.334 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:06.695 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4680a73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:06.872 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:06.927 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$dabb48ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:06.962 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c192ed31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:06.978 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:46:07.212 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:07.297 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:07.413 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:13.974 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:46:13.975 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:14.448 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:15.978 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.031 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.058 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.096 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.108 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.142 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.147 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.177 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.198 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:16.841 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:46:23.262 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:46:23.263 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:46:23.683 INFO  [cluster-ClusterId{value='5edb9e2f1a1cf07f35e89cdc', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:25}] to 39.97.183.122:27017
2020-06-06 21:46:23.739 INFO  [cluster-ClusterId{value='5edb9e2f1a1cf07f35e89cdc', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=39758046}
2020-06-06 21:46:23.742 INFO  [cluster-ClusterId{value='5edb9e2f1a1cf07f35e89cdc', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:46:28.862 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 28.398 seconds (JVM running for 33.12)
2020-06-06 21:46:30.139 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:26}] to 39.97.183.122:27017
2020-06-06 21:46:30.311 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:26}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:46:30.323 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:46:30.373 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:48:01.224 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 10616 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:48:01.233 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:48:03.799 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:48:03.994 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 184ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:48:05.315 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:05.572 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6b2c5ecd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:05.733 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:05.779 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$517f9d49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:05.798 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3857418b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:05.811 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:48:05.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:06.005 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:06.098 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:11.302 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:48:11.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:11.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.350 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.397 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.429 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.441 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.449 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.475 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.489 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.494 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.664 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:12.798 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:48:16.583 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:48:16.584 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:48:16.848 INFO  [cluster-ClusterId{value='5edb9ea0cb43ba5059b1c415', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:27}] to 39.97.183.122:27017
2020-06-06 21:48:16.890 INFO  [cluster-ClusterId{value='5edb9ea0cb43ba5059b1c415', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33555599}
2020-06-06 21:48:16.893 INFO  [cluster-ClusterId{value='5edb9ea0cb43ba5059b1c415', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:48:20.148 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 22.326 seconds (JVM running for 28.446)
2020-06-06 21:48:20.733 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:28}] to 39.97.183.122:27017
2020-06-06 21:48:20.866 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:28}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:48:20.872 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:48:20.895 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:51:05.964 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 5580 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:51:05.989 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:51:08.418 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:51:08.559 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 128ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:51:09.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.659 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$647b151b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.766 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4ace5397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.811 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31a5f7d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.821 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:51:09.940 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:09.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:10.043 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:14.756 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:51:14.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:14.870 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.446 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.485 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.547 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.566 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.570 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.575 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.581 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.684 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:15.728 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:51:18.690 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:51:18.691 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:51:18.892 INFO  [cluster-ClusterId{value='5edb9f5617e56577eda7bf1a', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:32}] to 39.97.183.122:27017
2020-06-06 21:51:18.929 INFO  [cluster-ClusterId{value='5edb9f5617e56577eda7bf1a', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33333732}
2020-06-06 21:51:18.934 INFO  [cluster-ClusterId{value='5edb9f5617e56577eda7bf1a', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:51:21.409 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 16.97 seconds (JVM running for 20.043)
2020-06-06 21:51:22.033 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:33}] to 39.97.183.122:27017
2020-06-06 21:51:22.179 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:33}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:51:22.185 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:51:22.203 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:54:36.425 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 3492 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:54:36.432 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:54:38.838 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:54:38.981 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 133ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:54:39.868 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.140 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$518e0f1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.323 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$37e14d9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.342 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$1eb8f1dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.358 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:54:40.501 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.540 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:40.626 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:48.156 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:54:48.157 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:48.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.015 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.054 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.072 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.084 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.088 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.100 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.117 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.123 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.244 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:49.316 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:54:52.539 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:54:52.540 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:54:52.795 INFO  [cluster-ClusterId{value='5edba02c8f8080491c09f419', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:34}] to 39.97.183.122:27017
2020-06-06 21:54:52.844 INFO  [cluster-ClusterId{value='5edba02c8f8080491c09f419', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40423219}
2020-06-06 21:54:52.856 INFO  [cluster-ClusterId{value='5edba02c8f8080491c09f419', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:54:55.335 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 20.563 seconds (JVM running for 24.465)
2020-06-06 21:54:56.398 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:35}] to 39.97.183.122:27017
2020-06-06 21:54:56.583 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:35}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:54:56.588 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:54:56.614 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:57:38.820 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 12292 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:57:38.825 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:57:41.230 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:57:41.369 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 127ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:57:42.434 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:42.697 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$647b151b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.043 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.126 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4ace5397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.160 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31a5f7d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.191 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:57:43.362 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.421 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:43.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:50.015 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:57:50.017 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:50.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:50.907 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:50.957 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:50.998 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.040 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.063 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.074 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.080 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.302 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:51.391 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:57:54.108 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:57:54.109 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:57:54.400 INFO  [cluster-ClusterId{value='5edba0e2d8287f2bbbe52152', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:36}] to 39.97.183.122:27017
2020-06-06 21:57:54.442 INFO  [cluster-ClusterId{value='5edba0e2d8287f2bbbe52152', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36292236}
2020-06-06 21:57:54.445 INFO  [cluster-ClusterId{value='5edba0e2d8287f2bbbe52152', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:57:56.752 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 19.438 seconds (JVM running for 22.953)
2020-06-06 21:57:57.541 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:37}] to 39.97.183.122:27017
2020-06-06 21:57:57.706 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:37}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:57:57.713 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:57:57.737 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 21:58:56.887 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 8752 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 21:58:56.891 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 21:58:58.887 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 21:58:59.026 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 126ms. Found 1 MongoDB repository interfaces.
2020-06-06 21:59:00.117 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:00.453 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$18288553] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:00.588 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:00.621 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$fe7bc3cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:00.640 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e5536811] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:00.657 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 21:59:00.949 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:01.023 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:01.124 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:09.820 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 21:59:09.822 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:09.997 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.371 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.521 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.556 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.586 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.599 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.608 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.623 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.634 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.641 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:11.901 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 21:59:16.075 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 21:59:16.082 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 21:59:16.524 INFO  [cluster-ClusterId{value='5edba134f5cc566e78efde50', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:39}] to 39.97.183.122:27017
2020-06-06 21:59:16.578 INFO  [cluster-ClusterId{value='5edba134f5cc566e78efde50', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=44117722}
2020-06-06 21:59:16.599 INFO  [cluster-ClusterId{value='5edba134f5cc566e78efde50', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 21:59:20.967 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 25.329 seconds (JVM running for 29.678)
2020-06-06 21:59:21.984 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:40}] to 39.97.183.122:27017
2020-06-06 21:59:22.346 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:40}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 21:59:22.357 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 21:59:22.440 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:04:20.767 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 19256 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:04:20.772 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:04:23.200 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:04:23.360 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 131ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:04:24.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:24.568 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$461e8383] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:24.716 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:24.751 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$2c71c1ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:24.767 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$13496641] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:24.785 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:04:24.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:25.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:25.115 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:30.362 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:04:30.363 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:30.543 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.388 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.431 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.449 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.467 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.480 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.483 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.493 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.498 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.627 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:31.717 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:04:34.849 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:04:34.850 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:04:35.109 INFO  [cluster-ClusterId{value='5edba2725d0e53396522b7fe', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:44}] to 39.97.183.122:27017
2020-06-06 22:04:35.145 INFO  [cluster-ClusterId{value='5edba2725d0e53396522b7fe', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32917305}
2020-06-06 22:04:35.149 INFO  [cluster-ClusterId{value='5edba2725d0e53396522b7fe', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:04:37.531 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.225 seconds (JVM running for 21.08)
2020-06-06 22:04:38.341 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:45}] to 39.97.183.122:27017
2020-06-06 22:04:38.497 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:45}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:04:38.509 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:04:38.536 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:12:45.324 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 7372 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:12:45.361 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:12:47.777 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:12:47.919 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 130ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:12:48.892 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.373 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b4a4e56d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.619 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.660 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9af823e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.675 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$81cfc82b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.689 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:12:49.838 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:49.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:50.008 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:55.650 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:12:55.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:55.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.570 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.606 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.639 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.654 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.658 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.671 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.673 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.677 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.680 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:56.856 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:12:59.722 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:12:59.723 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:12:59.940 INFO  [cluster-ClusterId{value='5edba46bba040f06e1e20a9c', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:46}] to 39.97.183.122:27017
2020-06-06 22:12:59.985 INFO  [cluster-ClusterId{value='5edba46bba040f06e1e20a9c', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=41745031}
2020-06-06 22:12:59.987 INFO  [cluster-ClusterId{value='5edba46bba040f06e1e20a9c', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:13:02.168 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.237 seconds (JVM running for 21.591)
2020-06-06 22:13:02.908 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:47}] to 39.97.183.122:27017
2020-06-06 22:13:03.079 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:47}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:13:03.085 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:13:03.111 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:21:23.451 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 1404 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:21:23.458 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:21:25.866 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:21:26.000 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 121ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:21:26.929 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.183 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$647b151b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.328 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4ace5397] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.385 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$31a5f7d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.398 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:21:27.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.574 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:27.664 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:32.351 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:21:32.353 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:32.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.252 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.272 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.303 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.306 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.314 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.319 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:33.589 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:21:37.487 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:21:37.488 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:21:38.124 INFO  [cluster-ClusterId{value='5edba671d558a57c1515d0d0', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:49}] to 39.97.183.122:27017
2020-06-06 22:21:38.162 INFO  [cluster-ClusterId{value='5edba671d558a57c1515d0d0', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34213090}
2020-06-06 22:21:38.164 INFO  [cluster-ClusterId{value='5edba671d558a57c1515d0d0', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:21:41.318 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 19.518 seconds (JVM running for 22.781)
2020-06-06 22:21:42.304 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:50}] to 39.97.183.122:27017
2020-06-06 22:21:42.485 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:50}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:21:42.490 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:21:42.530 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:22:29.474 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 7532 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:22:29.479 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:22:31.779 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:22:31.916 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 124ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:22:32.808 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.074 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$57a95369] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.216 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.250 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3dfc91e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.265 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$24d43627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.279 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:22:33.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.452 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:33.550 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:38.985 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:22:38.986 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:39.132 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:39.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.036 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.062 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.065 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.073 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.077 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.211 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:40.278 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:22:43.767 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:22:43.768 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:22:44.077 INFO  [cluster-ClusterId{value='5edba6b3eb7d675d80d8aa0d', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:51}] to 39.97.183.122:27017
2020-06-06 22:22:44.118 INFO  [cluster-ClusterId{value='5edba6b3eb7d675d80d8aa0d', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=36110476}
2020-06-06 22:22:44.121 INFO  [cluster-ClusterId{value='5edba6b3eb7d675d80d8aa0d', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:22:46.800 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 19.194 seconds (JVM running for 22.599)
2020-06-06 22:22:47.937 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:52}] to 39.97.183.122:27017
2020-06-06 22:22:48.101 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:52}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:22:48.109 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:22:48.131 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:24:44.172 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 7388 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:24:44.176 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:24:46.107 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:24:46.267 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 148ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:24:47.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.581 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$8707dc88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.738 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.771 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$6d5b1b04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.789 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5432bf46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.814 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:24:47.932 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:47.997 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:48.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:53.005 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:24:53.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:53.184 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.283 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.341 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.365 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.376 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.390 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.406 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.421 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:54.617 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:55.140 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:24:58.792 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:24:58.795 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:24:59.133 INFO  [cluster-ClusterId{value='5edba73a1b9a0a47d0c07eb3', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:54}] to 39.97.183.122:27017
2020-06-06 22:24:59.171 INFO  [cluster-ClusterId{value='5edba73a1b9a0a47d0c07eb3', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32994532}
2020-06-06 22:24:59.174 INFO  [cluster-ClusterId{value='5edba73a1b9a0a47d0c07eb3', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:25:02.541 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 20.147 seconds (JVM running for 24.315)
2020-06-06 22:25:05.153 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:55}] to 39.97.183.122:27017
2020-06-06 22:25:05.376 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:55}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:25:05.398 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:25:05.432 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:25:31.527 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 22804 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:25:31.533 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:25:34.281 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:25:34.428 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 137ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:25:35.586 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:35.884 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$3fd3ffe4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.030 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.069 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$26273e60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.090 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$cfee2a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.105 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:25:36.278 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.373 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:36.500 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:41.550 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:25:41.552 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:41.731 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.477 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.525 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.538 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.554 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.564 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.568 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.682 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:42.750 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:25:45.680 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:25:45.681 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:25:45.904 INFO  [cluster-ClusterId{value='5edba769d581f137bd38063c', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:56}] to 39.97.183.122:27017
2020-06-06 22:25:45.954 INFO  [cluster-ClusterId{value='5edba769d581f137bd38063c', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=42413190}
2020-06-06 22:25:45.961 INFO  [cluster-ClusterId{value='5edba769d581f137bd38063c', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:25:48.456 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.67 seconds (JVM running for 22.465)
2020-06-06 22:25:49.179 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:57}] to 39.97.183.122:27017
2020-06-06 22:25:49.353 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:57}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:25:49.362 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:25:49.389 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:27:42.993 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 12448 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:27:42.998 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:27:44.802 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:27:44.946 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 132ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:27:45.885 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd035825] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.476 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.510 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a35696a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.529 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8a2e3ae3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.552 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:27:46.670 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.706 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:46.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:51.871 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:27:51.873 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:52.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.121 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.160 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.185 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.210 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.216 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.252 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.257 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.262 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.409 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:53.502 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:27:56.640 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:27:56.641 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:27:56.972 INFO  [cluster-ClusterId{value='5edba7ecb97c594cebccddd9', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:58}] to 39.97.183.122:27017
2020-06-06 22:27:57.018 INFO  [cluster-ClusterId{value='5edba7ecb97c594cebccddd9', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=40693298}
2020-06-06 22:27:57.022 INFO  [cluster-ClusterId{value='5edba7ecb97c594cebccddd9', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:27:59.919 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 18.295 seconds (JVM running for 21.525)
2020-06-06 22:28:00.736 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:59}] to 39.97.183.122:27017
2020-06-06 22:28:00.891 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:59}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:28:00.896 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:28:00.920 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:29:27.899 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 14464 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:29:27.941 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:29:30.439 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:29:30.591 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 143ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:29:31.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:31.906 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd035825] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.065 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.095 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a35696a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.109 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8a2e3ae3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.117 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:29:32.227 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:32.326 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:36.819 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:29:36.820 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:36.997 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.623 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.675 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.685 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.690 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.702 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.706 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.713 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.716 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.824 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:37.925 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:29:41.288 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:29:41.292 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:29:41.561 INFO  [cluster-ClusterId{value='5edba855accf4d0880942746', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:64}] to 39.97.183.122:27017
2020-06-06 22:29:41.599 INFO  [cluster-ClusterId{value='5edba855accf4d0880942746', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32807225}
2020-06-06 22:29:41.601 INFO  [cluster-ClusterId{value='5edba855accf4d0880942746', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:29:43.746 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 17.763 seconds (JVM running for 21.433)
2020-06-06 22:29:44.294 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:65}] to 39.97.183.122:27017
2020-06-06 22:29:44.459 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:65}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:29:44.465 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:29:44.490 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:35:49.460 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 10644 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:35:49.475 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:35:52.533 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:35:52.750 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 203ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:35:54.072 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:54.573 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$57a95369] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:54.794 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:54.854 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3dfc91e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:54.879 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$24d43627] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:54.889 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:35:55.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:55.206 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:35:55.425 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:02.055 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:36:02.057 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:02.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.124 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.206 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.352 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.360 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.400 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.404 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.452 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:04.853 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:05.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:36:12.924 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:36:12.925 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:36:13.486 INFO  [cluster-ClusterId{value='5edba9dc68a6f87ea118f14f', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:66}] to 39.97.183.122:27017
2020-06-06 22:36:13.525 INFO  [cluster-ClusterId{value='5edba9dc68a6f87ea118f14f', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=33399865}
2020-06-06 22:36:13.530 INFO  [cluster-ClusterId{value='5edba9dc68a6f87ea118f14f', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:36:19.599 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 32.084 seconds (JVM running for 37.442)
2020-06-06 22:36:20.610 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:67}] to 39.97.183.122:27017
2020-06-06 22:36:20.870 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:67}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:36:20.883 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:36:20.924 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:37:29.584 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 7104 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:37:29.594 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:37:33.191 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:37:33.409 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 206ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:37:35.129 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:35.563 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7896a897] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:35.777 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:35.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5ee9e713] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:35.880 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$45c18b55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:35.902 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:37:36.129 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:36.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:36.446 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:43.974 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:37:43.975 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:44.301 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.309 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.469 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.497 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.510 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.568 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.599 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.610 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:46.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:47.169 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:37:53.368 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:37:53.378 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:37:53.841 INFO  [cluster-ClusterId{value='5edbaa4147ce725a81b9c446', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:68}] to 39.97.183.122:27017
2020-06-06 22:37:53.884 INFO  [cluster-ClusterId{value='5edbaa4147ce725a81b9c446', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=38048821}
2020-06-06 22:37:53.905 INFO  [cluster-ClusterId{value='5edbaa4147ce725a81b9c446', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:38:01.098 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 33.5 seconds (JVM running for 38.761)
2020-06-06 22:38:02.882 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:69}] to 39.97.183.122:27017
2020-06-06 22:38:03.093 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:69}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:38:03.099 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:38:03.139 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-06-06 22:39:53.608 INFO  [main]com.jg.blog.BlogApplicationTests.logStarting:55 -Starting BlogApplicationTests on DESKTOP-LD5PAQI with PID 13572 (started by adminstrator in E:\Idea代码\blog)
2020-06-06 22:39:53.626 INFO  [main]com.jg.blog.BlogApplicationTests.logStartupProfileInfo:651 -No active profile set, falling back to default profiles: default
2020-06-06 22:39:57.479 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-06-06 22:39:57.642 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 152ms. Found 1 MongoDB repository interfaces.
2020-06-06 22:39:58.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.268 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$371825f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.474 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.555 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e9c4c0db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.591 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d09c651d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.618 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-06-06 22:39:59.785 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:39:59.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:00.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:05.714 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-06-06 22:40:05.715 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:06.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:07.918 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.031 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.080 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.136 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.155 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.169 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.174 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.183 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.201 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.Realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.434 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:08.607 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-06 22:40:17.489 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[39.97.183.122:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-06-06 22:40:17.490 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 39.97.183.122:27017 to client view of cluster
2020-06-06 22:40:17.885 INFO  [cluster-ClusterId{value='5edbaad1f248b241824243e2', description='null'}-39.97.183.122:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:70}] to 39.97.183.122:27017
2020-06-06 22:40:17.935 INFO  [cluster-ClusterId{value='5edbaad1f248b241824243e2', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=39.97.183.122:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 7]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45059375}
2020-06-06 22:40:17.938 INFO  [cluster-ClusterId{value='5edbaad1f248b241824243e2', description='null'}-39.97.183.122:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-06-06 22:40:23.846 INFO  [main]com.jg.blog.BlogApplicationTests.logStarted:61 -Started BlogApplicationTests in 32.127 seconds (JVM running for 36.194)
2020-06-06 22:40:25.831 INFO  [main]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:71}] to 39.97.183.122:27017
2020-06-06 22:40:26.081 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:71}] to 39.97.183.122:27017 because the pool has been closed.
2020-06-06 22:40:26.087 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-06-06 22:40:26.162 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
